

Start learning from source dataset


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5398142000280186;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.18564893509950744;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(A, H), function(B, H) )
%   | | then if ( complex(B, I), complex(A, I) )
%   | | | then return 0.8196873966379739;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else if ( enzyme(A, J), enzyme(K, J), complex(K, L) )
%   | | | | then return 0.22322830017887768;  // std dev = 0,481, 126,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=46 */
%   | | | | else if ( enzyme(B, M), enzyme(N, M), location(N, P) )
%   | | | | | then if ( location(A, P), location(B, P), proteinclass(A, Q) )
%   | | | | | | then return 0.5399671169176942;  // std dev = 0,466, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | | | | else return 0.30885316045162436;  // std dev = 0,498, 142,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=64 */
%   | | | | | else if ( proteinclass(B, R), location(B, S), location(A, S) )
%   | | | | | | then return 0.5320619785777739;  // std dev = 0,469, 92,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=62 */
%   | | | | | | else return 0.3862388227399574;  // std dev = 0,499, 712,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=376 */
%   | | else return 0.29541219267526486;  // std dev = 0,496, 4.224,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.847 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.46072335548061355;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.15821954552644565;  // std dev = 0,468, 1.132,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=367 */
%   | else if ( phenotype(A, G), phenotype(H, G), complex(H, I) )
%   | | then return 0.23525440130498512;  // std dev = 0,491, 2.804,000 (wgt'ed) examples reached here.  /* #neg=1.617 #pos=1.187 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then if ( complex(B, K) )
%   | | | | then return 0.4713627903672305;  // std dev = 0,476, 297,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=194 */
%   | | | | else if ( complex(A, L), complex(M, L), phenotype(M, N) )
%   | | | | | then return 0.1893269170829298;  // std dev = 0,483, 159,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=59 */
%   | | | | | else if ( proteinclass(B, P) )
%   | | | | | | then if ( proteinclass(A, Q), function(A, R), function(B, R) )
%   | | | | | | | then return 0.5801624965977555;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=16 */
%   | | | | | | | else return 0.2138621302973905;  // std dev = 0,489, 91,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=36 */
%   | | | | | | else return 0.4090409225112089;  // std dev = 0,492, 738,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=436 */
%   | | | else return 0.23911582926683356;  // std dev = 0,494, 1.328,000 (wgt'ed) examples reached here.  /* #neg=770 #pos=558 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.3715247459791863;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(A, E), enzyme(B, F), location(A, G) )
%   | then return 0.12992225716167294;  // std dev = 0,472, 554,000 (wgt'ed) examples reached here.  /* #neg=362 #pos=192 */
%   | else if ( phenotype(B, H), function(A, I) )
%   | | then return 0.13949565681378037;  // std dev = 0,470, 1.087,000 (wgt'ed) examples reached here.  /* #neg=729 #pos=358 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then if ( complex(B, K), complex(A, K) )
%   | | | | then return 0.7033529004387021;  // std dev = 0,129, 135,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=133 */
%   | | | | else if ( complex(A, L), enzyme(A, M) )
%   | | | | | then return 0.06237250459499794;  // std dev = 0,449, 109,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=31 */
%   | | | | | else if ( complex(A, N), proteinclass(A, P) )
%   | | | | | | then return 0.1853481979406358;  // std dev = 0,488, 186,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=77 */
%   | | | | | | else if ( complex(A, Q), location(R, J), enzyme(R, S) )
%   | | | | | | | then return 0.26567695759165194;  // std dev = 0,498, 677,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=335 */
%   | | | | | | | else return 0.3103172442720546;  // std dev = 0,495, 1.354,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=750 */
%   | | | else return 0.1744196092538839;  // std dev = 0,489, 2.468,000 (wgt'ed) examples reached here.  /* #neg=1.491 #pos=977 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.39260532970170053;  // std dev = 0,412, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), phenotype(E, D), complex(E, F) )
%   | then return 0.15837974285435702;  // std dev = 0,486, 4.110,000 (wgt'ed) examples reached here.  /* #neg=2.278 #pos=1.832 */
%   | else if ( location(B, G), function(B, H), function(A, H) )
%   | | then return 0.3132854171665017;  // std dev = 0,466, 1.610,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=1.059 */
%   | | else if ( complex(A, I), complex(J, I), phenotype(J, K) )
%   | | | then return 0.056668722347972274;  // std dev = 0,457, 387,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=117 */
%   | | | else if ( location(B, L), location(A, M) )
%   | | | | then return 0.13867036359445312;  // std dev = 0,487, 1.496,000 (wgt'ed) examples reached here.  /* #neg=898 #pos=598 */
%   | | | | else if ( function(B, N), function(A, N) )
%   | | | | | then if ( location(A, P) )
%   | | | | | | then if ( phenotype(B, Q) )
%   | | | | | | | then return 0.005381102505121416;  // std dev = 0,490, 10,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=4 */
%   | | | | | | | else return 0.34232983771100634;  // std dev = 0,491, 64,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=38 */
%   | | | | | | else return 0.5104466449103531;  // std dev = 0,447, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | else return 0.17193147170051634;  // std dev = 0,493, 430,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=180 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(B, D), function(A, D) )
%   then return 0.2185387208677124;  // std dev = 0,462, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(A, E), function(B, F), function(A, F) )
%   | then if ( enzyme(A, G), enzyme(H, G), complex(H, I) )
%   | | then return 0.12044519949225205;  // std dev = 0,477, 132,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | else if ( complex(B, J), location(B, K), location(A, K) )
%   | | | then return 0.3341379021974262;  // std dev = 0,442, 220,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=153 */
%   | | | else if ( proteinclass(A, L), phenotype(M, E), enzyme(M, N) )
%   | | | | then return 0.1560639279986887;  // std dev = 0,496, 174,000 (wgt'ed) examples reached here.  /* #neg=93 #pos=81 */
%   | | | | else if ( location(B, P), location(A, P) )
%   | | | | | then return 0.24790517689987088;  // std dev = 0,494, 338,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=192 */
%   | | | | | else if ( location(B, Q), location(A, R) )
%   | | | | | | then if ( proteinclass(B, S), proteinclass(T, S), complex(T, U) )
%   | | | | | | | then return 0.4631929754588658;  // std dev = 0,431, 24,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=18 */
%   | | | | | | | else return 0.11967836793724063;  // std dev = 0,493, 211,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=88 */
%   | | | | | | else return 0.31137241547845784;  // std dev = 0,480, 47,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | else return 0.11917645606079333;  // std dev = 0,482, 5.424,000 (wgt'ed) examples reached here.  /* #neg=3.184 #pos=2.240 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(B, D), complex(B, E) )
%   then return 0.06453053453582165;  // std dev = 0,472, 450,000 (wgt'ed) examples reached here.  /* #neg=243 #pos=207 */
%   else if ( location(B, F), function(B, G), function(A, G) )
%   | then return 0.1865731568365401;  // std dev = 0,467, 4.004,000 (wgt'ed) examples reached here.  /* #neg=1.438 #pos=2.566 */
%   | else if ( phenotype(A, H), enzyme(B, I) )
%   | | then return -0.01569725724176752;  // std dev = 0,444, 293,000 (wgt'ed) examples reached here.  /* #neg=211 #pos=82 */
%   | | else if ( complex(B, J), location(A, K), location(B, L) )
%   | | | then return 0.026410043055021905;  // std dev = 0,466, 654,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=210 */
%   | | | else if ( proteinclass(A, M), complex(A, N) )
%   | | | | then return 0.004530874095985496;  // std dev = 0,454, 354,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=107 */
%   | | | | else if ( function(A, P), function(Q, P), complex(Q, R) )
%   | | | | | then return 0.08317497944262169;  // std dev = 0,486, 2.909,000 (wgt'ed) examples reached here.  /* #neg=1.759 #pos=1.150 */
%   | | | | | else if ( enzyme(B, S), location(A, T), location(B, U) )
%   | | | | | | then return 0.34693264082854103;  // std dev = 0,472, 35,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=23 */
%   | | | | | | else if ( proteinclass(B, W), location(A, X) )
%   | | | | | | | then return 0.025514179588213448;  // std dev = 0,464, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | | | | | else return 0.21746290316593384;  // std dev = 0,500, 236,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=125 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, D) )
%   then return 0.1926753375552541;  // std dev = 0,445, 305,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=195 */
%   else if ( enzyme(B, E), complex(B, F), location(A, G) )
%   | then return -0.025485219770883433;  // std dev = 0,474, 335,000 (wgt'ed) examples reached here.  /* #neg=213 #pos=122 */
%   | else if ( phenotype(A, H), phenotype(B, H), location(B, I) )
%   | | then return 0.2104636637999965;  // std dev = 0,404, 741,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=573 */
%   | | else if ( phenotype(A, J), function(B, K), location(A, L) )
%   | | | then if ( location(B, L), function(A, K) )
%   | | | | then if ( phenotype(B, M), phenotype(N, J), proteinclass(N, P) )
%   | | | | | then if ( phenotype(N, M), complex(N, Q), function(N, K) )
%   | | | | | | then return 0.14737136936370385;  // std dev = 0,466, 298,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=203 */
%   | | | | | | else if ( function(N, K), proteinclass(R, P), location(R, L) )
%   | | | | | | | then return -0.05765190889779899;  // std dev = 0,501, 155,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=74 */
%   | | | | | | | else return 0.32330617281528556;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else return 0.166761835514831;  // std dev = 0,477, 676,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=405 */
%   | | | | else return 0.032362443384706494;  // std dev = 0,480, 2.667,000 (wgt'ed) examples reached here.  /* #neg=1.659 #pos=1.008 */
%   | | | else return 0.10535343180256533;  // std dev = 0,479, 3.764,000 (wgt'ed) examples reached here.  /* #neg=1.876 #pos=1.888 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(B, C), complex(A, D), complex(B, D) )
%   then return 0.3577378295522641;  // std dev = 0,259, 100,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=94 */
%   else if ( proteinclass(B, E), proteinclass(F, E), phenotype(F, G) )
%   | then return 0.030432684578637993;  // std dev = 0,471, 1.563,000 (wgt'ed) examples reached here.  /* #neg=800 #pos=763 */
%   | else if ( phenotype(B, H), phenotype(A, H) )
%   | | then return 0.18180597019628966;  // std dev = 0,394, 567,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=448 */
%   | | else if ( phenotype(A, I), phenotype(J, I), complex(J, K) )
%   | | | then if ( complex(B, K), complex(A, K) )
%   | | | | then return 0.3789740104843202;  // std dev = 0,140, 79,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=78 */
%   | | | | else if ( enzyme(B, L), complex(A, K) )
%   | | | | | then return -0.022543351056923094;  // std dev = 0,463, 276,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=90 */
%   | | | | | else if ( complex(B, K), complex(M, K), proteinclass(M, N) )
%   | | | | | | then return 0.11771058692445231;  // std dev = 0,469, 138,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=81 */
%   | | | | | | else if ( enzyme(A, P), enzyme(Q, P), proteinclass(Q, R) )
%   | | | | | | | then return -0.04333270416862154;  // std dev = 0,457, 293,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=99 */
%   | | | | | | | else return 0.05525257989903394;  // std dev = 0,487, 2.599,000 (wgt'ed) examples reached here.  /* #neg=1.454 #pos=1.145 */
%   | | | else return 0.08582838942830351;  // std dev = 0,480, 3.333,000 (wgt'ed) examples reached here.  /* #neg=1.657 #pos=1.676 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, D), complex(B, E) )
%   then return 0.21992309184546505;  // std dev = 0,366, 112,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=88 */
%   else if ( enzyme(B, F), complex(B, G), phenotype(B, H) )
%   | then return -0.08846212491076456;  // std dev = 0,460, 202,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=68 */
%   | else if ( complex(A, I), location(B, J), location(A, J) )
%   | | then return 0.08235337864388052;  // std dev = 0,455, 2.236,000 (wgt'ed) examples reached here.  /* #neg=965 #pos=1.271 */
%   | | else if ( complex(A, K), location(B, L), location(A, M) )
%   | | | then return -0.018537167406000102;  // std dev = 0,473, 1.216,000 (wgt'ed) examples reached here.  /* #neg=741 #pos=475 */
%   | | | else if ( location(B, N), function(A, P), function(B, P) )
%   | | | | then return 0.10736966052687592;  // std dev = 0,466, 2.069,000 (wgt'ed) examples reached here.  /* #neg=734 #pos=1.335 */
%   | | | | else if ( location(A, Q), proteinclass(B, R), phenotype(A, S) )
%   | | | | | then return -0.03931946267122935;  // std dev = 0,447, 158,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=46 */
%   | | | | | else if ( enzyme(B, T), phenotype(B, U), phenotype(A, W) )
%   | | | | | | then if ( proteinclass(A, X), proteinclass(Y, X), enzyme(Y, Z) )
%   | | | | | | | then return 0.3931266145462235;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.24284693453455825;  // std dev = 0,496, 21,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=11 */
%   | | | | | | else return 0.035458774753592374;  // std dev = 0,486, 2.931,000 (wgt'ed) examples reached here.  /* #neg=1.753 #pos=1.178 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, D), complex(A, E) )
%   then return 0.15346329453298885;  // std dev = 0,380, 141,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=101 */
%   else if ( enzyme(B, F), phenotype(B, G), complex(B, H) )
%   | then return -0.06379965922009345;  // std dev = 0,461, 219,000 (wgt'ed) examples reached here.  /* #neg=141 #pos=78 */
%   | else if ( enzyme(A, I), enzyme(J, I), proteinclass(J, K) )
%   | | then return 5.540792999768735E-4;  // std dev = 0,457, 652,000 (wgt'ed) examples reached here.  /* #neg=356 #pos=296 */
%   | | else if ( proteinclass(B, L), phenotype(B, M), complex(A, N) )
%   | | | then return -0.016555490330813025;  // std dev = 0,457, 402,000 (wgt'ed) examples reached here.  /* #neg=185 #pos=217 */
%   | | | else if ( enzyme(B, P), complex(A, Q), phenotype(A, R) )
%   | | | | then return -0.0020029143494154143;  // std dev = 0,462, 310,000 (wgt'ed) examples reached here.  /* #neg=199 #pos=111 */
%   | | | | else if ( phenotype(B, S), phenotype(A, S) )
%   | | | | | then return 0.14191313807251174;  // std dev = 0,382, 538,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=433 */
%   | | | | | else if ( phenotype(A, T), location(B, U), location(A, U) )
%   | | | | | | then if ( complex(A, W), proteinclass(B, X) )
%   | | | | | | | then return 0.14880686228139423;  // std dev = 0,456, 98,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=64 */
%   | | | | | | | else return 0.05726109474970753;  // std dev = 0,482, 1.461,000 (wgt'ed) examples reached here.  /* #neg=699 #pos=762 */
%   | | | | | | else return 0.03960880768653909;  // std dev = 0,480, 5.127,000 (wgt'ed) examples reached here.  /* #neg=2.715 #pos=2.412 */


Predicates from source: ['interaction(protein,protein).', 'location(protein,loc).', 'enzyme(protein,enz).', 'function(protein,fun).', 'proteinclass(protein,class).', 'phenotype(protein,phe).', 'complex(protein,com).'] 

Source structured tree: [['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(A, H), function(B, H)', 'false,false,true,false,false,true': 'location(A, P), location(B, P), proteinclass(A, Q)', 'false,false,true': 'complex(B, I), complex(A, I)', 'false,false,true,false,false': 'enzyme(B, M), enzyme(N, M), location(N, P)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,true,false': 'enzyme(A, J), enzyme(K, J), complex(K, L)', 'false,false,true,false,false,false': 'proteinclass(B, R), location(B, S), location(A, S)'}, {'false,false,true,false,false,true,true': [0.466, 7, 15], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.481, 80, 46], 'false,false,true,false,false,true,false': [0.498, 78, 64], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,true': [0.192, 2, 50], 'false,false,true,false,false,false,false': [0.499, 336, 376], 'false,true': [0.469, 807, 393], 'false,false,true,false,false,false,true': [0.469, 30, 62]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), phenotype(H, G), complex(H, I)', 'false,false,false': 'location(B, J), location(A, J)', 'false,false,false,true,false,false,true': 'proteinclass(A, Q), function(A, R), function(B, R)', 'false,false,false,true,false,false': 'proteinclass(B, P)', 'false': 'phenotype(B, E), location(A, F)', 'false,false,false,true,false': 'complex(A, L), complex(M, L), phenotype(M, N)', 'false,false,false,true': 'complex(B, K)'}, {'false,false,false,true,false,false,false': [0.492, 302, 436], 'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'true': [0.466, 757, 1621], 'false,false,false,false': [0.494, 770, 558], 'false,false,false,true,false,false,true,false': [0.489, 55, 36], 'false,false,false,true,false,false,true,true': [0.426, 5, 16], 'false,false,false,true,true': [0.476, 103, 194], 'false,false,false,true,false,true': [0.483, 100, 59]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(B, H), function(A, I)', 'false,false,false': 'location(B, J), location(A, J)', 'false,false,false,true,false,false,false': 'complex(A, Q), location(R, J), enzyme(R, S)', 'false,false,false,true,false,false': 'complex(A, N), proteinclass(A, P)', 'false': 'phenotype(A, E), enzyme(B, F), location(A, G)', 'false,false,false,true,false': 'complex(A, L), enzyme(A, M)', 'false,false,false,true': 'complex(B, K), complex(A, K)'}, {'false,true': [0.472, 362, 192], 'false,false,true': [0.47, 729, 358], 'false,false,false,true,false,false,true': [0.488, 109, 77], 'true': [0.466, 757, 1621], 'false,false,false,false': [0.489, 1491, 977], 'false,false,false,true,false,false,false,false': [0.495, 604, 750], 'false,false,false,true,false,false,false,true': [0.498, 342, 335], 'false,false,false,true,true': [0.129, 2, 133], 'false,false,false,true,false,true': [0.449, 78, 31]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,false': 'location(B, G), function(B, H), function(A, H)', 'false,false,false': 'complex(A, I), complex(J, I), phenotype(J, K)', 'false,false,false,false,false,true,true': 'phenotype(B, Q)', 'false,false,false,false,false': 'function(B, N), function(A, N)', 'false': 'phenotype(A, D), phenotype(E, D), complex(E, F)', 'false,false,false,false': 'location(B, L), location(A, M)', 'false,false,false,false,false,true': 'location(A, P)'}, {'false,true': [0.486, 2278, 1832], 'false,false,true': [0.466, 551, 1059], 'false,false,false,false,false,true,false': [0.447, 2, 7], 'false,false,false,false,false,false': [0.493, 250, 180], 'true': [0.412, 193, 639], 'false,false,false,false,false,true,true,false': [0.491, 26, 38], 'false,false,false,false,false,true,true,true': [0.49, 6, 4], 'false,false,false,true': [0.457, 270, 117], 'false,false,false,false,true': [0.487, 898, 598]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(B, D), function(A, D)', 'false,true,false,false,false,false,true': 'proteinclass(B, S), proteinclass(T, S), complex(T, U)', 'false,true': 'enzyme(A, G), enzyme(H, G), complex(H, I)', 'false,true,false': 'complex(B, J), location(B, K), location(A, K)', 'false,true,false,false': 'proteinclass(A, L), phenotype(M, E), enzyme(M, N)', 'false,true,false,false,false': 'location(B, P), location(A, P)', 'false': 'phenotype(A, E), function(B, F), function(A, F)', 'false,true,false,false,false,false': 'location(B, Q), location(A, R)'}, {'false,true,true': [0.477, 80, 52], 'false,true,false,false,true': [0.496, 93, 81], 'false,true,false,false,false,false,true,true': [0.431, 6, 18], 'false,true,false,false,false,true': [0.494, 146, 192], 'true': [0.462, 757, 1621], 'false,true,false,false,false,false,true,false': [0.493, 123, 88], 'false,true,false,false,false,false,false': [0.48, 18, 29], 'false,true,false,true': [0.442, 67, 153], 'false,false': [0.482, 3184, 2240]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(B, D), complex(B, E)', 'false,false': 'phenotype(A, H), enzyme(B, I)', 'false,false,false': 'complex(B, J), location(A, K), location(B, L)', 'false,false,false,false,false,false': 'enzyme(B, S), location(A, T), location(B, U)', 'false,false,false,false,false': 'function(A, P), function(Q, P), complex(Q, R)', 'false': 'location(B, F), function(B, G), function(A, G)', 'false,false,false,false': 'proteinclass(A, M), complex(A, N)', 'false,false,false,false,false,false,false': 'proteinclass(B, W), location(A, X)'}, {'false,true': [0.467, 1438, 2566], 'false,false,true': [0.444, 211, 82], 'false,false,false,false,false,false,true': [0.472, 12, 23], 'true': [0.472, 243, 207], 'false,false,false,false,false,true': [0.486, 1759, 1150], 'false,false,false,false,false,false,false,true': [0.464, 9, 4], 'false,false,false,false,false,false,false,false': [0.5, 111, 125], 'false,false,false,true': [0.466, 444, 210], 'false,false,false,false,true': [0.454, 247, 107]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, D)', 'false,false': 'phenotype(A, H), phenotype(B, H), location(B, I)', 'false,false,false': 'phenotype(A, J), function(B, K), location(A, L)', 'false,false,false,true,true': 'phenotype(B, M), phenotype(N, J), proteinclass(N, P)', 'false,false,false,true,true,true,false': 'function(N, K), proteinclass(R, P), location(R, L)', 'false': 'enzyme(B, E), complex(B, F), location(A, G)', 'false,false,false,true,true,true': 'phenotype(N, M), complex(N, Q), function(N, K)', 'false,false,false,true': 'location(B, L), function(A, K)'}, {'false,false,false,true,true,true,true': [0.466, 95, 203], 'false,true': [0.474, 213, 122], 'false,false,true': [0.404, 168, 573], 'false,false,false,true,true,false': [0.477, 271, 405], 'true': [0.445, 110, 195], 'false,false,false,true,false': [0.48, 1659, 1008], 'false,false,false,false': [0.479, 1876, 1888], 'false,false,false,true,true,true,false,false': [0.35, 1, 6], 'false,false,false,true,true,true,false,true': [0.501, 81, 74]}], ['interaction(A, B)', {'': 'proteinclass(B, C), complex(A, D), complex(B, D)', 'false,false': 'phenotype(B, H), phenotype(A, H)', 'false,false,false': 'phenotype(A, I), phenotype(J, I), complex(J, K)', 'false,false,false,true,false,false,false': 'enzyme(A, P), enzyme(Q, P), proteinclass(Q, R)', 'false,false,false,true,false,false': 'complex(B, K), complex(M, K), proteinclass(M, N)', 'false': 'proteinclass(B, E), proteinclass(F, E), phenotype(F, G)', 'false,false,false,true,false': 'enzyme(B, L), complex(A, K)', 'false,false,false,true': 'complex(B, K), complex(A, K)'}, {'false,true': [0.471, 800, 763], 'false,false,true': [0.394, 119, 448], 'false,false,false,true,false,false,true': [0.469, 57, 81], 'true': [0.259, 6, 94], 'false,false,false,false': [0.48, 1657, 1676], 'false,false,false,true,false,false,false,false': [0.487, 1454, 1145], 'false,false,false,true,false,false,false,true': [0.457, 194, 99], 'false,false,false,true,true': [0.14, 1, 78], 'false,false,false,true,false,true': [0.463, 186, 90]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, D), complex(B, E)', 'false,false': 'complex(A, I), location(B, J), location(A, J)', 'false,false,false': 'complex(A, K), location(B, L), location(A, M)', 'false,false,false,false,false,false,true': 'proteinclass(A, X), proteinclass(Y, X), enzyme(Y, Z)', 'false,false,false,false,false,false': 'enzyme(B, T), phenotype(B, U), phenotype(A, W)', 'false,false,false,false,false': 'location(A, Q), proteinclass(B, R), phenotype(A, S)', 'false': 'enzyme(B, F), complex(B, G), phenotype(B, H)', 'false,false,false,false': 'location(B, N), function(A, P), function(B, P)'}, {'false,false,false,false,false,false,false': [0.486, 1753, 1178], 'false,true': [0.46, 134, 68], 'false,false,true': [0.455, 965, 1271], 'false,false,false,false,false,false,true,true': [0.816, 1, 2], 'true': [0.366, 24, 88], 'false,false,false,false,false,true': [0.447, 112, 46], 'false,false,false,false,false,false,true,false': [0.496, 10, 11], 'false,false,false,true': [0.473, 741, 475], 'false,false,false,false,true': [0.466, 734, 1335]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, D), complex(A, E)', 'false,false': 'enzyme(A, I), enzyme(J, I), proteinclass(J, K)', 'false,false,true': 'proteinclass(B, L), phenotype(B, M), complex(A, N)', 'false,false,true,false,false': 'phenotype(B, S), phenotype(A, S)', 'false': 'enzyme(B, F), phenotype(B, G), complex(B, H)', 'false,false,true,false,false,false,true': 'complex(A, W), proteinclass(B, X)', 'false,false,true,false': 'enzyme(B, P), complex(A, Q), phenotype(A, R)', 'false,false,true,false,false,false': 'phenotype(A, T), location(B, U), location(A, U)'}, {'false,true': [0.461, 141, 78], 'false,false,true,false,false,false,false': [0.48, 2715, 2412], 'false,false,true,false,false,false,true,true': [0.456, 34, 64], 'true': [0.38, 40, 101], 'false,false,true,false,true': [0.462, 199, 111], 'false,false,true,true': [0.457, 185, 217], 'false,false,true,false,false,false,true,false': [0.482, 699, 762], 'false,false,true,false,false,true': [0.382, 105, 433]}]] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)', 'false,false,true,false,false,true': 'accounttype(A, P), accounttype(B, P), tweets(A, Q)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false,false': 'tweets(B, M), tweets(N, M), accounttype(N, P)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,true,false': 'tweets(A, J), tweets(K, J), tweets(K, L)', 'false,false,true,false,false,false': 'tweets(B, R), accounttype(B, S), accounttype(A, S)'}, {'false,false,true,false,false,true,true': [0.466, 7, 15], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.481, 80, 46], 'false,false,true,false,false,true,false': [0.498, 78, 64], 'false,false,true,true': [0.192, 2, 50], 'false,false,true,false,false,false,false': [0.499, 336, 376], 'false,true': [0.469, 807, 393], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,false,false,false,true': [0.469, 30, 62]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,true': 'tweets(A, Q), tweets(A, R), tweets(B, R)', 'false,false,false,true,false,false': 'tweets(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,true,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(B, K)'}, {'false,false,false,true,false,false,false': [0.492, 302, 436], 'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'true': [0.466, 757, 1621], 'false,false,false,true,true': [0.476, 103, 194], 'false,false,false,false': [0.494, 770, 558], 'false,false,false,true,false,false,true,true': [0.426, 5, 16], 'false,false,false,true,false,false,true,false': [0.489, 55, 36], 'false,false,false,true,false,true': [0.483, 100, 59]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,false': 'tweets(A, Q), accounttype(R, J), tweets(R, S)', 'false,false,false,true,false,false': 'tweets(A, N), tweets(A, P)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,false': 'tweets(A, L), tweets(A, M)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [0.472, 362, 192], 'false,false,true': [0.47, 729, 358], 'false,false,false,true,false,false,true': [0.488, 109, 77], 'true': [0.466, 757, 1621], 'false,false,false,true,false,true': [0.449, 78, 31], 'false,false,false,false': [0.489, 1491, 977], 'false,false,false,true,false,false,false,false': [0.495, 604, 750], 'false,false,false,true,true': [0.129, 2, 133], 'false,false,false,true,false,false,false,true': [0.498, 342, 335]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, G), tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false,false,true,true': 'tweets(B, Q)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, M)', 'false,false,false,false,false,true': 'accounttype(A, P)', 'false,false,false,false,false': 'tweets(B, N), tweets(A, N)'}, {'false,true': [0.486, 2278, 1832], 'false,false,true': [0.466, 551, 1059], 'false,false,false,false,false,false': [0.493, 250, 180], 'true': [0.412, 193, 639], 'false,false,false,false,false,true,false': [0.447, 2, 7], 'false,false,false,false,false,true,true,false': [0.491, 26, 38], 'false,false,false,false,false,true,true,true': [0.49, 6, 4], 'false,false,false,false,true': [0.487, 898, 598], 'false,false,false,true': [0.457, 270, 117]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, D)', 'false,true,false,false,false,false,true': 'tweets(B, S), tweets(T, S), tweets(T, U)', 'false,true': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,true,false': 'tweets(B, J), accounttype(B, K), accounttype(A, K)', 'false,true,false,false': 'tweets(A, L), tweets(M, E), tweets(M, N)', 'false,true,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, E), tweets(B, F), tweets(A, F)', 'false,true,false,false,false,false': 'accounttype(B, Q), accounttype(A, R)'}, {'false,true,true': [0.477, 80, 52], 'false,true,false,false,true': [0.496, 93, 81], 'false,true,false,false,false,false,true,true': [0.431, 6, 18], 'false,true,false,false,false,true': [0.494, 146, 192], 'true': [0.462, 757, 1621], 'false,true,false,false,false,false,true,false': [0.493, 123, 88], 'false,true,false,false,false,false,false': [0.48, 18, 29], 'false,true,false,true': [0.442, 67, 153], 'false,false': [0.482, 3184, 2240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), tweets(B, E)', 'false,false': 'tweets(A, H), tweets(B, I)', 'false,false,false': 'tweets(B, J), accounttype(A, K), accounttype(B, L)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), accounttype(B, U)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'accounttype(B, F), tweets(B, G), tweets(A, G)', 'false,false,false,false': 'tweets(A, M), tweets(A, N)', 'false,false,false,false,false,false,false': 'tweets(B, W), accounttype(A, X)'}, {'false,true': [0.467, 1438, 2566], 'false,false,true': [0.444, 211, 82], 'false,false,false,false,false,false,true': [0.472, 12, 23], 'true': [0.472, 243, 207], 'false,false,false,false,false,true': [0.486, 1759, 1150], 'false,false,false,false,false,false,false,true': [0.464, 9, 4], 'false,false,false,false,false,false,false,false': [0.5, 111, 125], 'false,false,false,true': [0.466, 444, 210], 'false,false,false,false,true': [0.454, 247, 107]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,false': 'tweets(A, H), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(A, J), tweets(B, K), accounttype(A, L)', 'false,false,false,true,true,true,false': 'tweets(N, K), tweets(R, P), accounttype(R, L)', 'false': 'tweets(B, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,true,true': 'tweets(N, M), tweets(N, Q), tweets(N, K)', 'false,false,false,true,true': 'tweets(B, M), tweets(N, J), tweets(N, P)', 'false,false,false,true': 'accounttype(B, L), tweets(A, K)'}, {'false,false,false,true,true,true,true': [0.466, 95, 203], 'false,true': [0.474, 213, 122], 'false,false,true': [0.404, 168, 573], 'false,false,false,true,true,false': [0.477, 271, 405], 'true': [0.445, 110, 195], 'false,false,false,true,true,true,false,true': [0.501, 81, 74], 'false,false,false,false': [0.479, 1876, 1888], 'false,false,false,true,true,true,false,false': [0.35, 1, 6], 'false,false,false,true,false': [0.48, 1659, 1008]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,true,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,true,false,false': 'tweets(B, K), tweets(M, K), tweets(M, N)', 'false': 'tweets(B, E), tweets(F, E), tweets(F, G)', 'false,false,false,true,false': 'tweets(B, L), tweets(A, K)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [0.471, 800, 763], 'false,false,true': [0.394, 119, 448], 'false,false,false,true,false,false,true': [0.469, 57, 81], 'true': [0.259, 6, 94], 'false,false,false,true,false,true': [0.463, 186, 90], 'false,false,false,false': [0.48, 1657, 1676], 'false,false,false,true,false,false,false,false': [0.487, 1454, 1145], 'false,false,false,true,true': [0.14, 1, 78], 'false,false,false,true,false,false,false,true': [0.457, 194, 99]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, E)', 'false,false': 'tweets(A, I), accounttype(B, J), accounttype(A, J)', 'false,false,false': 'tweets(A, K), accounttype(B, L), accounttype(A, M)', 'false,false,false,false,false,false,true': 'tweets(A, X), tweets(Y, X), tweets(Y, Z)', 'false,false,false,false,false,false': 'tweets(B, T), tweets(B, U), tweets(A, W)', 'false,false,false,false,false': 'accounttype(A, Q), tweets(B, R), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'accounttype(B, N), tweets(A, P), tweets(B, P)'}, {'false,false,false,false,false,false,false': [0.486, 1753, 1178], 'false,false,true': [0.455, 965, 1271], 'true': [0.366, 24, 88], 'false,false,false,false,false,true': [0.447, 112, 46], 'false,false,false,false,false,false,true,false': [0.496, 10, 11], 'false,false,false,false,true': [0.466, 734, 1335], 'false,true': [0.46, 134, 68], 'false,false,false,false,false,false,true,true': [0.816, 1, 2], 'false,false,false,true': [0.473, 741, 475]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true': 'tweets(B, L), tweets(B, M), tweets(A, N)', 'false,false,true,false,false': 'tweets(B, S), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,true,false,false,false,true': 'tweets(A, W), tweets(B, X)', 'false,false,true,false': 'tweets(B, P), tweets(A, Q), tweets(A, R)', 'false,false,true,false,false,false': 'tweets(A, T), accounttype(B, U), accounttype(A, U)'}, {'false,false,true,false,false,false,true,false': [0.482, 699, 762], 'false,true': [0.461, 141, 78], 'false,false,true,false,false,true': [0.382, 105, 433], 'true': [0.38, 40, 101], 'false,false,true,false,true': [0.462, 199, 111], 'false,false,true,true': [0.457, 185, 217], 'false,false,true,false,false,false,false': [0.48, 2715, 2412], 'false,false,true,false,false,false,true,true': [0.456, 34, 64]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false,false;tweets(A, G), tweets(A, H), tweets(B, H).;true;false', '0;false,false,true,false,false,true;accounttype(A, P), accounttype(B, P), tweets(A, Q).;false;false', '0;false,false,true;tweets(B, I), tweets(A, I).;false;true', '0;false,false,true,false,false;tweets(B, M), tweets(N, M), accounttype(N, P).;true;true', '0;false;tweets(B, E), tweets(A, F).;false;true', '0;false,false,true,false;tweets(A, J), tweets(K, J), tweets(K, L).;false;true', '0;false,false,true,false,false,false;tweets(B, R), accounttype(B, S), accounttype(A, S).;false;false', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '1;false,false,false,true,false,false,true;tweets(A, Q), tweets(A, R), tweets(B, R).;false;false', '1;false,false,false,true,false,false;tweets(B, P).;true;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,true,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '1;false,false,false,true;tweets(B, K).;false;true', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false,false;tweets(B, H), tweets(A, I).;false;true', '2;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '2;false,false,false,true,false,false,false;tweets(A, Q), accounttype(R, J), tweets(R, S).;false;false', '2;false,false,false,true,false,false;tweets(A, N), tweets(A, P).;false;true', '2;false;tweets(A, E), tweets(B, F), accounttype(A, G).;false;true', '2;false,false,false,true,false;tweets(A, L), tweets(A, M).;false;true', '2;false,false,false,true;tweets(B, K), tweets(A, K).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, G), tweets(B, H), tweets(A, H).;false;true', '3;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '3;false,false,false,false,false,true,true;tweets(B, Q).;false;false', '3;false,false,false,false;accounttype(B, L), accounttype(A, M).;false;true', '3;false,false,false,false,false,true;accounttype(A, P).;true;false', '3;false,false,false,false,false;tweets(B, N), tweets(A, N).;true;false', '4;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, D).;false;true', '4;false,true,false,false,false,false,true;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '4;false,true;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '4;false,true,false;tweets(B, J), accounttype(B, K), accounttype(A, K).;false;true', '4;false,true,false,false;tweets(A, L), tweets(M, E), tweets(M, N).;false;true', '4;false,true,false,false,false;accounttype(B, P), accounttype(A, P).;false;true', '4;false;tweets(A, E), tweets(B, F), tweets(A, F).;true;false', '4;false,true,false,false,false,false;accounttype(B, Q), accounttype(A, R).;true;false', '5;;follows(A, B) :- tweets(B, C), accounttype(B, D), tweets(B, E).;false;true', '5;false,false;tweets(A, H), tweets(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(A, K), accounttype(B, L).;false;true', '5;false,false,false,false,false,false;tweets(B, S), accounttype(A, T), accounttype(B, U).;false;true', '5;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '5;false;accounttype(B, F), tweets(B, G), tweets(A, G).;false;true', '5;false,false,false,false;tweets(A, M), tweets(A, N).;false;true', '5;false,false,false,false,false,false,false;tweets(B, W), accounttype(A, X).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '6;false,false;tweets(A, H), tweets(B, H), accounttype(B, I).;false;true', '6;false,false,false;tweets(A, J), tweets(B, K), accounttype(A, L).;true;false', '6;false,false,false,true,true,true,false;tweets(N, K), tweets(R, P), accounttype(R, L).;false;false', '6;false;tweets(B, E), tweets(B, F), accounttype(A, G).;false;true', '6;false,false,false,true,true,true;tweets(N, M), tweets(N, Q), tweets(N, K).;false;true', '6;false,false,false,true,true;tweets(B, M), tweets(N, J), tweets(N, P).;true;false', '6;false,false,false,true;accounttype(B, L), tweets(A, K).;true;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '7;false,false;tweets(B, H), tweets(A, H).;false;true', '7;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '7;false,false,false,true,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;false', '7;false,false,false,true,false,false;tweets(B, K), tweets(M, K), tweets(M, N).;false;true', '7;false;tweets(B, E), tweets(F, E), tweets(F, G).;false;true', '7;false,false,false,true,false;tweets(B, L), tweets(A, K).;false;true', '7;false,false,false,true;tweets(B, K), tweets(A, K).;false;true', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, E).;false;true', '8;false,false;tweets(A, I), accounttype(B, J), accounttype(A, J).;false;true', '8;false,false,false;tweets(A, K), accounttype(B, L), accounttype(A, M).;false;true', '8;false,false,false,false,false,false,true;tweets(A, X), tweets(Y, X), tweets(Y, Z).;false;false', '8;false,false,false,false,false,false;tweets(B, T), tweets(B, U), tweets(A, W).;true;false', '8;false,false,false,false,false;accounttype(A, Q), tweets(B, R), tweets(A, S).;false;true', '8;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '8;false,false,false,false;accounttype(B, N), tweets(A, P), tweets(B, P).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '9;false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '9;false,false,true;tweets(B, L), tweets(B, M), tweets(A, N).;false;true', '9;false,false,true,false,false;tweets(B, S), tweets(A, S).;false;true', '9;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '9;false,false,true,false,false,false,true;tweets(A, W), tweets(B, X).;false;false', '9;false,false,true,false;tweets(B, P), tweets(A, Q), tweets(A, R).;false;true', '9;false,false,true,false,false,false;tweets(A, T), accounttype(B, U), accounttype(A, U).;true;false']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(A, H), tweets(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25084299902645113;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.08499602486893311;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, P) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return 0.024791943236280468;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.04701416545850269;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(B, H), tweets(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(A, M) )
%   | | | | | then return 0.05216826041782394;  // std dev = 4,775, 125,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | | | else if ( tweets(A, N), tweets(A, P) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, Q), accounttype(R, J), tweets(R, S) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.1714418872949271;  // std dev = 5,692, 139,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=53 */
%   | | | else return 0.30744780806908606;  // std dev = 6,511, 174,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=89 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.10122028075763115;  // std dev = 10,632, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( accounttype(B, G), tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( accounttype(B, L), accounttype(A, M) )
%   | | | | then return 0.2467545428394538;  // std dev = 7,665, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F), tweets(A, F) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.11951628186707984;  // std dev = 13,181, 755,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=292 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), tweets(B, E) )
%   then return 0.14451733248102785;  // std dev = 17,835, 1.325,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=721 */
%   else if ( accounttype(B, F), tweets(B, G), tweets(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(A, H), tweets(B, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, J), accounttype(A, K), accounttype(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, M), tweets(A, N) )
%   | | | | then return 0.00953586232213288;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, S), accounttype(A, T), accounttype(B, U) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, W), accounttype(A, X) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.07392357879559726;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.0965723216089609;  // std dev = 16,350, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.18595789551833664;  // std dev = 7,020, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(A, H), tweets(B, H), accounttype(B, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J), tweets(B, K), accounttype(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.0033827144241675385;  // std dev = 6,640, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.08676139532160647;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(F, E), tweets(F, G) )
%   | then return 0.07902022751417553;  // std dev = 11,186, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then if ( tweets(B, K), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, L), tweets(A, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, K), tweets(M, K), tweets(M, N) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | | | then return 0.008381705583984116;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.05865331168086797;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, E) )
%   then return 0.052664003717467864;  // std dev = 16,346, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.12240778531492749;  // std dev = 7,017, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.004357772680451495;  // std dev = 4,775, 125,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | else if ( tweets(A, K), accounttype(B, L), accounttype(A, M) )
%   | | | then return 0.01111042938015268;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else if ( accounttype(B, N), tweets(A, P), tweets(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(A, Q), tweets(B, R), tweets(A, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, T), tweets(B, U), tweets(A, W) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.047431423941677146;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.039860782099731436;  // std dev = 16,345, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.09216386068213078;  // std dev = 7,016, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then if ( tweets(B, L), tweets(B, M), tweets(A, N) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, P), tweets(A, Q), tweets(A, R) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, S), tweets(A, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, T), accounttype(B, U), accounttype(A, U) )
%   | | | | | | then if ( tweets(A, W), tweets(B, X) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.003571968581977015;  // std dev = 4,775, 125,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | | | | | else return 0.00884260469613455;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | else return -0.03859069594734069;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.588593
   AUC PR    = 0.554984
   CLL	      = -0.684071
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 204.368 seconds
Total inference time: 4.414 seconds
AUC ROC: 0.588593


Results in test set
   AUC ROC   = 0.588593
   AUC PR    = 0.554984
   CLL	      = -0.684071
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total inference time: 4.414 seconds
AUC ROC: 0.588593
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.22, 266, 172], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false': 'tweets(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,true,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(B, K)'}, {'false,false,false,true,false,false,false': [2.191, 24, 6], 'false,true': [11.336, 287, 233], 'false,false,true': [6.142, 145, 51], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false': [1.247, 7, 2], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,false': 'tweets(A, Q), accounttype(R, J), tweets(R, S)', 'false,false,false,true,false,false': 'tweets(A, N), tweets(A, P)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,false': 'tweets(A, L), tweets(A, M)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false': [6.511, 85, 89], 'false,false,false,true,false,false,false,false': [5.692, 86, 53], 'false,false,false,true,false,false,false,true': [0.0, 0, 0], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [4.775, 95, 30]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false': 'accounttype(B, G), tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, M)'}, {'false,true': [10.632, 342, 171], 'false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [7.665, 121, 121]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, D)', 'false': 'tweets(A, E), tweets(B, F), tweets(A, F)'}, {'false,false': [13.181, 463, 292], 'false,true': [0.0, 0, 0], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), tweets(B, E)', 'false,false': 'tweets(A, H), tweets(B, I)', 'false,false,false': 'tweets(B, J), accounttype(A, K), accounttype(B, L)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), accounttype(B, U)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'accounttype(B, F), tweets(B, G), tweets(A, G)', 'false,false,false,false': 'tweets(A, M), tweets(A, N)', 'false,false,false,false,false,false,false': 'tweets(B, W), accounttype(A, X)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [17.835, 604, 721], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.521, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [6.131, 145, 51]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false': 'tweets(B, E), tweets(B, F), accounttype(A, G)', 'false,false': 'tweets(A, H), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(A, J), tweets(B, K), accounttype(A, L)'}, {'false,false,false,false': [6.64, 176, 59], 'false,true': [7.02, 90, 113], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true': [16.35, 514, 608]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,true,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,true,false,false': 'tweets(B, K), tweets(M, K), tweets(M, N)', 'false': 'tweets(B, E), tweets(F, E), tweets(F, G)', 'false,false,false,true,false': 'tweets(B, L), tweets(A, K)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [11.186, 287, 233], 'false,false,true': [0.0, 0, 0], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false': [2.521, 31, 8], 'false,false,false,true,false,false,false,false': [0.0, 0, 0], 'false,false,false,true,false,false,false,true': [6.131, 145, 51], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, E)', 'false,false': 'tweets(A, I), accounttype(B, J), accounttype(A, J)', 'false,false,false': 'tweets(A, K), accounttype(B, L), accounttype(A, M)', 'false,false,false,false,false,false': 'tweets(B, T), tweets(B, U), tweets(A, W)', 'false,false,false,false,false': 'accounttype(A, Q), tweets(B, R), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'accounttype(B, N), tweets(A, P), tweets(B, P)'}, {'false,false,false,false,false,false,false': [2.521, 31, 8], 'false,true': [7.017, 90, 113], 'false,false,true': [4.775, 95, 30], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [16.346, 514, 608], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.846, 50, 21], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true': 'tweets(B, L), tweets(B, M), tweets(A, N)', 'false,false,true,false,false': 'tweets(B, S), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,true,false,false,false,true': 'tweets(A, W), tweets(B, X)', 'false,false,true,false': 'tweets(B, P), tweets(A, Q), tweets(A, R)', 'false,false,true,false,false,false': 'tweets(A, T), accounttype(B, U), accounttype(A, U)'}, {'false,true': [7.016, 90, 113], 'false,false,true,false,false,false,false': [3.846, 50, 21], 'false,false,true,false,false,false,true,true': [0.0, 0, 0], 'true': [16.345, 514, 608], 'false,false,true,false,true': [0.0, 0, 0], 'false,false,false': [2.521, 31, 8], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false,false,true,false': [4.775, 95, 30], 'false,false,true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false;tweets(B, E), tweets(A, F).;false;false', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,true,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;false', '1;false,false,false,true;tweets(B, K).;false;true', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false;tweets(A, E), tweets(B, F), accounttype(A, G).;false;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, D).;false;false', '5;;follows(A, B) :- tweets(B, C), accounttype(B, D), tweets(B, E).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '6;false;tweets(B, E), tweets(B, F), accounttype(A, G).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '7;false;tweets(B, E), tweets(F, E), tweets(F, G).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, E).;false;true', '8;false,false;tweets(A, I), accounttype(B, J), accounttype(A, J).;false;true', '8;false,false,false;tweets(A, K), accounttype(B, L), accounttype(A, M).;false;true', '8;false,false,false,false,false;accounttype(A, Q), tweets(B, R), tweets(A, S).;false;false', '8;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '8;false,false,false,false;accounttype(B, N), tweets(A, P), tweets(B, P).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '9;false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '9;false,false,true;tweets(B, L), tweets(B, M), tweets(A, N).;false;true', '9;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '9;false,false,true,false;tweets(B, P), tweets(A, Q), tweets(A, R).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true', 0.6214511041009464)]
Tree #2: [('false,false,false,true,false,false,true', 0), ('false,false,false,true,true', 0), ('false,false,false,true,false,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,true', 0.7397959183673469), ('false,false,false,false', 0.7777777777777778), ('false,false,false,true,false,false,false', 0.8)]
Tree #3: [('false,false,true', 0), ('false,false,false,true,false,false,true', 0), ('false,false,false,true,true', 0), ('false,false,false,true,false,false,false,true', 0), ('false,false,false,false', 0.5114942528735632), ('true', 0.6062111801242236), ('false,false,false,true,false,false,false,false', 0.6187050359712231), ('false,true', 0.6214511041009464), ('false,false,false,true,false,true', 0.76)]
Tree #4: [('false,false,true', 0), ('false,false,false,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.5), ('true', 0.6062111801242236), ('false,true', 0.6666666666666666)]
Tree #5: [('false,true', 0), ('true', 0.6062111801242236), ('false,false', 0.6132450331125828)]
Tree #6: [('false,true', 0), ('false,false,true', 0), ('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('true', 0.5441509433962264), ('false,false,false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #7: [('false,false,true', 0), ('false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5566502463054187), ('false,false,false,false', 0.7489361702127659)]
Tree #8: [('false,false,true', 0), ('false,false,false,true,false,false,true', 0), ('false,false,false,true,false,true', 0), ('false,false,false,true,false,false,false,false', 0), ('false,false,false,true,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,false,true,false,false,false,true', 0.7397959183673469), ('false,false,false,false', 0.7948717948717948)]
Tree #9: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5566502463054187), ('false,false,false,true', 0.704225352112676), ('false,false,true', 0.76), ('false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #10: [('false,false,true,false,false,true', 0), ('false,false,true,false,true', 0), ('false,false,true,true', 0), ('false,false,true,false,false,false,true,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5566502463054187), ('false,false,true,false,false,false,false', 0.704225352112676), ('false,false,true,false,false,false,true,false', 0.76), ('false,false,false', 0.7948717948717948)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.2508429990264519;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.084996024868933;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.024791943236280384;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | else return 0.04701416545850254;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.19143235956676707;  // std dev = 10,120, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.09848123417202834;  // std dev = 10,646, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else return 0.25415491794872874;  // std dev = 7,718, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else return 0.12002452212550489;  // std dev = 13,239, 755,000 (wgt'ed) examples reached here.  /* #neg=463 #pos=292 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), tweets(B, E) )
%   then return 0.14584695899672917;  // std dev = 17,864, 1.325,000 (wgt'ed) examples reached here.  /* #neg=604 #pos=721 */
%   else return -0.010628063094621396;  // std dev = 6,654, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.09638909186537037;  // std dev = 16,350, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.19393279712698494;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else return -0.008580405472237823;  // std dev = 6,653, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.0864752362156314;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(F, E), tweets(F, G) )
%   | then return 0.0816423022990364;  // std dev = 11,231, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else return -0.0069348672009126216;  // std dev = 6,653, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, E) )
%   then return 0.052410928863951496;  // std dev = 16,346, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.1281600719620464;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return -0.013436723723015352;  // std dev = 4,775, 125,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=30 */
%   | | else if ( tweets(A, K), accounttype(B, L), accounttype(A, M) )
%   | | | then return 0.042337924164308996;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | else if ( accounttype(B, N), tweets(A, P), tweets(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(A, Q), tweets(B, R), tweets(A, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.06781348089836324;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.03966856090525265;  // std dev = 16,345, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.09652881269379862;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then if ( tweets(B, L), tweets(B, M), tweets(A, N) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, P), tweets(A, Q), tweets(A, R) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.0054513825030860176;  // std dev = 6,138, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return -0.05456555807386506;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.584258
   AUC PR    = 0.552769
   CLL	      = -0.686783
   Precision = 0.56 at threshold = 0.5
   Recall    = 0.538462
   F1        = 0.54902


Total learning time: 174.96800000000002 seconds
Total inference time: 1.252 seconds
AUC ROC: 0.584258


Best model AUC ROC so far: 0.588593


******************************************
Best model found
******************************************
Total revision time: 385.002
Best validation AUC ROC: 0.588593


Results
   AUC ROC   = 0.670204
   AUC PR    = 0.614681
   CLL	      = -0.642695
   Precision = 0.638487 at threshold = 0.5
   Recall    = 0.810734
   F1        = 0.714375


Total inference time: 8.678 seconds
AUC ROC: 0.670204
Dataset: yeast->twitter, Fold: 1, Type: transfer, Time: 00:26:10
{'Parameter Learning results': {'F1': 0.714375, 'Learning time': 204.368, 'Recall': 0.810734, 'AUC PR': 0.614681, 'AUC ROC': 0.670204, 'CLL': -0.642695, 'Inference time': 8.486, 'Precision': [0.638487, 0.5]}, 'F1': 0.714375, 'Learning time': 385.002, 'Recall': 0.810734, 'AUC PR': 0.614681, 'AUC ROC': 0.670204, 'Mapping results': {'Finding best mapping': 0.7059314250946045, 'Knowledge compiling time': 0.1614701747894287, 'Total time': 5.466803789138794, 'Generating mappings time': 0.09161210060119629, 'Possible mappings': 1458, 'Generating paths time': 4.507782459259033}, 'CLL': -0.642695, 'Inference time': 8.678, 'Precision': [0.638487, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2953217099686181;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.6170141833264585;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.12481560176617795;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.28934159564997186;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.3138451376311591;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.5602765946739812;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.09040699961564004;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.1456489350995117;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.25544396504018674;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.5243494850117562;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.10893247925776796;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.25035142239059655;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.27119663943451633;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.4776435248675061;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.07904155157974005;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.12697824250829925;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21434006589346677;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.4178192410070285;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.09391529972732618;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21027160903852193;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22687127601954168;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.3839327874961612;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.09115193712242843;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.03799870373894804;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1750364240763374;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.3187802468060836;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.08007894754641993;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17197435224648763;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.18440609551807563;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2955537862431351;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.057105970757237993;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.09628175221440763;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.13980372601974603;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.23938432568879928;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.06761908965919006;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.14645750237908162;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then return 0.13761291641748175;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.2227642562770938;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.0669944884018586;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.02291857739175187;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.10979170699664419;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.1801875707461082;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.05661907716341858;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.11433257931207602;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then return 0.10828649707955408;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.16714218601195022;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.03972978884506359;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.0705646110501786;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.0851734320706171;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.13698536343358944;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.04707019797674135;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.08417209890999892;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.08818083037033851;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.1258983666871707;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.04785769983713238;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.012215218966472511;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.06550974051695709;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.10535150322458203;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.03889723332668014;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.06486167644453979;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.06745468144626868;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.09548737537629778;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.02681539844407904;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.05046507171832119;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05008712778509982;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.08189740035811596;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.03198323809501064;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.11243535096764834;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05131798679728922;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.04967885473545552;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.07294806483386942;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.033523512445940075;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.0051254355304122265;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.03813886296629491;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.06425345980304739;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then if ( tweets(A, G) )
%   | | | then if ( accounttype(H, F), tweets(H, E), tweets(H, G) )
%   | | | | then return 0.026190156472953672;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | | else return 0.09352720014861136;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0378896114214694;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03889950372719807;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else return 0.05609464931900332;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, J) )
%   | | then return 0.02760290361140207;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.004305059141106619;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.748983
   AUC PR    = 0.72186
   CLL	      = -0.59057
   Precision = 0.789474 at threshold = 0.5
   Recall    = 0.529661
   F1        = 0.633981


Total learning time: 719.961 seconds
Total inference time: 1.458 seconds
AUC ROC: 0.748983


Dataset: yeast->twitter, Fold: 1, Type: scratch, Time: 00:38:12
{'F1': 0.633981, 'Learning time': 719.961, 'Recall': 0.529661, 'AUC PR': 0.72186, 'AUC ROC': 0.748983, 'CLL': -0.59057, 'Inference time': 1.458, 'Precision': [0.789474, 0.5]}


Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true,false,false,true': 'accounttype(A, P), accounttype(B, P), tweets(A, Q)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false,false': 'tweets(B, M), tweets(N, M), accounttype(N, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J), tweets(K, J), tweets(K, L)', 'false,false,true,false,false,false': 'tweets(B, R), accounttype(B, S), accounttype(A, S)'}, {'false,false,true,false,false,true,true': [0.466, 7, 15], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.481, 80, 46], 'false,false,true,false,false,true,false': [0.498, 78, 64], 'false,false,true,true': [0.192, 2, 50], 'false,false,true,false,false,false,false': [0.499, 336, 376], 'false,true': [0.469, 807, 393], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,false,false,false,true': [0.469, 30, 62]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,true': 'tweets(A, Q), accounttype(A, R), accounttype(B, R)', 'false,false,false,true,false,false': 'tweets(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,true,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(B, K)'}, {'false,false,false,true,false,false,false': [0.492, 302, 436], 'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'true': [0.466, 757, 1621], 'false,false,false,true,true': [0.476, 103, 194], 'false,false,false,false': [0.494, 770, 558], 'false,false,false,true,false,false,true,true': [0.426, 5, 16], 'false,false,false,true,false,false,true,false': [0.489, 55, 36], 'false,false,false,true,false,true': [0.483, 100, 59]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,false': 'tweets(A, Q), accounttype(R, J), tweets(R, S)', 'false,false,false,true,false,false': 'tweets(A, N), tweets(A, P)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,false': 'tweets(A, L), tweets(A, M)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [0.472, 362, 192], 'false,false,true': [0.47, 729, 358], 'false,false,false,true,false,false,true': [0.488, 109, 77], 'true': [0.466, 757, 1621], 'false,false,false,true,false,true': [0.449, 78, 31], 'false,false,false,false': [0.489, 1491, 977], 'false,false,false,true,false,false,false,false': [0.495, 604, 750], 'false,false,false,true,true': [0.129, 2, 133], 'false,false,false,true,false,false,false,true': [0.498, 342, 335]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, G), accounttype(B, H), accounttype(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false,false,true,true': 'tweets(B, Q)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, M)', 'false,false,false,false,false,true': 'accounttype(A, P)', 'false,false,false,false,false': 'accounttype(B, N), accounttype(A, N)'}, {'false,true': [0.486, 2278, 1832], 'false,false,true': [0.466, 551, 1059], 'false,false,false,false,false,false': [0.493, 250, 180], 'true': [0.412, 193, 639], 'false,false,false,false,false,true,false': [0.447, 2, 7], 'false,false,false,false,false,true,true,false': [0.491, 26, 38], 'false,false,false,false,false,true,true,true': [0.49, 6, 4], 'false,false,false,false,true': [0.487, 898, 598], 'false,false,false,true': [0.457, 270, 117]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), accounttype(A, D)', 'false,true,false,false,false,false,true': 'tweets(B, S), tweets(T, S), tweets(T, U)', 'false,true': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,true,false': 'tweets(B, J), accounttype(B, K), accounttype(A, K)', 'false,true,false,false': 'tweets(A, L), tweets(M, E), tweets(M, N)', 'false,true,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,true,false,false,false,false': 'accounttype(B, Q), accounttype(A, R)'}, {'false,true,true': [0.477, 80, 52], 'false,true,false,false,true': [0.496, 93, 81], 'false,true,false,false,false,false,true,true': [0.431, 6, 18], 'false,true,false,false,false,true': [0.494, 146, 192], 'true': [0.462, 757, 1621], 'false,true,false,false,false,false,true,false': [0.493, 123, 88], 'false,true,false,false,false,false,false': [0.48, 18, 29], 'false,true,false,true': [0.442, 67, 153], 'false,false': [0.482, 3184, 2240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), tweets(B, E)', 'false,false': 'tweets(A, H), tweets(B, I)', 'false,false,false': 'tweets(B, J), accounttype(A, K), accounttype(B, L)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), accounttype(B, U)', 'false,false,false,false,false': 'accounttype(A, P), accounttype(Q, P), tweets(Q, R)', 'false': 'accounttype(B, F), accounttype(B, G), accounttype(A, G)', 'false,false,false,false': 'tweets(A, M), tweets(A, N)', 'false,false,false,false,false,false,false': 'tweets(B, W), accounttype(A, X)'}, {'false,true': [0.467, 1438, 2566], 'false,false,true': [0.444, 211, 82], 'false,false,false,false,false,false,true': [0.472, 12, 23], 'true': [0.472, 243, 207], 'false,false,false,false,false,true': [0.486, 1759, 1150], 'false,false,false,false,false,false,false,true': [0.464, 9, 4], 'false,false,false,false,false,false,false,false': [0.5, 111, 125], 'false,false,false,true': [0.466, 444, 210], 'false,false,false,false,true': [0.454, 247, 107]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,false': 'tweets(A, H), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(A, J), accounttype(B, K), accounttype(A, L)', 'false,false,false,true,true,true,false': 'accounttype(N, K), tweets(R, P), accounttype(R, L)', 'false': 'tweets(B, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,true,true': 'tweets(N, M), tweets(N, Q), accounttype(N, K)', 'false,false,false,true,true': 'tweets(B, M), tweets(N, J), tweets(N, P)', 'false,false,false,true': 'accounttype(B, L), accounttype(A, K)'}, {'false,false,false,true,true,true,true': [0.466, 95, 203], 'false,true': [0.474, 213, 122], 'false,false,true': [0.404, 168, 573], 'false,false,false,true,true,false': [0.477, 271, 405], 'true': [0.445, 110, 195], 'false,false,false,true,true,true,false,true': [0.501, 81, 74], 'false,false,false,false': [0.479, 1876, 1888], 'false,false,false,true,true,true,false,false': [0.35, 1, 6], 'false,false,false,true,false': [0.48, 1659, 1008]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,true,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,true,false,false': 'tweets(B, K), tweets(M, K), tweets(M, N)', 'false': 'tweets(B, E), tweets(F, E), tweets(F, G)', 'false,false,false,true,false': 'tweets(B, L), tweets(A, K)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [0.471, 800, 763], 'false,false,true': [0.394, 119, 448], 'false,false,false,true,false,false,true': [0.469, 57, 81], 'true': [0.259, 6, 94], 'false,false,false,true,false,true': [0.463, 186, 90], 'false,false,false,false': [0.48, 1657, 1676], 'false,false,false,true,false,false,false,false': [0.487, 1454, 1145], 'false,false,false,true,true': [0.14, 1, 78], 'false,false,false,true,false,false,false,true': [0.457, 194, 99]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, E)', 'false,false': 'tweets(A, I), accounttype(B, J), accounttype(A, J)', 'false,false,false': 'tweets(A, K), accounttype(B, L), accounttype(A, M)', 'false,false,false,false,false,false,true': 'tweets(A, X), tweets(Y, X), tweets(Y, Z)', 'false,false,false,false,false,false': 'tweets(B, T), tweets(B, U), tweets(A, W)', 'false,false,false,false,false': 'accounttype(A, Q), tweets(B, R), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'accounttype(B, N), accounttype(A, P), accounttype(B, P)'}, {'false,false,false,false,false,false,false': [0.486, 1753, 1178], 'false,false,true': [0.455, 965, 1271], 'true': [0.366, 24, 88], 'false,false,false,false,false,true': [0.447, 112, 46], 'false,false,false,false,false,false,true,false': [0.496, 10, 11], 'false,false,false,false,true': [0.466, 734, 1335], 'false,true': [0.46, 134, 68], 'false,false,false,false,false,false,true,true': [0.816, 1, 2], 'false,false,false,true': [0.473, 741, 475]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true': 'tweets(B, L), tweets(B, M), tweets(A, N)', 'false,false,true,false,false': 'tweets(B, S), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,true,false,false,false,true': 'tweets(A, W), tweets(B, X)', 'false,false,true,false': 'tweets(B, P), tweets(A, Q), tweets(A, R)', 'false,false,true,false,false,false': 'tweets(A, T), accounttype(B, U), accounttype(A, U)'}, {'false,false,true,false,false,false,true,false': [0.482, 699, 762], 'false,true': [0.461, 141, 78], 'false,false,true,false,false,true': [0.382, 105, 433], 'true': [0.38, 40, 101], 'false,false,true,false,true': [0.462, 199, 111], 'false,false,true,true': [0.457, 185, 217], 'false,false,true,false,false,false,false': [0.48, 2715, 2412], 'false,false,true,false,false,false,true,true': [0.456, 34, 64]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;true;false', '0;false,false,true,false,false,true;accounttype(A, P), accounttype(B, P), tweets(A, Q).;false;false', '0;false,false,true;tweets(B, I), tweets(A, I).;false;true', '0;false,false,true,false,false;tweets(B, M), tweets(N, M), accounttype(N, P).;true;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false,true,false;tweets(A, J), tweets(K, J), tweets(K, L).;false;true', '0;false,false,true,false,false,false;tweets(B, R), accounttype(B, S), accounttype(A, S).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '1;false,false,false,true,false,false,true;tweets(A, Q), accounttype(A, R), accounttype(B, R).;false;false', '1;false,false,false,true,false,false;tweets(B, P).;true;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,true,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '1;false,false,false,true;tweets(B, K).;false;true', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false,false;tweets(B, H), accounttype(A, I).;false;true', '2;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '2;false,false,false,true,false,false,false;tweets(A, Q), accounttype(R, J), tweets(R, S).;false;false', '2;false,false,false,true,false,false;tweets(A, N), tweets(A, P).;false;true', '2;false;tweets(A, E), tweets(B, F), accounttype(A, G).;false;true', '2;false,false,false,true,false;tweets(A, L), tweets(A, M).;false;true', '2;false,false,false,true;tweets(B, K), tweets(A, K).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, G), accounttype(B, H), accounttype(A, H).;false;true', '3;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '3;false,false,false,false,false,true,true;tweets(B, Q).;false;false', '3;false,false,false,false;accounttype(B, L), accounttype(A, M).;false;true', '3;false,false,false,false,false,true;accounttype(A, P).;true;false', '3;false,false,false,false,false;accounttype(B, N), accounttype(A, N).;true;false', '4;;follows(A, B) :- tweets(B, C), accounttype(B, D), accounttype(A, D).;false;true', '4;false,true,false,false,false,false,true;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '4;false,true;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '4;false,true,false;tweets(B, J), accounttype(B, K), accounttype(A, K).;false;true', '4;false,true,false,false;tweets(A, L), tweets(M, E), tweets(M, N).;false;true', '4;false,true,false,false,false;accounttype(B, P), accounttype(A, P).;false;true', '4;false;tweets(A, E), accounttype(B, F), accounttype(A, F).;true;false', '4;false,true,false,false,false,false;accounttype(B, Q), accounttype(A, R).;true;false', '5;;follows(A, B) :- tweets(B, C), accounttype(B, D), tweets(B, E).;false;true', '5;false,false;tweets(A, H), tweets(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(A, K), accounttype(B, L).;false;true', '5;false,false,false,false,false,false;tweets(B, S), accounttype(A, T), accounttype(B, U).;false;true', '5;false,false,false,false,false;accounttype(A, P), accounttype(Q, P), tweets(Q, R).;false;true', '5;false;accounttype(B, F), accounttype(B, G), accounttype(A, G).;false;true', '5;false,false,false,false;tweets(A, M), tweets(A, N).;false;true', '5;false,false,false,false,false,false,false;tweets(B, W), accounttype(A, X).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '6;false,false;tweets(A, H), tweets(B, H), accounttype(B, I).;false;true', '6;false,false,false;tweets(A, J), accounttype(B, K), accounttype(A, L).;true;false', '6;false,false,false,true,true,true,false;accounttype(N, K), tweets(R, P), accounttype(R, L).;false;false', '6;false;tweets(B, E), tweets(B, F), accounttype(A, G).;false;true', '6;false,false,false,true,true,true;tweets(N, M), tweets(N, Q), accounttype(N, K).;false;true', '6;false,false,false,true,true;tweets(B, M), tweets(N, J), tweets(N, P).;true;false', '6;false,false,false,true;accounttype(B, L), accounttype(A, K).;true;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '7;false,false;tweets(B, H), tweets(A, H).;false;true', '7;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '7;false,false,false,true,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;false', '7;false,false,false,true,false,false;tweets(B, K), tweets(M, K), tweets(M, N).;false;true', '7;false;tweets(B, E), tweets(F, E), tweets(F, G).;false;true', '7;false,false,false,true,false;tweets(B, L), tweets(A, K).;false;true', '7;false,false,false,true;tweets(B, K), tweets(A, K).;false;true', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, E).;false;true', '8;false,false;tweets(A, I), accounttype(B, J), accounttype(A, J).;false;true', '8;false,false,false;tweets(A, K), accounttype(B, L), accounttype(A, M).;false;true', '8;false,false,false,false,false,false,true;tweets(A, X), tweets(Y, X), tweets(Y, Z).;false;false', '8;false,false,false,false,false,false;tweets(B, T), tweets(B, U), tweets(A, W).;true;false', '8;false,false,false,false,false;accounttype(A, Q), tweets(B, R), tweets(A, S).;false;true', '8;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '8;false,false,false,false;accounttype(B, N), accounttype(A, P), accounttype(B, P).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '9;false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '9;false,false,true;tweets(B, L), tweets(B, M), tweets(A, N).;false;true', '9;false,false,true,false,false;tweets(B, S), tweets(A, S).;false;true', '9;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '9;false,false,true,false,false,false,true;tweets(A, W), tweets(B, X).;false;false', '9;false,false,true,false;tweets(B, P), tweets(A, Q), tweets(A, R).;false;true', '9;false,false,true,false,false,false;tweets(A, T), accounttype(B, U), accounttype(A, U).;true;false']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(B, I), tweets(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, J), tweets(K, J), tweets(K, L) )
%   | | | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, P) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.38284525220877635;  // std dev = 10,367, 519,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=367 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.4673828244631159;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(A, M) )
%   | | | | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | | else if ( tweets(A, N), tweets(A, P) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, Q), accounttype(R, J), tweets(R, S) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.010583288814538955;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.12663584660539587;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.3050933764453634;  // std dev = 13,290, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.014975198723668908;  // std dev = 8,560, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( accounttype(B, G), accounttype(B, H), accounttype(A, H) )
%   | | then return 0.08599693842672598;  // std dev = 4,681, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( accounttype(B, L), accounttype(A, M) )
%   | | | | then return 0.3579667078657274;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.10088823682474955;  // std dev = 12,086, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.06492293122505485;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.2232370700319803;  // std dev = 11,335, 656,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=440 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), tweets(B, E) )
%   then return 0.13045216092897516;  // std dev = 16,247, 1.235,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=664 */
%   else if ( accounttype(B, F), accounttype(B, G), accounttype(A, G) )
%   | then return 0.03861358551448727;  // std dev = 4,901, 137,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=31 */
%   | else if ( tweets(A, H), tweets(B, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, J), accounttype(A, K), accounttype(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, M), tweets(A, N) )
%   | | | | then return 0.07432996841790923;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.09937597232916177;  // std dev = 15,224, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.10974765008125593;  // std dev = 5,628, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, H), tweets(B, H), accounttype(B, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J), accounttype(B, K), accounttype(A, L) )
%   | | | then if ( accounttype(B, L), accounttype(A, K) )
%   | | | | then if ( tweets(B, M), tweets(N, J), tweets(N, P) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.04936994198140921;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | else return 0.061263390523881786;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return -0.05966516171111585;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.14659337924613383;  // std dev = 13,194, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, E), tweets(F, E), tweets(F, G) )
%   | then return -0.06275632282386302;  // std dev = 8,784, 408,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=147 */
%   | else if ( tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then if ( tweets(B, K), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, L), tweets(A, K) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, K), tweets(M, K), tweets(M, N) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | | | then return 0.043932485767831174;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.05019963130697012;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, E) )
%   then return 0.05305742583708659;  // std dev = 15,046, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.09932605338095579;  // std dev = 5,627, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.034477692300706804;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else if ( tweets(A, K), accounttype(B, L), accounttype(A, M) )
%   | | | then return 0.041872641348153467;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else if ( accounttype(B, N), accounttype(A, P), accounttype(B, P) )
%   | | | | then return -0.042499502673414236;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.04068970137734173;  // std dev = 15,043, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.07716889218871403;  // std dev = 5,626, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then if ( tweets(B, L), tweets(B, M), tweets(A, N) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, P), tweets(A, Q), tweets(A, R) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, S), tweets(A, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, T), accounttype(B, U), accounttype(A, U) )
%   | | | | | | then if ( tweets(A, W), tweets(B, X) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.028762949242496713;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | | | else return 0.03386561842440469;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else return -0.03616771929121111;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.756577
   AUC PR    = 0.719849
   CLL	      = -0.597117
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 68.846 seconds
Total inference time: 1.839 seconds
AUC ROC: 0.756577


Results in test set
   AUC ROC   = 0.756577
   AUC PR    = 0.719849
   CLL	      = -0.597117
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total inference time: 1.839 seconds
AUC ROC: 0.756577
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false': 'tweets(A, J), tweets(K, J), tweets(K, L)'}, {'false,true': [10.946, 167, 424], 'true': [12.27, 404, 240], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,true': [4.609, 88, 28], 'false,false,false': [3.473, 49, 16]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false': 'tweets(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,true,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(B, K)'}, {'false,false,false,true,false,false,false': [1.604, 18, 3], 'false,true': [10.946, 167, 424], 'false,false,true': [5.522, 119, 41], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [12.27, 404, 240], 'false,false,false,false': [0.0, 0, 0], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,true,false,false,false': 'tweets(A, Q), accounttype(R, J), tweets(R, S)', 'false,false,false,true,false,false': 'tweets(A, N), tweets(A, P)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true,false': 'tweets(A, L), tweets(A, M)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [10.367, 152, 367], 'false,false,true': [3.446, 15, 57], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [12.27, 404, 240], 'false,false,false,false': [3.026, 31, 13], 'false,false,false,true,false,false,false,false': [1.604, 18, 3], 'false,false,false,true,false,false,false,true': [0.0, 0, 0], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [4.609, 88, 28]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false': 'accounttype(B, G), accounttype(B, H), accounttype(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, M)'}, {'false,true': [8.56, 309, 102], 'false,false,true': [4.681, 74, 32], 'true': [13.29, 310, 517], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.446, 15, 57]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), accounttype(A, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,true': 'tweets(A, G), tweets(H, G), tweets(H, I)'}, {'false,true,true': [4.609, 88, 28], 'false,false': [11.335, 216, 440], 'false,true,false': [0.0, 0, 0], 'true': [12.086, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), tweets(B, E)', 'false': 'accounttype(B, F), accounttype(B, G), accounttype(A, G)', 'false,false': 'tweets(A, H), tweets(B, I)', 'false,false,false': 'tweets(B, J), accounttype(A, K), accounttype(B, L)', 'false,false,false,false': 'tweets(A, M), tweets(A, N)'}, {'false,true': [4.901, 106, 31], 'false,false,true': [0.0, 0, 0], 'true': [16.247, 571, 664], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.026, 31, 13]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,false': 'tweets(A, H), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(A, J), accounttype(B, K), accounttype(A, L)', 'false,false,false,true,true': 'tweets(B, M), tweets(N, J), tweets(N, P)', 'false': 'tweets(B, E), tweets(B, F), accounttype(A, G)', 'false,false,false,true': 'accounttype(B, L), accounttype(A, K)'}, {'false,false,false,true,true,true': [0.0, 0, 0], 'false,true': [5.628, 71, 86], 'false,false,true': [0.0, 0, 0], 'false,false,false,true,true,false': [4.609, 88, 28], 'true': [15.224, 500, 578], 'false,false,false,false': [1.604, 18, 3], 'false,false,false,true,false': [3.026, 31, 13]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, H), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,true,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,true,false,false': 'tweets(B, K), tweets(M, K), tweets(M, N)', 'false': 'tweets(B, E), tweets(F, E), tweets(F, G)', 'false,false,false,true,false': 'tweets(B, L), tweets(A, K)', 'false,false,false,true': 'tweets(B, K), tweets(A, K)'}, {'false,true': [8.784, 261, 147], 'false,false,true': [0.0, 0, 0], 'false,false,false,true,false,false,true': [0.0, 0, 0], 'true': [13.194, 310, 517], 'false,false,false,false': [1.604, 18, 3], 'false,false,false,true,false,false,false,false': [0.0, 0, 0], 'false,false,false,true,false,false,false,true': [5.514, 119, 41], 'false,false,false,true,true': [0.0, 0, 0], 'false,false,false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, E)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false': 'tweets(A, I), accounttype(B, J), accounttype(A, J)', 'false,false,false': 'tweets(A, K), accounttype(B, L), accounttype(A, M)', 'false,false,false,false': 'accounttype(B, N), accounttype(A, P), accounttype(B, P)'}, {'false,true': [5.627, 71, 86], 'false,false,true': [4.609, 88, 28], 'true': [15.046, 500, 578], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [3.026, 31, 13], 'false,false,false,false,true': [1.604, 18, 3]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true': 'tweets(B, L), tweets(B, M), tweets(A, N)', 'false,false,true,false,false': 'tweets(B, S), tweets(A, S)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,true,false,false,false,true': 'tweets(A, W), tweets(B, X)', 'false,false,true,false': 'tweets(B, P), tweets(A, Q), tweets(A, R)', 'false,false,true,false,false,false': 'tweets(A, T), accounttype(B, U), accounttype(A, U)'}, {'false,true': [5.626, 71, 86], 'false,false,true,false,false,false,false': [3.026, 31, 13], 'false,false,true,false,false,false,true,true': [0.0, 0, 0], 'true': [15.043, 500, 578], 'false,false,true,false,true': [0.0, 0, 0], 'false,false,false': [1.604, 18, 3], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false,false,true,false': [4.609, 88, 28], 'false,false,true,false,false,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,true,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;false', '1;false,false,false,true;tweets(B, K).;false;true', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false,false;tweets(B, H), accounttype(A, I).;false;true', '2;false,false,false;accounttype(B, J), accounttype(A, J).;true;false', '2;false;tweets(A, E), tweets(B, F), accounttype(A, G).;false;true', '2;false,false,false,true,false;tweets(A, L), tweets(A, M).;false;false', '2;false,false,false,true;tweets(B, K), tweets(A, K).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '3;false,false;accounttype(B, G), accounttype(B, H), accounttype(A, H).;false;true', '3;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;false', '4;;follows(A, B) :- tweets(B, C), accounttype(B, D), accounttype(A, D).;false;true', '4;false;tweets(A, E), accounttype(B, F), accounttype(A, F).;false;false', '5;;follows(A, B) :- tweets(B, C), accounttype(B, D), tweets(B, E).;false;true', '5;false;accounttype(B, F), accounttype(B, G), accounttype(A, G).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '6;false,false;tweets(A, H), tweets(B, H), accounttype(B, I).;false;true', '6;false,false,false;tweets(A, J), accounttype(B, K), accounttype(A, L).;true;false', '6;false;tweets(B, E), tweets(B, F), accounttype(A, G).;false;true', '6;false,false,false,true;accounttype(B, L), accounttype(A, K).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '7;false;tweets(B, E), tweets(F, E), tweets(F, G).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, E).;false;true', '8;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '8;false,false;tweets(A, I), accounttype(B, J), accounttype(A, J).;false;true', '8;false,false,false;tweets(A, K), accounttype(B, L), accounttype(A, M).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '9;false,false;tweets(A, I), tweets(J, I), tweets(J, K).;true;false', '9;false,false,true;tweets(B, L), tweets(B, M), tweets(A, N).;false;true', '9;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '9;false,false,true,false;tweets(B, P), tweets(A, Q), tweets(A, R).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true,true', 0), ('false,false,true,false,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,false,true', 0.7586206896551724)]
Tree #2: [('false,false,false,true,false,false,true', 0), ('false,false,false,false', 0), ('false,false,false,true,true', 0), ('false,false,false,true,false,true', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false,true,false,false,false', 0.8571428571428571)]
Tree #3: [('false,false,false,true,false,false,true', 0), ('false,false,false,true,true', 0), ('false,false,false,true,false,false,false,true', 0), ('true', 0.6273291925465838), ('false,false,false,false', 0.7045454545454546), ('false,true', 0.7071290944123314), ('false,false,false,true,false,true', 0.7586206896551724), ('false,false,true', 0.7916666666666666), ('false,false,false,true,false,false,false,false', 0.8571428571428571)]
Tree #4: [('false,false,false,false,false', 0), ('false,false,false,true', 0), ('true', 0.6251511487303507), ('false,false,true', 0.6981132075471698), ('false,true', 0.7518248175182481), ('false,false,false,false,true', 0.7916666666666666)]
Tree #5: [('false,true,false', 0), ('true', 0.6273291925465838), ('false,false', 0.6707317073170732), ('false,true,true', 0.7586206896551724)]
Tree #6: [('false,false,true', 0), ('false,false,false,false,false', 0), ('false,false,false,true', 0), ('true', 0.5376518218623482), ('false,false,false,false,true', 0.7045454545454546), ('false,true', 0.7737226277372263)]
Tree #7: [('false,false,false,true,true,true', 0), ('false,false,true', 0), ('true', 0.536178107606679), ('false,true', 0.5477707006369427), ('false,false,false,true,false', 0.7045454545454546), ('false,false,false,true,true,false', 0.7586206896551724), ('false,false,false,false', 0.8571428571428571)]
Tree #8: [('false,false,true', 0), ('false,false,false,true,false,false,true', 0), ('false,false,false,true,false,true', 0), ('false,false,false,true,false,false,false,false', 0), ('false,false,false,true,true', 0), ('true', 0.6251511487303507), ('false,true', 0.6397058823529411), ('false,false,false,true,false,false,false,true', 0.74375), ('false,false,false,false', 0.8571428571428571)]
Tree #9: [('false,false,false,false,false', 0), ('true', 0.536178107606679), ('false,true', 0.5477707006369427), ('false,false,false,true', 0.7045454545454546), ('false,false,true', 0.7586206896551724), ('false,false,false,false,true', 0.8571428571428571)]
Tree #10: [('false,false,true,false,false,true', 0), ('false,false,true,false,true', 0), ('false,false,true,true', 0), ('false,false,true,false,false,false,true,true', 0), ('true', 0.536178107606679), ('false,true', 0.5477707006369427), ('false,false,true,false,false,false,false', 0.7045454545454546), ('false,false,true,false,false,false,true,false', 0.7586206896551724), ('false,false,false', 0.8571428571428571)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.38284525220877635;  // std dev = 10,367, 519,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=367 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.4673828244631159;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then if ( tweets(B, K), tweets(A, K) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, L), tweets(A, M) )
%   | | | | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | | else return -0.010583288814538955;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0.12663584660539587;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.3050933764453634;  // std dev = 13,290, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.014975198723668908;  // std dev = 8,560, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( accounttype(B, G), accounttype(B, H), accounttype(A, H) )
%   | | then return 0.08599693842672598;  // std dev = 4,681, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.3579667078657274;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.10088823682474955;  // std dev = 12,086, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.06492293122505485;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else return 0.2232370700319803;  // std dev = 11,335, 656,000 (wgt'ed) examples reached here.  /* #neg=216 #pos=440 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), tweets(B, E) )
%   then return 0.13045216092897516;  // std dev = 16,247, 1.235,000 (wgt'ed) examples reached here.  /* #neg=571 #pos=664 */
%   else if ( accounttype(B, F), accounttype(B, G), accounttype(A, G) )
%   | then return 0.03861358551448727;  // std dev = 4,901, 137,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=31 */
%   | else return 0.07432996841790923;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.09937597232916177;  // std dev = 15,224, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.10974765008125593;  // std dev = 5,628, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, H), tweets(B, H), accounttype(B, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J), accounttype(B, K), accounttype(A, L) )
%   | | | then if ( accounttype(B, L), accounttype(A, K) )
%   | | | | then return 0.04936994198140921;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | else return 0.061263390523881786;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return -0.05966516171111585;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.14659337924613383;  // std dev = 13,194, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, E), tweets(F, E), tweets(F, G) )
%   | then return -0.06275632282386302;  // std dev = 8,784, 408,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=147 */
%   | else return 0.03301107991937344;  // std dev = 5,757, 181,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=44 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, E) )
%   then return 0.05305742583708659;  // std dev = 15,046, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.09932605338095579;  // std dev = 5,627, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.03626408616154281;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else if ( tweets(A, K), accounttype(B, L), accounttype(A, M) )
%   | | | then return 0.043934255762264576;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return -0.05539445561449803;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.04068970137734173;  // std dev = 15,043, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.07716889218871403;  // std dev = 5,626, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then if ( tweets(B, L), tweets(B, M), tweets(A, N) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, P), tweets(A, Q), tweets(A, R) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.03174164231355337;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.04673655535376414;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.756577
   AUC PR    = 0.719849
   CLL	      = -0.59688
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 59.753 seconds
Total inference time: 0.995 seconds
AUC ROC: 0.756577


Best model AUC ROC so far: 0.756577


******************************************
Best model found
******************************************
Total revision time: 131.433
Best validation AUC ROC: 0.756577


Results
   AUC ROC   = 0.702182
   AUC PR    = 0.672603
   CLL	      = -0.628394
   Precision = 0.68 at threshold = 0.5
   Recall    = 0.588462
   F1        = 0.630928


Total inference time: 14.631 seconds
AUC ROC: 0.702182
Dataset: yeast->twitter, Fold: 2, Type: transfer, Time: 00:41:00
{'Parameter Learning results': {'F1': 0.630928, 'Learning time': 68.846, 'Recall': 0.588462, 'AUC PR': 0.672603, 'AUC ROC': 0.702182, 'CLL': -0.628394, 'Inference time': 15.488, 'Precision': [0.68, 0.5]}, 'F1': 0.630928, 'Learning time': 131.433, 'Recall': 0.588462, 'AUC PR': 0.672603, 'AUC ROC': 0.702182, 'Mapping results': {'Finding best mapping': 0.8247745037078857, 'Knowledge compiling time': 0.15808486938476562, 'Total time': 5.359872579574585, 'Generating mappings time': 0.11731243133544922, 'Possible mappings': 1458, 'Generating paths time': 4.25969386100769}, 'CLL': -0.628394, 'Inference time': 14.631, 'Precision': [0.68, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.6472308209555876;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.05296217601159877;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.09952824544433897;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1993254056877463;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.2805627282029616;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.6498156017661795;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.15360348055405781;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.0010060779566550774;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.549098241119697;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.046636589713539955;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.08697564907438803;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17328911846492726;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.24286939416089628;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.5512112630944944;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13385798024736764;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 8.835646163368844E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.43557759505931615;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.04126500401346218;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.07527551940942277;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.14767008630297346;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.20427878004648498;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.43708800727225394;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11489165900800301;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 7.758973011973755E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.19119830646834776;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.33100655161038145;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.036664104155083546;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.06458521224134921;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1235777961205822;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.16744578820253844;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.33204979443556765;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.09726476390236147;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 6.812936799187676E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.15123627082198027;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.24844342508210263;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.032693725873089184;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.05498862653883258;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.10180665778558536;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.13435757949895957;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.2492278555378379;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08135383101863741;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.981815657342233E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11756904775468155;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.1876687563199241;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02924500108552499;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.04650549175860373;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.08278216065690562;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.1060397506011726;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.1883287900606578;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.06734704593186719;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.251750232106048E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.09031645667960987;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.14364858664523228;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.026232168413492324;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03910519567603582;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.06660456442738766;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.08267220082015268;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.14424583915059108;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.055272413639729456;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.6105298554672245E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0688390908655739;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.11150158147353458;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02358680449047552;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03272170158921938;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.05314094933548588;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.06388924363144032;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.11205948623285547;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04504116859975111;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.0474016800404585E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05220345901691881;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.08763955896479636;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.021253687739216147;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.027267194615232963;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.04212175139001412;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.04906676000335172;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.08816541943154743;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.03649198584382003;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.552900687251765E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0394588085364301;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.06961572907167762;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.01918778417737564;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.022643236170139462;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03321810241282451;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.03751769451017392;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.07011086202405459;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.029427786683806866;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.118698576379438E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.697251
   AUC PR    = 0.670471
   CLL	      = -0.637301
   Precision = 0.748549 at threshold = 0.5
   Recall    = 0.496154
   F1        = 0.596762


Total learning time: 182.297 seconds
Total inference time: 1.406 seconds
AUC ROC: 0.697251


Dataset: yeast->twitter, Fold: 2, Type: scratch, Time: 00:44:04
{'F1': 0.596762, 'Learning time': 182.297, 'Recall': 0.496154, 'AUC PR': 0.670471, 'AUC ROC': 0.697251, 'CLL': -0.637301, 'Inference time': 1.406, 'Precision': [0.748549, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3029765213064041;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.6057006217153944;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.02771415249081582;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.09881283551445066;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.2499015124191009;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.26146385222658547;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5991127905211964;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.1538011090125544;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.041482268432845706;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.26195770509987254;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.5150608092227671;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.024306925639779996;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.08635362224095879;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21668053336674278;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22656674054116943;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5096464309523057;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13402883159591558;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.036357252670662456;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21953155930279844;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.4111204193418097;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.021262920970161307;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.07474527956991832;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.18315801979572102;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.19115743949407257;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.40720674267139145;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11503476080236148;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.03174024374368541;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.17892939244519368;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.3141825418796683;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then return 0.04188157746962599;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | | else if ( tweets(B, G) )
%   | | | then return 0.15745421419149033;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.09738108407343211;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | else if ( accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.15131096914906783;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else return 0.020750005128064426;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.3114987982673407;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | | else return 0.06650163911499253;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1425772569838136;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.23603762450509483;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.03606366665942301;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.12260445980204351;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.12710849653552952;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.2340980963909117;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.01800243753968006;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.08144578875500447;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.05755706555929886;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11168986511459747;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1774902008011571;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.030923627820140676;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.09781671784146916;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.10098959576200428;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1759434171915245;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.015586918195983929;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.06741790070294855;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.049486519118003613;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.08643271964998046;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1346342522853809;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.02641938592742567;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.07711530908204077;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.07927332329813633;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1332991893384412;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.013471543878489367;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.05532571130835863;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.04230007132502209;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.06632409104376542;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.10321738118856012;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.022500001229099988;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.060253439733887366;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.061673116590251875;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.10201484413152792;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.011625262298408061;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.04508033714379663;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.03597398089443983;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05060117037502902;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.07993088904146513;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.01911009127483825;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.046767993217629915;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.0476691029643235;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.07882946968212366;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.010018554751275404;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.03652009504854331;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.0304601306719722;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, C) )
%   | then return 0.03845458614271817;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return -0.005547389263289258;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.03612459730283215;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   else if ( tweets(B, F) )
%   | then if ( tweets(A, F) )
%   | | then return 0.06243765193281927;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.036671568052569055;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.06142578394326317;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | else if ( tweets(A, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03694155335542689;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | | | else return 0.029447441950451732;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else return 0.011184506846444247;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */


Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).'] 

Source structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(A, H), accounttype(B, H)', 'false,true': 'accounttype(A, F), accounttype(B, F)', 'false,false,true': 'tweets(B, I)', 'false,true,false': 'tweets(B, G)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E)', 'false,false,false': 'tweets(B, J)'}, {'false,true,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.456, 81, 34], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.416, 7, 2], 'false,true,false,true': [0.491, 108, 73], 'false,false,true,false': [0.381, 42, 9], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.438, 43, 123]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, H)', 'false,true': 'tweets(A, F)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'false,true,false': 'tweets(A, G)', 'true': 'tweets(A, C)', 'true,false': 'tweets(A, E)', 'false': 'tweets(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.427, 183, 58], 'false,true,false,false': [0.438, 43, 123], 'false,true,false,true': [0.491, 108, 73], 'false,false,true,false': [0.456, 81, 34], 'true,false,true': [0.375, 191, 39], 'true,false,false': [0.488, 118, 76]}]] 



Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,false,true': 'function(B, I)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E)', 'false,false,false': 'function(B, J)'}, {'false,true,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.488, 118, 76], 'false,true,false,false': [0.456, 81, 34], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.416, 7, 2], 'false,false,true,false': [0.381, 42, 9], 'false,true,false,true': [0.491, 108, 73], 'false,false,false,true': [0.438, 43, 123]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;true;true', '3;false,true;location(A, F), location(B, F).;false;true', '3;false,false,true;function(B, I).;false;false', '3;false,true,false;function(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E).;true;true', '3;false,false,false;function(B, J).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.156660115303962;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else if ( function(B, G) )
%   | | | then return 0.12185408003996846;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0.1690588431090709;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12652833005489178;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.10048838272215738;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10058245297325914;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.0818069789519704;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.10684292618038639;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0789974449301268;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06590519832557229;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06149224389390623;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.052654433946546925;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.047554622437177986;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04179415130489351;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.04928605546308811;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03660221690565094;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03300589385532892;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03765074919083744;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 35.025 seconds
Total inference time: 1.084 seconds
AUC ROC: 0.652806


Results in test set
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total inference time: 1.084 seconds
AUC ROC: 0.652806
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false': 'function(A, E)', 'false,true': 'location(A, F), location(B, F)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)'}, {'false,true,true': [15.449, 594, 399], 'false,false': [0.0, 0, 0], 'true,true': [14.835, 312, 747], 'false,true,false,false': [3.39, 27, 20], 'true,false': [12.139, 244, 372], 'false,true,false,true': [15.797, 738, 377]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [12.139, 244, 372], 'false,false,false': [0.0, 0, 0], 'true,true': [14.835, 312, 747], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [15.797, 738, 377], 'false,false,true,false': [3.39, 27, 20], 'true,false,true': [15.449, 594, 399], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;false', '3;true;location(A, D), location(B, D).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #4: [('false,false', 0), ('false,true,false,false', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false', 0.574468085106383), ('true,false,true', 0.5981873111782477), ('false,true,true', 0.6038961038961039), ('false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else return 0.13892183729352534;  // std dev = 22,369, 2.155,000 (wgt'ed) examples reached here.  /* #neg=1.359 #pos=796 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.1300530255180287;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.09738253712479758;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14168511809830603;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10356579935275341;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07913658690865953;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11202491749629005;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08144753601466784;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06366246416912069;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08742669105304678;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.063460635536431;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.050805143955423696;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06759337677068876;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04911132286345081;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04029074719375526;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05191458031364868;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03781964008208616;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.031796880181312735;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.039687668862145795;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.65396
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 44.032 seconds
Total inference time: 0.91 seconds
AUC ROC: 0.652806


Best model AUC ROC so far: 0.652806


******************************************
Best model found
******************************************
Total revision time: 81.05099999999999
Best validation AUC ROC: 0.652806


Results
   AUC ROC   = 0.657726
   AUC PR    = 0.639384
   CLL	      = -0.654507
   Precision = 0.616571 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.642977


Total inference time: 2.81 seconds
AUC ROC: 0.657726
Dataset: twitter->yeast, Fold: 1, Type: transfer, Time: 00:58:04
{'Parameter Learning results': {'F1': 0.642977, 'Learning time': 35.025, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'CLL': -0.654507, 'Inference time': 2.53, 'Precision': [0.616571, 0.5]}, 'F1': 0.642977, 'Learning time': 81.05099999999999, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'Mapping results': {'Finding best mapping': 0.010036945343017578, 'Knowledge compiling time': 0.11477160453796387, 'Total time': 3.014212131500244, 'Generating mappings time': 0.03780102729797363, 'Possible mappings': 98, 'Generating paths time': 2.851597547531128}, 'CLL': -0.654507, 'Inference time': 2.81, 'Precision': [0.616571, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5914052861387685;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( enzyme(B, E), phenotype(A, F) )
%   | then return 0.15406730244645048;  // std dev = 0,456, 294,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=87 */
%   | else if ( phenotype(B, G) )
%   | | then return 0.2242203636709364;  // std dev = 0,482, 560,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=205 */
%   | | else if ( phenotype(A, H), function(B, I), function(A, I) )
%   | | | then if ( location(B, J), location(A, J) )
%   | | | | then return 0.48684091822187175;  // std dev = 0,483, 237,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=149 */
%   | | | | else if ( location(B, K), phenotype(L, H), proteinclass(L, M) )
%   | | | | | then return 0.3168645314297885;  // std dev = 0,498, 109,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=50 */
%   | | | | | else return 0.5664822684328457;  // std dev = 0,455, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | | else if ( phenotype(A, N), location(A, P) )
%   | | | | then return 0.21752393509950782;  // std dev = 0,480, 576,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=207 */
%   | | | | else if ( function(B, Q), function(A, Q) )
%   | | | | | then return 0.5039255018570015;  // std dev = 0,478, 367,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=237 */
%   | | | | | else return 0.2696922224269859;  // std dev = 0,492, 797,000 (wgt'ed) examples reached here.  /* #neg=469 #pos=328 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5033065564514421;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( enzyme(B, E) )
%   | then return 0.17273546025152048;  // std dev = 0,474, 593,000 (wgt'ed) examples reached here.  /* #neg=388 #pos=205 */
%   | else if ( phenotype(B, F), location(A, G) )
%   | | then return 0.1994669080223384;  // std dev = 0,483, 453,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=168 */
%   | | else if ( phenotype(A, H), function(A, I), function(B, I) )
%   | | | then return 0.3788977818355333;  // std dev = 0,491, 370,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=216 */
%   | | | else if ( phenotype(A, J), function(B, K) )
%   | | | | then return 0.18278744960153412;  // std dev = 0,478, 566,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=200 */
%   | | | | else if ( proteinclass(B, L), proteinclass(M, L), complex(M, N) )
%   | | | | | then return 0.14721684107859973;  // std dev = 0,470, 30,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=10 */
%   | | | | | else if ( function(B, P), function(A, P) )
%   | | | | | | then return 0.47669900996881787;  // std dev = 0,462, 295,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=204 */
%   | | | | | | else if ( complex(A, Q) )
%   | | | | | | | then return 0.34177413519606326;  // std dev = 0,500, 81,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=42 */
%   | | | | | | | else return 0.23033676887316312;  // std dev = 0,492, 576,000 (wgt'ed) examples reached here.  /* #neg=341 #pos=235 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.40261553119707577;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( enzyme(B, E), phenotype(A, F) )
%   | then return 0.10946123135860414;  // std dev = 0,456, 294,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=87 */
%   | else if ( phenotype(B, G) )
%   | | then return 0.1650256869894049;  // std dev = 0,482, 560,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=205 */
%   | | else if ( complex(B, H), phenotype(A, I) )
%   | | | then return 0.1099066074981629;  // std dev = 0,458, 97,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=33 */
%   | | | else if ( location(B, J), location(A, J) )
%   | | | | then if ( enzyme(A, K), function(A, L), function(B, L) )
%   | | | | | then return 0.4258906117236805;  // std dev = 0,455, 54,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=38 */
%   | | | | | else if ( enzyme(B, M) )
%   | | | | | | then return 0.1962537165621549;  // std dev = 0,490, 112,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=46 */
%   | | | | | | else if ( proteinclass(B, N) )
%   | | | | | | | then return 0.21098661293954143;  // std dev = 0,496, 102,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=46 */
%   | | | | | | | else return 0.3036582147768252;  // std dev = 0,488, 759,000 (wgt'ed) examples reached here.  /* #neg=343 #pos=416 */
%   | | | | else return 0.189369326260784;  // std dev = 0,487, 986,000 (wgt'ed) examples reached here.  /* #neg=577 #pos=409 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.30835208319206675;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( enzyme(B, E), complex(A, F) )
%   | then return 0.07475737029568917;  // std dev = 0,451, 219,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=62 */
%   | else if ( phenotype(B, G), enzyme(A, H), location(A, I) )
%   | | then return -0.07658544156177863;  // std dev = 0,359, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | else if ( proteinclass(B, J) )
%   | | | then return 0.13675905152900514;  // std dev = 0,481, 396,000 (wgt'ed) examples reached here.  /* #neg=241 #pos=155 */
%   | | | else if ( complex(B, K), complex(L, K), enzyme(L, M) )
%   | | | | then return 0.07647081694916824;  // std dev = 0,465, 53,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=16 */
%   | | | | else if ( phenotype(A, N), function(B, P), function(A, P) )
%   | | | | | then return 0.25983610444506405;  // std dev = 0,488, 341,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=198 */
%   | | | | | else if ( location(A, Q), location(B, Q) )
%   | | | | | | then if ( complex(B, R), phenotype(A, S), complex(A, T) )
%   | | | | | | | then return 0.06698374840281701;  // std dev = 0,452, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | | | | | else return 0.22074349779244173;  // std dev = 0,490, 886,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=440 */
%   | | | | | | else return 0.14801177646317978;  // std dev = 0,484, 992,000 (wgt'ed) examples reached here.  /* #neg=599 #pos=393 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.3520170226715283;  // std dev = 0,368, 298,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=244 */
%   else if ( phenotype(A, D), function(B, E), location(A, F) )
%   | then return 0.11906718996509078;  // std dev = 0,479, 1.685,000 (wgt'ed) examples reached here.  /* #neg=938 #pos=747 */
%   | else if ( location(B, G), location(A, G) )
%   | | then return 0.18202491223088474;  // std dev = 0,476, 1.001,000 (wgt'ed) examples reached here.  /* #neg=459 #pos=542 */
%   | | else if ( enzyme(B, H), phenotype(B, I) )
%   | | | then return 0.005895430329285152;  // std dev = 0,444, 57,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=18 */
%   | | | else if ( proteinclass(A, J), location(A, K) )
%   | | | | then return 0.22018502938723897;  // std dev = 0,482, 83,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=47 */
%   | | | | else if ( location(B, L), location(A, M) )
%   | | | | | then return 0.11346408174729523;  // std dev = 0,487, 397,000 (wgt'ed) examples reached here.  /* #neg=230 #pos=167 */
%   | | | | | else if ( function(B, N), function(A, N), location(A, P) )
%   | | | | | | then return 0.402903599596959;  // std dev = 0,420, 26,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=21 */
%   | | | | | | else if ( complex(B, Q), phenotype(B, R) )
%   | | | | | | | then return 0.2658342538727705;  // std dev = 0,464, 26,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=18 */
%   | | | | | | | else return 0.13191056668974238;  // std dev = 0,487, 257,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=111 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C) )
%   then return 0.08587490561192165;  // std dev = 0,468, 721,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=295 */
%   else if ( phenotype(B, D), function(A, E), function(B, E) )
%   | then return 0.184660755513228;  // std dev = 0,435, 738,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=545 */
%   | else if ( phenotype(B, F), location(A, G) )
%   | | then return 0.0832085439153523;  // std dev = 0,480, 453,000 (wgt'ed) examples reached here.  /* #neg=285 #pos=168 */
%   | | else if ( phenotype(A, H), location(B, I), location(A, I) )
%   | | | then if ( complex(B, J), complex(K, J), proteinclass(K, L) )
%   | | | | then return 0.39555021178315536;  // std dev = 0,427, 22,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=16 */
%   | | | | else if ( complex(B, M), location(N, I), enzyme(N, P) )
%   | | | | | then return -0.09712655033850072;  // std dev = 0,391, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | | | | | else if ( proteinclass(A, Q), complex(A, R) )
%   | | | | | | then return 0.050573423272955303;  // std dev = 0,474, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | | | else if ( complex(A, S), complex(T, S), proteinclass(T, U) )
%   | | | | | | | then return 0.29549358328233605;  // std dev = 0,464, 73,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=49 */
%   | | | | | | | else return 0.14968190882422386;  // std dev = 0,493, 292,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=153 */
%   | | | else return 0.11016789480541093;  // std dev = 0,483, 1.448,000 (wgt'ed) examples reached here.  /* #neg=787 #pos=661 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(A, D) )
%   then return 0.03930426213702043;  // std dev = 0,453, 275,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=100 */
%   else if ( proteinclass(B, E) )
%   | then if ( location(B, F), proteinclass(G, E), enzyme(G, H) )
%   | | then return 0.12051825290691746;  // std dev = 0,448, 179,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=95 */
%   | | else if ( phenotype(B, I) )
%   | | | then return 0.002413292491212882;  // std dev = 0,472, 223,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=111 */
%   | | | else if ( location(B, J), location(K, J), phenotype(K, L) )
%   | | | | then if ( location(A, M), location(N, M), location(N, J) )
%   | | | | | then if ( phenotype(N, L), enzyme(N, P) )
%   | | | | | | then if ( location(A, J) )
%   | | | | | | | then return 0.0920510664886325;  // std dev = 0,493, 116,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=55 */
%   | | | | | | | else return 0.05803431261457957;  // std dev = 0,491, 42,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=16 */
%   | | | | | | else return 0.36945139809073835;  // std dev = 0,416, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | | | else return -0.11650542349282149;  // std dev = 0,394, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | else return -0.07471397506799514;  // std dev = 0,423, 28,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=7 */
%   | else return 0.10589977315116943;  // std dev = 0,473, 2.939,000 (wgt'ed) examples reached here.  /* #neg=1.424 #pos=1.515 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.11870022872801064;  // std dev = 0,437, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( proteinclass(B, E), phenotype(B, F), complex(B, G) )
%   | then return -0.05472227834121943;  // std dev = 0,430, 64,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=16 */
%   | else if ( enzyme(B, H), complex(A, I) )
%   | | then return 0.010079465973211068;  // std dev = 0,447, 216,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=60 */
%   | | else if ( proteinclass(A, J), location(B, K), complex(A, L) )
%   | | | then return -0.04121645394071637;  // std dev = 0,453, 116,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=39 */
%   | | | else if ( complex(A, M), location(A, N), location(B, N) )
%   | | | | then if ( phenotype(A, P), phenotype(B, Q) )
%   | | | | | then if ( phenotype(A, Q) )
%   | | | | | | then return 0.28599324728237874;  // std dev = 0,459, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | | | else if ( complex(B, R), complex(S, R), proteinclass(S, T) )
%   | | | | | | | then return 0.6972480772056725;  // std dev = 0,002, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | | else return 0.09351159371282726;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=12 */
%   | | | | | else return 0.10955308290381648;  // std dev = 0,487, 325,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=176 */
%   | | | | else return 0.06232801942866769;  // std dev = 0,482, 2.200,000 (wgt'ed) examples reached here.  /* #neg=1.234 #pos=966 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), complex(B, D), phenotype(A, E) )
%   then return -0.00528592642400058;  // std dev = 0,468, 171,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=85 */
%   else if ( phenotype(B, F), phenotype(A, F) )
%   | then return 0.2116194252325113;  // std dev = 0,339, 255,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=216 */
%   | else if ( phenotype(A, G), location(B, H), location(A, H) )
%   | | then if ( proteinclass(B, I), function(A, J), function(B, J) )
%   | | | then return 0.009253952669239089;  // std dev = 0,445, 51,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=25 */
%   | | | else if ( enzyme(B, K), enzyme(L, K), phenotype(L, M) )
%   | | | | then if ( complex(A, N), phenotype(B, P) )
%   | | | | | then return -0.006918364241840622;  // std dev = 0,445, 25,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=10 */
%   | | | | | else if ( phenotype(A, M) )
%   | | | | | | then if ( complex(A, Q) )
%   | | | | | | | then return 0.4044836122730466;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.11416212945893738;  // std dev = 1,178, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | else return 0.2753834032250873;  // std dev = 0,470, 28,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=18 */
%   | | | | else return 0.07290857148285022;  // std dev = 0,478, 665,000 (wgt'ed) examples reached here.  /* #neg=320 #pos=345 */
%   | | else return 0.03883168193703147;  // std dev = 0,476, 2.628,000 (wgt'ed) examples reached here.  /* #neg=1.416 #pos=1.212 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(B, C), phenotype(A, D) )
%   then return 0.012150352892203372;  // std dev = 0,459, 387,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=185 */
%   else if ( phenotype(B, E), phenotype(A, E) )
%   | then return 0.16752439706711725;  // std dev = 0,336, 219,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=187 */
%   | else if ( phenotype(A, F), function(B, G), location(A, H) )
%   | | then return 0.021547807865650373;  // std dev = 0,474, 1.378,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=619 */
%   | | else if ( complex(B, I), location(A, J) )
%   | | | then return 0.03087737537458872;  // std dev = 0,462, 359,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=185 */
%   | | | else if ( proteinclass(A, K), location(B, L), location(A, L) )
%   | | | | then return -0.029959887260758693;  // std dev = 0,472, 67,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=30 */
%   | | | | else if ( location(A, M), function(B, N), function(A, N) )
%   | | | | | then return 0.1204516501465856;  // std dev = 0,453, 393,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=267 */
%   | | | | | else if ( proteinclass(A, P), location(A, Q) )
%   | | | | | | then return 0.12703669987906815;  // std dev = 0,485, 38,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=19 */
%   | | | | | | else if ( enzyme(B, R), location(A, S) )
%   | | | | | | | then return 0.07018140120070883;  // std dev = 0,495, 170,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=72 */
%   | | | | | | | else return 0.02503183650506063;  // std dev = 0,489, 819,000 (wgt'ed) examples reached here.  /* #neg=468 #pos=351 */
Results
   AUC ROC   = 0.65243
   AUC PR    = 0.64574
   CLL	      = -0.657149
   Precision = 0.639508 at threshold = 0.5
   Recall    = 0.549043
   F1        = 0.590833


Total learning time: 501.979 seconds
Total inference time: 19.698 seconds
AUC ROC: 0.65243


Dataset: twitter->yeast, Fold: 1, Type: scratch, Time: 01:06:46
{'F1': 0.590833, 'Learning time': 501.979, 'Recall': 0.549043, 'AUC PR': 0.64574, 'AUC ROC': 0.65243, 'CLL': -0.657149, 'Inference time': 19.698, 'Precision': [0.639508, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,false,true': 'function(B, I)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E)', 'false,false,false': 'function(B, J)'}, {'false,true,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.488, 118, 76], 'false,true,false,false': [0.456, 81, 34], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.416, 7, 2], 'false,false,true,false': [0.381, 42, 9], 'false,true,false,true': [0.491, 108, 73], 'false,false,false,true': [0.438, 43, 123]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;true;true', '3;false,true;location(A, F), location(B, F).;false;true', '3;false,false,true;function(B, I).;false;false', '3;false,true,false;function(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E).;true;true', '3;false,false,false;function(B, J).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.10398203009346133;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else if ( function(B, G) )
%   | | | then return 0.1341427763142289;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08664186252602446;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1098206895427749;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.07140027033864552;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08865263572839156;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05830247002796966;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07076815119389623;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04725203491755055;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05600174874763819;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03806542572442744;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04402136668006728;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.030517148453083637;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.034428390147791706;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 30.938 seconds
Total inference time: 0.96 seconds
AUC ROC: 0.68902


Results in test set
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total inference time: 0.96 seconds
AUC ROC: 0.68902
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false': 'function(A, E)', 'false,true': 'location(A, F), location(B, F)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)'}, {'false,true,true': [9.27, 280, 124], 'false,false': [0.0, 0, 0], 'true,true': [13.487, 264, 585], 'false,true,false,false': [1.651, 6, 5], 'true,false': [11.225, 254, 250], 'false,true,false,true': [11.481, 366, 206]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [11.225, 254, 250], 'false,false,false': [0.0, 0, 0], 'true,true': [13.487, 264, 585], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [11.481, 366, 206], 'false,false,true,false': [1.651, 6, 5], 'true,false,true': [9.27, 280, 124], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;false', '3;true;location(A, D), location(B, D).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #4: [('false,false', 0), ('true,false', 0.503968253968254), ('false,true,false,false', 0.5454545454545454), ('false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,true,true', 0.503968253968254), ('false,false,true,false', 0.5454545454545454), ('false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('true,false,true', 0.693069306930693)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else return 0.12235109164542661;  // std dev = 14,857, 987,000 (wgt'ed) examples reached here.  /* #neg=652 #pos=335 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08347055689346544;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1120269897366688;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.15900801290401476;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06865283558528157;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.09054429345300165;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.12486521420922997;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05596932596210799;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07234768879852727;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09670887539053145;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04530232776700737;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.057294192472343915;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07419418776013083;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03645686346621589;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.045062842788148365;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05655933146902171;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.029203385347218443;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03525807852210872;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.04293311323819828;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633284
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 81.654 seconds
Total inference time: 1.11 seconds
AUC ROC: 0.68902


Best model AUC ROC so far: 0.68902


******************************************
Best model found
******************************************
Total revision time: 114.66199999999999
Best validation AUC ROC: 0.68902


Results
   AUC ROC   = 0.645378
   AUC PR    = 0.636573
   CLL	      = -0.660701
   Precision = 0.704691 at threshold = 0.5
   Recall    = 0.431901
   F1        = 0.53556


Total inference time: 2.148 seconds
AUC ROC: 0.645378
Dataset: twitter->yeast, Fold: 2, Type: transfer, Time: 01:08:50
{'Parameter Learning results': {'F1': 0.53556, 'Learning time': 30.938, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'CLL': -0.660701, 'Inference time': 2.379, 'Precision': [0.704691, 0.5]}, 'F1': 0.53556, 'Learning time': 114.66199999999999, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'Mapping results': {'Finding best mapping': 0.013063907623291016, 'Knowledge compiling time': 0.048113107681274414, 'Total time': 3.4567317962646484, 'Generating mappings time': 0.04838705062866211, 'Possible mappings': 98, 'Generating paths time': 3.347161293029785}, 'CLL': -0.660701, 'Inference time': 2.148, 'Precision': [0.704691, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5427455121166226;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.11478610324110598;  // std dev = 0,437, 226,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( complex(B, G), location(A, H), location(B, H) )
%   | | then return 0.5119950889456629;  // std dev = 0,476, 208,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=136 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.17162855892396128;  // std dev = 0,464, 319,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=100 */
%   | | | else if ( complex(B, J), location(B, K) )
%   | | | | then return 0.16403128804068778;  // std dev = 0,461, 85,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | | else if ( phenotype(A, L) )
%   | | | | | then return 0.2646005480027338;  // std dev = 0,491, 465,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=189 */
%   | | | | | else if ( complex(A, M), location(B, N) )
%   | | | | | | then return 0.19814893509951237;  // std dev = 0,474, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | | | | else if ( proteinclass(B, P), location(A, Q) )
%   | | | | | | | then return 0.09624417319475045;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | | | | | else return 0.39193271888329645;  // std dev = 0,499, 148,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=79 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.4631496981317357;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), phenotype(F, E), proteinclass(F, G) )
%   | then return 0.09871595891065614;  // std dev = 0,436, 223,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | else if ( complex(B, H), location(B, I), location(A, I) )
%   | | then return 0.4348130613286259;  // std dev = 0,476, 209,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=136 */
%   | | else if ( proteinclass(A, J), proteinclass(K, J), phenotype(K, L) )
%   | | | then return 0.14597191131853632;  // std dev = 0,462, 300,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=93 */
%   | | | else if ( complex(B, M), complex(A, N) )
%   | | | | then return 0.06466169105864529;  // std dev = 0,420, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | | else if ( phenotype(A, P), function(B, Q), complex(A, R) )
%   | | | | | then if ( location(B, S), complex(T, R), enzyme(T, U) )
%   | | | | | | then return 0.1500676726729974;  // std dev = 0,469, 55,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=18 */
%   | | | | | | else if ( proteinclass(B, W), function(X, Q), complex(X, R) )
%   | | | | | | | then return 0.4227949454002702;  // std dev = 0,490, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | | | | | else return 0.2930919751032424;  // std dev = 0,499, 202,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=95 */
%   | | | | | else return 0.22162280412617663;  // std dev = 0,488, 464,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=186 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.37330860529496585;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), proteinclass(A, F), complex(A, G) )
%   | then return -0.05236283634837452;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else if ( complex(B, H), complex(A, H) )
%   | | then return 0.6547246489546544;  // std dev = 0,211, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | | else if ( proteinclass(B, I), location(B, J), location(A, J) )
%   | | | then return 0.269813444921445;  // std dev = 0,480, 150,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=75 */
%   | | | else if ( proteinclass(A, K), function(B, L), enzyme(A, M) )
%   | | | | then return 0.02257916236700107;  // std dev = 0,408, 83,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=18 */
%   | | | | else if ( complex(B, N), complex(A, P) )
%   | | | | | then return 0.10457014347568412;  // std dev = 0,459, 154,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=52 */
%   | | | | | else if ( enzyme(A, Q), enzyme(R, Q), complex(R, S) )
%   | | | | | | then if ( enzyme(B, T) )
%   | | | | | | | then return 0.005901317313521159;  // std dev = 0,888, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | | | | else return 0.34108299504582734;  // std dev = 0,498, 59,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=32 */
%   | | | | | | else return 0.18493550116741134;  // std dev = 0,486, 977,000 (wgt'ed) examples reached here.  /* #neg=592 #pos=385 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C), location(B, D) )
%   then return 0.36336873357660193;  // std dev = 0,428, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E), function(A, F), function(B, F) )
%   | then if ( proteinclass(B, G), proteinclass(A, H), location(B, I) )
%   | | then return 0.3888112803471392;  // std dev = 0,427, 70,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=52 */
%   | | else if ( complex(B, J), complex(K, J), phenotype(K, E) )
%   | | | then return 0.33880456547866383;  // std dev = 0,451, 99,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=70 */
%   | | | else if ( complex(B, L), phenotype(M, E), complex(M, N) )
%   | | | | then return 0.0564050210914938;  // std dev = 0,472, 148,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=56 */
%   | | | | else if ( complex(A, P), function(Q, F), enzyme(Q, R) )
%   | | | | | then if ( proteinclass(B, S), proteinclass(T, S), complex(T, P) )
%   | | | | | | then return 0.7229371085378696;  // std dev = 0,039, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( proteinclass(B, U), phenotype(B, W) )
%   | | | | | | | then return 0.05821920865173108;  // std dev = 0,498, 33,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=15 */
%   | | | | | | | else return 0.19228757388945364;  // std dev = 0,488, 193,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=96 */
%   | | | | | else return 0.2635757327634701;  // std dev = 0,486, 174,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=101 */
%   | else return 0.15005219831565814;  // std dev = 0,472, 1.294,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=535 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.22566531930927858;  // std dev = 0,461, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( proteinclass(A, E), function(A, F), function(B, F) )
%   | then return 0.2154873485709895;  // std dev = 0,462, 173,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=90 */
%   | else if ( proteinclass(A, G), location(B, H) )
%   | | then return -0.01052177925779888;  // std dev = 0,413, 218,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=49 */
%   | | else if ( phenotype(B, I), location(B, J), location(A, J) )
%   | | | then return 0.019461949120110657;  // std dev = 0,435, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | | | else if ( complex(A, K), complex(B, K) )
%   | | | | then return 0.42755436608001457;  // std dev = 0,273, 27,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=25 */
%   | | | | else if ( phenotype(A, L), complex(A, M), function(B, N) )
%   | | | | | then if ( function(A, N), proteinclass(B, P), complex(B, Q) )
%   | | | | | | then return 0.4024881380461726;  // std dev = 0,353, 16,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=13 */
%   | | | | | | else if ( enzyme(B, R), function(A, N) )
%   | | | | | | | then return 0.35018839398969;  // std dev = 0,449, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | | | | | else return 0.14175591637318863;  // std dev = 0,490, 396,000 (wgt'ed) examples reached here.  /* #neg=227 #pos=169 */
%   | | | | | else return 0.11037313745093606;  // std dev = 0,481, 599,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=233 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(B, C), function(A, D), function(B, D) )
%   then return 0.19550854867674675;  // std dev = 0,448, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( phenotype(A, E), function(A, F), function(B, F) )
%   | then if ( phenotype(B, E), location(B, G), location(A, G) )
%   | | then return 0.26145826052034027;  // std dev = 0,397, 117,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=94 */
%   | | else if ( enzyme(B, H), phenotype(B, I), complex(A, J) )
%   | | | then if ( proteinclass(A, K) )
%   | | | | then return 0.24004298102709246;  // std dev = 0,854, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | else return -0.17097116471919482;  // std dev = 0,476, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | else if ( enzyme(A, L), complex(B, M), complex(A, N) )
%   | | | | then return -0.1338317878829573;  // std dev = 0,412, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | | else if ( location(B, P), location(Q, P), complex(Q, R) )
%   | | | | | then return 0.12927171270235793;  // std dev = 0,480, 486,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=266 */
%   | | | | | else if ( complex(A, S) )
%   | | | | | | then return 0.11545040771250514;  // std dev = 0,517, 13,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=7 */
%   | | | | | | else return -0.38553900266690916;  // std dev = 0,228, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | else return 0.08252683714023307;  // std dev = 0,469, 1.204,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=466 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), location(B, D) )
%   then return 0.17700835571312187;  // std dev = 0,422, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E) )
%   | then if ( complex(A, F), phenotype(G, E), enzyme(G, H) )
%   | | then if ( complex(B, F) )
%   | | | then return 0.2736056964197866;  // std dev = 0,318, 20,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=18 */
%   | | | else if ( phenotype(B, I), complex(J, F), proteinclass(J, K) )
%   | | | | then return 0.0012192323226229431;  // std dev = 0,460, 197,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=90 */
%   | | | | else if ( complex(G, L), enzyme(B, H), proteinclass(B, M) )
%   | | | | | then return -0.18300934480010247;  // std dev = 0,432, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | | else if ( complex(G, N), function(B, P) )
%   | | | | | | then if ( function(A, P), proteinclass(B, Q), function(G, P) )
%   | | | | | | | then return 0.22016894572610526;  // std dev = 0,415, 49,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=34 */
%   | | | | | | | else return 0.09501073382874323;  // std dev = 0,486, 485,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=206 */
%   | | | | | | else return -0.00753564195040773;  // std dev = 0,451, 38,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=13 */
%   | | else return 0.039035508278677404;  // std dev = 0,467, 560,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=237 */
%   | else return 0.11966877674131766;  // std dev = 0,465, 654,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=327 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), location(B, D) )
%   then return 0.13554773174280058;  // std dev = 0,422, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E), phenotype(F, E), complex(F, G) )
%   | then if ( complex(B, G), proteinclass(F, H), location(B, I) )
%   | | then return 0.19986281466189074;  // std dev = 0,376, 75,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=57 */
%   | | else if ( complex(B, J), complex(K, J), phenotype(K, L) )
%   | | | then return -0.035873543364209955;  // std dev = 0,462, 207,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=81 */
%   | | | else if ( enzyme(F, M), location(A, N), location(F, N) )
%   | | | | then if ( complex(B, P), enzyme(A, Q) )
%   | | | | | then return -0.14176704738793838;  // std dev = 0,366, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | | | else if ( proteinclass(F, R) )
%   | | | | | | then return 0.06304294665521337;  // std dev = 0,479, 655,000 (wgt'ed) examples reached here.  /* #neg=371 #pos=284 */
%   | | | | | | else if ( proteinclass(B, S) )
%   | | | | | | | then return -0.08759918239620165;  // std dev = 0,483, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | | | | | else return 0.17012054766835294;  // std dev = 0,481, 57,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=33 */
%   | | | | else return 0.01918068861123185;  // std dev = 0,466, 288,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=116 */
%   | else return 0.09152198031355967;  // std dev = 0,464, 701,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=350 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), location(B, D) )
%   then return 0.10482830197495584;  // std dev = 0,422, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E) )
%   | then if ( complex(A, F), location(A, G), location(B, G) )
%   | | then if ( proteinclass(A, H), complex(B, F) )
%   | | | then return 0.2722333037326664;  // std dev = 0,068, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | else if ( proteinclass(A, I), phenotype(B, J), complex(B, K) )
%   | | | | then return 0.19663147783414414;  // std dev = 0,380, 18,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=11 */
%   | | | | else if ( phenotype(B, L), complex(B, M), enzyme(B, N) )
%   | | | | | then return -0.3832546873248825;  // std dev = 0,117, 8,000 (wgt'ed) examples reached here.  /* #neg=8 */
%   | | | | | else if ( proteinclass(B, P) )
%   | | | | | | then return 0.09051146612783677;  // std dev = 0,452, 98,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=60 */
%   | | | | | | else if ( enzyme(B, Q) )
%   | | | | | | | then return 0.13431874670441749;  // std dev = 0,453, 30,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=17 */
%   | | | | | | | else return 0.029249519432338823;  // std dev = 0,486, 273,000 (wgt'ed) examples reached here.  /* #neg=155 #pos=118 */
%   | | else return 0.027025853435649297;  // std dev = 0,468, 923,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=385 */
%   | else return 0.07179807398944175;  // std dev = 0,465, 654,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=327 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(A, C), complex(B, C) )
%   then return 0.22979487958433442;  // std dev = 0,279, 103,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=94 */
%   else if ( complex(A, D), location(B, E) )
%   | then return 0.017247880556159428;  // std dev = 0,464, 1.066,000 (wgt'ed) examples reached here.  /* #neg=563 #pos=503 */
%   | else if ( phenotype(B, F), enzyme(B, G) )
%   | | then return 0.14591967666490033;  // std dev = 0,432, 95,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=68 */
%   | | else if ( phenotype(A, H), phenotype(B, H), location(B, I) )
%   | | | then return 0.1266727926444423;  // std dev = 0,382, 105,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=83 */
%   | | | else if ( phenotype(A, J), proteinclass(B, K), location(B, L) )
%   | | | | then return -0.049793016130935695;  // std dev = 0,468, 101,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=41 */
%   | | | | else if ( proteinclass(A, M), proteinclass(N, M), phenotype(N, P) )
%   | | | | | then return -5.311317788516181E-4;  // std dev = 0,456, 197,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=69 */
%   | | | | | else if ( phenotype(A, Q), location(A, R), location(B, R) )
%   | | | | | | then return 0.12244354882108456;  // std dev = 0,478, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | | | | else if ( enzyme(A, S) )
%   | | | | | | | then return 0.12259634312036294;  // std dev = 0,471, 58,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=31 */
%   | | | | | | | else return 0.035879057307598425;  // std dev = 0,483, 529,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=234 */
Results
   AUC ROC   = 0.649668
   AUC PR    = 0.675769
   CLL	      = -0.661076
   Precision = 0.698802 at threshold = 0.5
   Recall    = 0.370763
   F1        = 0.484477


Total learning time: 147.049 seconds
Total inference time: 5.624 seconds
AUC ROC: 0.649668


Dataset: twitter->yeast, Fold: 2, Type: scratch, Time: 01:11:23
{'F1': 0.484477, 'Learning time': 147.049, 'Recall': 0.370763, 'AUC PR': 0.675769, 'AUC ROC': 0.649668, 'CLL': -0.661076, 'Inference time': 5.624, 'Precision': [0.698802, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,false,true': 'function(B, I)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E)', 'false,false,false': 'function(B, J)'}, {'false,true,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.488, 118, 76], 'false,true,false,false': [0.456, 81, 34], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.416, 7, 2], 'false,false,true,false': [0.381, 42, 9], 'false,true,false,true': [0.491, 108, 73], 'false,false,false,true': [0.438, 43, 123]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;true;true', '3;false,true;location(A, F), location(B, F).;false;true', '3;false,false,true;function(B, I).;false;false', '3;false,true,false;function(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E).;true;true', '3;false,false,false;function(B, J).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.16562815947624016;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.14424688162459248;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.12357625186313503;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else if ( function(B, G) )
%   | | | then return 0.104301197312694;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( location(A, H), location(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, I) )
%   | | | then return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08689198580080103;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07159091160654964;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05844404016553731;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04735453305420465;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.038137714131827496;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.03930851827806131;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03056665598230434;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 19.546 seconds
Total inference time: 0.624 seconds
AUC ROC: 0.666605


Results in test set
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total inference time: 0.624 seconds
AUC ROC: 0.666605
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,true,false': 'function(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E)', 'false,false,false': 'function(B, I)'}, {'false,true,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,true,false,false': [0.0, 0, 0], 'true,false': [7.125, 109, 95], 'false,false,true': [0.0, 0, 0], 'false,true,false,true': [8.768, 250, 111], 'false,false,false,true': [1.0, 2, 2], 'false,false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,true': 'function(A, F)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [7.125, 109, 95], 'false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false,false': [1.0, 2, 2], 'false,true,false,true': [8.768, 250, 111], 'true,false,true': [8.312, 195, 107], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,true;function(B, G).;false;false', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,true;function(B, G).;false;false', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,true;function(B, G).;false;false', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;false;true', '3;false,true;location(A, F), location(B, F).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E).;true;true', '3;false,false,false;function(B, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;false;false', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;false;false', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;false;false', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;false;false', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;false;false', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #2: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #3: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #4: [('false,true,false,false', 0), ('false,false,true', 0), ('false,false,false,false', 0), ('false,false,false,true', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #5: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #6: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #7: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #8: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #9: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #10: [('false,false', 0), ('true,false,false', 0), ('false,true,false,false', 0.5), ('false,true,true', 0.5343137254901961), ('true,false,true', 0.6456953642384106), ('false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16773797619540226;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1460683188657648;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1250953221598019;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0.10341738008185296;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | else if ( location(A, G), location(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(B, H) )
%   | | | then return 0.2959381557051226;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.08783266113553062;  // std dev = 8,830, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.07230620465596886;  // std dev = 8,830, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.05897387924504268;  // std dev = 8,830, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.0477370937737329;  // std dev = 8,830, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.0384067012897357;  // std dev = 8,830, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.03381857630024554;  // std dev = 11,346, 569,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=208 */
Results
   AUC ROC   = 0.663248
   AUC PR    = 0.64429
   CLL	      = -0.647478
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 22.655 seconds
Total inference time: 0.765 seconds
AUC ROC: 0.663248


Best model AUC ROC so far: 0.666605


******************************************
Best model found
******************************************
Total revision time: 43.59
Best validation AUC ROC: 0.666605


Results
   AUC ROC   = 0.652567
   AUC PR    = 0.633533
   CLL	      = -0.661881
   Precision = 0.69153 at threshold = 0.5
   Recall    = 0.43321
   F1        = 0.532706


Total inference time: 3.011 seconds
AUC ROC: 0.652567
Dataset: twitter->yeast, Fold: 3, Type: transfer, Time: 01:12:16
{'Parameter Learning results': {'F1': 0.532706, 'Learning time': 19.546, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'CLL': -0.661881, 'Inference time': 2.67, 'Precision': [0.69153, 0.5]}, 'F1': 0.532706, 'Learning time': 43.59, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'Mapping results': {'Finding best mapping': 0.010038614273071289, 'Knowledge compiling time': 0.0839986801147461, 'Total time': 3.185795307159424, 'Generating mappings time': 0.035794734954833984, 'Possible mappings': 98, 'Generating paths time': 3.055957555770874}, 'CLL': -0.661881, 'Inference time': 3.011, 'Precision': [0.69153, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8581489350995105;  // std dev = 7,15e-07, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), phenotype(A, E), enzyme(A, F) )
%   | then return 0.05217878584578103;  // std dev = 0,395, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then return 0.2676316937201976;  // std dev = 0,492, 464,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=190 */
%   | | else if ( complex(B, I), complex(J, I), phenotype(J, K) )
%   | | | then return 0.25408802139392905;  // std dev = 0,489, 197,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=78 */
%   | | | else if ( location(B, L), function(A, M), function(B, M) )
%   | | | | then return 0.5887188832860378;  // std dev = 0,444, 193,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=141 */
%   | | | | else if ( enzyme(B, N), location(A, P) )
%   | | | | | then return 0.07689893509951237;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | | | else if ( enzyme(B, Q) )
%   | | | | | | then return 0.5724346493852266;  // std dev = 0,452, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | | else if ( proteinclass(A, R), proteinclass(S, R), phenotype(S, T) )
%   | | | | | | | then return 0.4735335504841277;  // std dev = 0,487, 26,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=16 */
%   | | | | | | | else return 0.2834362914213479;  // std dev = 0,494, 261,000 (wgt'ed) examples reached here.  /* #neg=150 #pos=111 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), function(B, D), function(A, D) )
%   then return 0.4893175259499863;  // std dev = 0,436, 363,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=255 */
%   else if ( complex(B, E), complex(F, E), phenotype(F, G) )
%   | then return 0.06100557426495034;  // std dev = 0,425, 143,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=34 */
%   | else if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | then return 0.12844318432415716;  // std dev = 0,457, 260,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=78 */
%   | | else if ( location(B, K), function(A, L), function(B, L) )
%   | | | then return 0.48430108196995897;  // std dev = 0,453, 211,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=149 */
%   | | | else if ( location(A, M), phenotype(B, N), location(B, P) )
%   | | | | then return 0.09795121052560246;  // std dev = 0,451, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | | else if ( enzyme(A, Q) )
%   | | | | | then return 0.38844667843236785;  // std dev = 0,491, 56,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=32 */
%   | | | | | else if ( phenotype(A, R), enzyme(B, S), location(B, T) )
%   | | | | | | then return -0.15147215799385005;  // std dev = 3,73e-09, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | | else if ( proteinclass(B, U), location(A, W) )
%   | | | | | | | then return 0.1145554042991421;  // std dev = 0,454, 31,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=9 */
%   | | | | | | | else return 0.26971216607660325;  // std dev = 0,496, 260,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=117 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(B, C), location(A, D), location(B, D) )
%   then return 0.368763482815982;  // std dev = 0,435, 393,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=256 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then return 0.11736407704264432;  // std dev = 0,460, 289,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=91 */
%   | else if ( complex(B, H), function(A, I) )
%   | | then return 0.08557625800282694;  // std dev = 0,459, 123,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=38 */
%   | | else if ( location(B, J), function(B, K), function(A, K) )
%   | | | then return 0.3900384324155745;  // std dev = 0,452, 211,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=149 */
%   | | | else if ( location(A, L), phenotype(B, M), enzyme(A, N) )
%   | | | | then return -0.09196678658441865;  // std dev = 0,319, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | else if ( enzyme(A, P), enzyme(Q, P), proteinclass(Q, R) )
%   | | | | | then if ( location(B, S), complex(Q, T) )
%   | | | | | | then return 0.10759913048850688;  // std dev = 0,477, 11,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=4 */
%   | | | | | | else return 0.5269068826233634;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=10 */
%   | | | | | else if ( location(A, U) )
%   | | | | | | then return 0.19280490720200483;  // std dev = 0,488, 284,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=116 */
%   | | | | | | else return 0.30316761736459613;  // std dev = 0,496, 39,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=21 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( location(B, C), function(B, D), function(A, D) )
%   then return 0.30390038916963996;  // std dev = 0,443, 660,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=440 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then return 0.015006153808149536;  // std dev = 0,418, 200,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=46 */
%   | else if ( phenotype(B, H), location(B, I), function(A, J) )
%   | | then return 0.04905132180486449;  // std dev = 0,446, 135,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=37 */
%   | | else if ( location(A, K), proteinclass(B, L) )
%   | | | then return 0.04897603077365063;  // std dev = 0,443, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else if ( enzyme(A, M), complex(B, N), location(A, P) )
%   | | | | then return 0.4066605548213318;  // std dev = 0,442, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | else if ( location(A, Q), location(B, Q) )
%   | | | | | then if ( phenotype(A, R) )
%   | | | | | | then return 0.40262039469260485;  // std dev = 0,460, 15,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=10 */
%   | | | | | | else if ( proteinclass(A, S), complex(A, T) )
%   | | | | | | | then return 0.03373617389978645;  // std dev = 0,455, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | | | | | else return 0.23372380221216388;  // std dev = 0,497, 89,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=44 */
%   | | | | | else return 0.15188203003823356;  // std dev = 0,484, 211,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=88 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.44755885984714566;  // std dev = 0,240, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), location(A, E) )
%   | then return 0.09425333236480725;  // std dev = 0,469, 531,000 (wgt'ed) examples reached here.  /* #neg=328 #pos=203 */
%   | else if ( complex(B, F), complex(G, F), phenotype(G, H) )
%   | | then return 0.08757734937811895;  // std dev = 0,467, 197,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=78 */
%   | | else if ( enzyme(A, I), phenotype(B, J), location(A, K) )
%   | | | then return -0.24248222158097613;  // std dev = 0,274, 11,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=1 */
%   | | | else if ( location(B, L), location(A, L) )
%   | | | | then return 0.2799901415104196;  // std dev = 0,434, 251,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=171 */
%   | | | | else if ( location(A, M), location(N, M), complex(N, P) )
%   | | | | | then return 0.06020485400827192;  // std dev = 0,478, 199,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=76 */
%   | | | | | else if ( phenotype(B, Q), function(A, R), function(B, R) )
%   | | | | | | then return 0.6141746188178309;  // std dev = 0,133, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( location(B, S), phenotype(A, T) )
%   | | | | | | | then return 0.017884063037306854;  // std dev = 0,487, 7,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=3 */
%   | | | | | | | else return 0.1935643485911235;  // std dev = 0,494, 48,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=26 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(D, C), phenotype(D, E) )
%   then return 0.034357849173004676;  // std dev = 0,441, 161,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=65 */
%   else if ( complex(B, F), complex(A, F) )
%   | then return 0.33955015431281355;  // std dev = 0,058, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( enzyme(A, G), phenotype(A, H), complex(A, I) )
%   | | then return -0.05386633845208706;  // std dev = 0,384, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
%   | | else if ( enzyme(B, J), phenotype(B, K) )
%   | | | then return -0.05452284382792442;  // std dev = 0,440, 35,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=9 */
%   | | | else if ( phenotype(B, L), function(A, M), function(B, M) )
%   | | | | then return 0.2504015262242187;  // std dev = 0,459, 155,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=104 */
%   | | | | else if ( phenotype(B, N), phenotype(A, P) )
%   | | | | | then return -0.0814251083767209;  // std dev = 0,374, 29,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=5 */
%   | | | | | else if ( location(B, Q), location(A, Q) )
%   | | | | | | then return 0.16077267415642507;  // std dev = 0,464, 419,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=231 */
%   | | | | | | else if ( enzyme(A, R), enzyme(B, R) )
%   | | | | | | | then return 0.5798760675896296;  // std dev = 0,079, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.05740779452960655;  // std dev = 0,471, 401,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=149 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(D, C), phenotype(D, E) )
%   then return 0.026883647010449783;  // std dev = 0,441, 161,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=65 */
%   else if ( complex(B, F), complex(A, F) )
%   | then return 0.2679977988824482;  // std dev = 0,052, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( location(B, G), location(A, G) )
%   | | then return 0.12803481829748434;  // std dev = 0,459, 596,000 (wgt'ed) examples reached here.  /* #neg=268 #pos=328 */
%   | | else if ( phenotype(A, H), location(B, I), enzyme(A, J) )
%   | | | then return -0.20113190926444796;  // std dev = 0,226, 15,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=1 */
%   | | | else if ( enzyme(A, K), location(B, L) )
%   | | | | then if ( complex(B, M), complex(N, M), phenotype(N, P) )
%   | | | | | then return -0.039898812588468974;  // std dev = 0,426, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | | | else if ( complex(B, Q) )
%   | | | | | | then return 0.6199163553954111;  // std dev = 0,012, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( phenotype(B, R) )
%   | | | | | | | then return 0.28110981359279313;  // std dev = 0,419, 7,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=4 */
%   | | | | | | | else return 0.11831366609471643;  // std dev = 0,501, 11,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=6 */
%   | | | | else return 0.03702109723054095;  // std dev = 0,467, 458,000 (wgt'ed) examples reached here.  /* #neg=291 #pos=167 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C), complex(B, D) )
%   then return 0.263575661021606;  // std dev = 0,262, 74,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=66 */
%   else if ( proteinclass(B, E), proteinclass(F, E), phenotype(F, G) )
%   | then return 0.010095040911345365;  // std dev = 0,445, 149,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=57 */
%   | else if ( phenotype(A, H), location(B, I), location(A, I) )
%   | | then return 0.10062023397493013;  // std dev = 0,437, 251,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=138 */
%   | | else if ( phenotype(A, J), location(B, K) )
%   | | | then return -0.05651788600740076;  // std dev = 0,427, 114,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=30 */
%   | | | else if ( complex(B, L), phenotype(B, M), proteinclass(A, N) )
%   | | | | then if ( enzyme(B, P), proteinclass(Q, N), enzyme(Q, R) )
%   | | | | | then return 0.374982475768112;  // std dev = 1,010, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | else return -0.1618583044973211;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | | else if ( location(A, S), function(B, T), function(A, T) )
%   | | | | | then return 0.14738147600297408;  // std dev = 0,425, 320,000 (wgt'ed) examples reached here.  /* #neg=99 #pos=221 */
%   | | | | | else if ( location(A, U), location(W, U), enzyme(W, X) )
%   | | | | | | then return 0.018244491681971464;  // std dev = 0,459, 373,000 (wgt'ed) examples reached here.  /* #neg=242 #pos=131 */
%   | | | | | | else return 0.13362148144372146;  // std dev = 0,468, 67,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=35 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.12141326038267668;  // std dev = 0,400, 315,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=218 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return -0.030304387194644664;  // std dev = 0,425, 157,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | else if ( complex(A, G), enzyme(B, H), proteinclass(A, I) )
%   | | then return 0.3558891818575565;  // std dev = 0,332, 17,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=14 */
%   | | else if ( complex(A, J), complex(B, J) )
%   | | | then return 0.1962050135066195;  // std dev = 0,020, 38,000 (wgt'ed) examples reached here.  /* #pos=38 */
%   | | | else if ( complex(A, K), enzyme(A, L), location(B, M) )
%   | | | | then return -0.12817296878539242;  // std dev = 0,369, 55,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=10 */
%   | | | | else if ( location(A, N), location(B, N) )
%   | | | | | then return 0.07731298338208141;  // std dev = 0,460, 387,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=218 */
%   | | | | | else if ( enzyme(A, P), proteinclass(A, Q) )
%   | | | | | | then return 0.15294861052114372;  // std dev = 0,450, 24,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=12 */
%   | | | | | | else if ( location(A, R), location(S, R), complex(S, T) )
%   | | | | | | | then return -9.476055832271676E-4;  // std dev = 0,463, 312,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=104 */
%   | | | | | | | else return 0.07718581839575198;  // std dev = 0,482, 67,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=33 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(A, D) )
%   then return 0.15888278482875823;  // std dev = 0,411, 53,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=36 */
%   else if ( proteinclass(B, E), proteinclass(F, E), phenotype(F, G) )
%   | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | then return -0.1583838758180134;  // std dev = 0,362, 45,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=10 */
%   | | else if ( phenotype(A, K), phenotype(L, G), enzyme(L, M) )
%   | | | then if ( complex(B, N) )
%   | | | | then if ( enzyme(B, M) )
%   | | | | | then return 0.2108065085398601;  // std dev = 0,462, 10,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=6 */
%   | | | | | else return -0.19801139179922195;  // std dev = 0,829, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
%   | | | | else return 0.6139433229890632;  // std dev = 0,286, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( enzyme(B, P), enzyme(F, P) )
%   | | | | then if ( location(A, Q), complex(B, R), complex(F, R) )
%   | | | | | then return -0.06246859861169288;  // std dev = 0,408, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | | | else return 0.30039338104240015;  // std dev = 0,455, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | else return -0.13555893212080977;  // std dev = 0,409, 36,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=8 */
%   | else return 0.0491933738848313;  // std dev = 0,437, 1.197,000 (wgt'ed) examples reached here.  /* #neg=586 #pos=611 */
Results
   AUC ROC   = 0.646756
   AUC PR    = 0.663343
   CLL	      = -0.668298
   Precision = 0.660611 at threshold = 0.5
   Recall    = 0.422386
   F1        = 0.515298


Total learning time: 42.061 seconds
Total inference time: 3.694 seconds
AUC ROC: 0.646756


Dataset: twitter->yeast, Fold: 3, Type: scratch, Time: 01:13:02
{'F1': 0.515298, 'Learning time': 42.061, 'Recall': 0.422386, 'AUC PR': 0.663343, 'AUC ROC': 0.646756, 'CLL': -0.668298, 'Inference time': 3.694, 'Precision': [0.660611, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,false,true': 'enzyme(B, I)', 'false,true,false': 'enzyme(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E)', 'false,false,false': 'enzyme(B, J)'}, {'false,true,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.488, 118, 76], 'false,true,false,false': [0.456, 81, 34], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.416, 7, 2], 'false,false,true,false': [0.381, 42, 9], 'false,true,false,true': [0.491, 108, 73], 'false,false,false,true': [0.438, 43, 123]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '0;false,false,false;enzyme(A, K).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '1;false,false,false;enzyme(A, K).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '2;false,false,false;enzyme(A, K).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;true;true', '3;false,true;location(A, F), location(B, F).;false;true', '3;false,false,true;enzyme(B, I).;false;false', '3;false,true,false;enzyme(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E).;true;true', '3;false,false,false;enzyme(B, J).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;false', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22400259363609637;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.3609484871711761;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.19449056448208704;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.31110728186563763;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.16508655516703946;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.25825886676574666;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40125234911517477;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.05259950478597549;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.13728663146700865;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | else if ( location(A, H), location(B, H) )
%   | | then if ( enzyme(B, I) )
%   | | | then return 0.22048316970840084;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.29933501303370724;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | else if ( enzyme(B, J) )
%   | | | then return 0.18010688948105735;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | | else return 0.11459013452490119;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30597716653683;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.17148051633182343;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.04506156572157872;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.14341361761511429;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.23349880133935735;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.11218365916482889;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09019781906270513;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2405132231023213;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.13115060373003595;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03839689936532517;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.11226070841535328;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.17808031301814733;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.09036480862064877;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07026957412906448;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.19478558503680857;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.09932141518842214;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03256600389502004;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08681077500092178;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.13426442490613463;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07196774713737968;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05433619026124952;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16176939808047838;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.07481634168125942;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.02751039248460187;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06656852882667326;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10078118477892072;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.056814987510623235;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.041790169381226795;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.13711329382195048;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.05620720508681774;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.023160528370293892;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05075578496808014;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.07559543456373714;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.044553334757396805;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03201701803605345;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then if ( enzyme(A, C) )
%   | then return 0.11814007732365525;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.058614112072662296;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.0421763851458421;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   else if ( enzyme(B, F) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.019442152765119698;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.03855005033302373;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | else if ( enzyme(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.03883758073739689;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | | | else return 0.03476140793128398;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | else return 0.04070111819599059;  // std dev = 14,692, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
Results
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total learning time: 29.14 seconds
Total inference time: 0.916 seconds
AUC ROC: 0.602959


Results in test set
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total inference time: 0.916 seconds
AUC ROC: 0.602959
Structure after Parameter Learning
[['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [2.11e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [1.05e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'location(A, H), location(B, H)', 'false,true': 'location(A, F), location(B, F)', 'false,false,true': 'enzyme(B, I)', 'false,true,false': 'enzyme(B, G)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E)', 'false,false,false': 'enzyme(B, J)'}, {'false,true,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,true,false,false': [4.362, 52, 30], 'true,false': [0.0, 0, 3], 'false,false,false,false': [10.363, 262, 182], 'false,true,false,true': [2.16, 21, 6], 'false,false,true,false': [10.403, 182, 267], 'false,false,true,true': [5.734, 62, 70], 'false,false,false,true': [5.514, 68, 55]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.0, 0, 3], 'false,false,false': [14.692, 444, 449], 'true,true': [0.981, 1, 25], 'false,false,true,true': [4.889, 45, 51], 'false,true,false,false': [5.514, 68, 55], 'false,true,false,true': [2.16, 21, 6], 'false,false,true,false': [4.362, 52, 30], 'true,false,true': [2.415, 10, 14], 'true,false,false': [5.734, 62, 70]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;false', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;false', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;false', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;false;true', '3;false,true;location(A, F), location(B, F).;false;true', '3;false,true,false;enzyme(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E).;true;true', '3;false,false,false;enzyme(B, J).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;true;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;true;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;true;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;true;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;true;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;true', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,false,true,true', 0.5303030303030303), ('false,true,true', 0.5416666666666666), ('false,false,false,true', 0.5528455284552846), ('false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5946547884187082), ('false,true,false,false', 0.6341463414634146), ('false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #5: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #6: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #7: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #8: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #9: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #10: [('false,false,false', 0.5027995520716685), ('true,false,false', 0.5303030303030303), ('false,false,true,true', 0.53125), ('false,true,false,false', 0.5528455284552846), ('true,false,true', 0.5833333333333334), ('false,false,true,false', 0.6341463414634146), ('false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.34943098638155884;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.3013680415683762;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.25064699225158504;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40125234911517477;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E) )
%   | then if ( location(A, F), location(B, F) )
%   | | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | | else if ( enzyme(B, G) )
%   | | | then return 0.05259950478597549;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.07650591294577223;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | else if ( location(A, H), location(B, H) )
%   | | then return 0.28603552604342697;  // std dev = 11,910, 581,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=337 */
%   | | else if ( enzyme(B, I) )
%   | | | then return 0.18010688948105735;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | | else return 0.12056216431909476;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3075014438426908;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( complex(B, I), complex(A, I) )
%   | | | | | then return 0.6259605496592675;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.01554888430299667;  // std dev = 0,480, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | | else return 0.25262721632593493;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.12571024827427843;  // std dev = 0,485, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.24316986957843795;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06052457336203083;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09515705280530191;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24201545156203685;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.022062372003309995;  // std dev = 0,479, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.19186798473221045;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.02598717852306942;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.11619236101695377;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.18595635244987846;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.04753806782487307;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07428100301556732;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19630513458210286;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H) )
%   | | | | then return -0.004966089165685981;  // std dev = 0,481, 52,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | | else return 0.150504821634599;  // std dev = 0,479, 80,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.021855923068759556;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08997895876921264;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.14037477752444477;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.037134852914370416;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05752073447302714;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.1633112165815059;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I), complex(A, I) )
%   | | | | then return 0.46801106358337796;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.05486349591943239;  // std dev = 0,485, 128,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=66 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.01833123274186605;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06906502420852473;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.10540749386241288;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.02888907432121915;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.044285137432734614;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13867283374517514;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.12266996328194332;  // std dev = 0,410, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.08372366704858387;  // std dev = 0,486, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.015339561910426918;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.052693891218970494;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.079062335999484;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.022404602622918785;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03395370446261172;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.0521220992609781;  // std dev = 0,452, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03723519596551884;  // std dev = 0,479, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.028931887783263152;  // std dev = 0,491, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, H) )
%   | | | then return 0.14024382531779664;  // std dev = 0,459, 170,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=110 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.1637616901750331;  // std dev = 0,433, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then if ( location(B, L), complex(M, P), proteinclass(M, Q) )
%   | | | | | | then return -0.015462977467793534;  // std dev = 0,500, 252,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=131 */
%   | | | | | | else return 0.07263858807957027;  // std dev = 0,493, 298,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=140 */
%   | | | | | else if ( location(B, R), function(B, S), function(A, S) )
%   | | | | | | then return 0.06604488852112948;  // std dev = 0,497, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | | | | else return 0.14405475009946;  // std dev = 0,497, 66,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
Results
   AUC ROC   = 0.65602
   AUC PR    = 0.673635
   CLL	      = -0.657681
   Precision = 0.672897 at threshold = 0.5
   Recall    = 0.514286
   F1        = 0.582996


Total learning time: 31.716 seconds
Total inference time: 0.923 seconds
AUC ROC: 0.65602


Best model AUC ROC so far: 0.65602


Refining iteration 2
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;location(A, H), location(B, H).;false;true', '3;false,true;location(A, F), location(B, F).;true;true', '3;false,true,false;enzyme(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E).;true;true', '3;false,false,false;enzyme(B, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;complex(B, I), complex(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;true', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;phenotype(B, H).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '5;false,false,false,false;enzyme(A, K).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;complex(A, H).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '6;false,false,false,false;enzyme(A, K).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, K), location(B, K).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '7;false,false,true,true;phenotype(B, H), complex(B, I), complex(A, I).;false;true', '7;false,false,true,false;enzyme(A, J).;false;false', '7;false,false,false,false;enzyme(A, L).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, K), location(B, K).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '8;false,false,true,false;enzyme(A, J).;false;false', '8;false,false,false,false;enzyme(A, L).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, H).;false;true', '9;false,false,false,false,false,false;location(B, R), function(B, S), function(A, S).;false;false', '9;false,false,false,false,false;location(A, L), location(M, L), enzyme(M, N).;false;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, I), complex(J, I), proteinclass(J, K).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,true,true', 0.5416666666666666), ('false,false,false,true', 0.5528455284552846), ('false,false,true', 0.5800344234079173), ('false,false,false,false', 0.5900900900900901), ('false,true,false,false', 0.6341463414634146), ('false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,false', 0.6415094339622641), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5576923076923077), ('false,false,true,true,false', 0.5875), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,false,true,true,false', 0.515625), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true,true', 0.5198412698412699), ('false,false,false,false,false,true,false', 0.5302013422818792), ('false,false,false,false,false,false,false', 0.5303030303030303), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,true', 0.55), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,true', 0.6470588235294118), ('false,false,false,false,true', 0.7241379310344828)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.26481560176617963;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), function(A, J), function(B, J) )
%   | | | then return 0.4977885747391486;  // std dev = 0,480, 222,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=142 */
%   | | | else if ( enzyme(A, K), location(B, L) )
%   | | | | then return 0.1130508958838261;  // std dev = 0,436, 51,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | | else if ( location(B, M), location(A, M), proteinclass(A, N) )
%   | | | | | then return 0.4581489350995133;  // std dev = 0,490, 115,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=69 */
%   | | | | | else return 0.2925612008576019;  // std dev = 0,496, 587,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=255 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.22943025431536862;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.7647015506902141;  // std dev = 0,145, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return -0.00595712188544565;  // std dev = 0,385, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | | else if ( complex(B, M), complex(N, M), proteinclass(N, P) )
%   | | | | | then return 0.06442626046658188;  // std dev = 0,439, 79,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=21 */
%   | | | | | else return 0.3065595064747942;  // std dev = 0,498, 710,000 (wgt'ed) examples reached here.  /* #neg=360 #pos=350 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.009024025432460236;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.23395627475495379;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), complex(A, J) )
%   | | | then return 0.6097275848572061;  // std dev = 0,145, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, K), complex(B, L) )
%   | | | | then return 0.029265662223874403;  // std dev = 0,432, 81,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=21 */
%   | | | | else return 0.22836655475983353;  // std dev = 0,493, 801,000 (wgt'ed) examples reached here.  /* #neg=434 #pos=367 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D) )
%   | then if ( location(A, E), location(B, E) )
%   | | then if ( complex(B, F), phenotype(A, G) )
%   | | | then return 0.4924711050308194;  // std dev = 0,393, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else if ( proteinclass(A, H), enzyme(B, I) )
%   | | | | then return -0.13865572821154745;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | else if ( enzyme(B, J), function(A, K), function(B, K) )
%   | | | | | then return 0.5502331606773416;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else return 0.11784178306116276;  // std dev = 0,495, 70,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else return 0.08819213420585396;  // std dev = 0,451, 109,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | else if ( location(A, L), location(B, L) )
%   | | then return 0.25766636640800267;  // std dev = 11,260, 581,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=337 */
%   | | else if ( enzyme(B, M) )
%   | | | then return 0.19209314199403021;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | | else return 0.1429018762798957;  // std dev = 10,267, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( phenotype(B, F), proteinclass(A, G), phenotype(A, F) )
%   | | then return 0.5034718836328037;  // std dev = 0,296, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( proteinclass(A, H), complex(B, I), phenotype(A, J) )
%   | | | then return 0.35710451534688425;  // std dev = 0,408, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else if ( proteinclass(A, K), phenotype(A, L) )
%   | | | | then return -0.17776285145991802;  // std dev = 0,358, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | | else if ( complex(B, M), complex(A, M) )
%   | | | | | then return 0.5979322119183107;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( complex(B, N) )
%   | | | | | | then return -0.08531694038852791;  // std dev = 0,456, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | | | | else return 0.20635719494287932;  // std dev = 0,477, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else if ( enzyme(B, P) )
%   | | then return 0.1426350050372259;  // std dev = 0,493, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else return 0.1580564690220885;  // std dev = 0,473, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13094988504166113;  // std dev = 0,453, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.002355049042373063;  // std dev = 3,704, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.225512943779216;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.033960782492590304;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.12350922464576032;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.17631952670402065;  // std dev = 9,642, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06655811396819625;  // std dev = 4,136, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.08023281171981281;  // std dev = 10,255, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1000580943346096;  // std dev = 0,452, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H) )
%   | | | | then return 0.010135205124550435;  // std dev = 3,569, 52,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | | else return 0.15438242341345815;  // std dev = 4,335, 80,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.027543200000200503;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.09590704278550041;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.13491121229822697;  // std dev = 9,639, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.05266081862775726;  // std dev = 4,133, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06231544939839578;  // std dev = 10,252, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07614001628166725;  // std dev = 4,954, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I), complex(A, I) )
%   | | | | then return 0.5958420807093;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( phenotype(B, J) )
%   | | | | | then return -0.06822408048176005;  // std dev = 0,477, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | | | then return -0.2921736653861077;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | | else return 0.1838472420952221;  // std dev = 0,469, 69,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=46 */
%   | | | else if ( enzyme(A, N) )
%   | | | | then return -0.02241773211244316;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07375337357937357;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.07271676397736633;  // std dev = 0,470, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05782847643665282;  // std dev = 0,452, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.10392749649085427;  // std dev = 1,977, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.08498151283749096;  // std dev = 5,071, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.01829888266996563;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05634242016747599;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.08540175403725543;  // std dev = 9,645, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.025567229063455595;  // std dev = 4,126, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.031188244448348175;  // std dev = 10,248, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05450481370789225;  // std dev = 5,929, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03482810518850155;  // std dev = 5,932, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.030574360603149504;  // std dev = 6,122, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, H) )
%   | | | then return 0.07701210712074727;  // std dev = 4,823, 170,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=110 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.11585133341552573;  // std dev = 4,007, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then return 0.04869387546275778;  // std dev = 11,628, 550,000 (wgt'ed) examples reached here.  /* #neg=279 #pos=271 */
%   | | | | | else if ( location(B, P), function(B, Q), function(A, Q) )
%   | | | | | | then return 0.04559090851528378;  // std dev = 2,219, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | | | | else return 0.1373801007916098;  // std dev = 4,007, 66,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
Results
   AUC ROC   = 0.755918
   AUC PR    = 0.774594
   CLL	      = -0.617682
   Precision = 0.850746 at threshold = 0.5
   Recall    = 0.407143
   F1        = 0.550725


Total learning time: 138.511 seconds
Total inference time: 0.69 seconds
AUC ROC: 0.755918


Best model AUC ROC so far: 0.755918


Refining iteration 3
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, G).;false;true', '0;false,true;enzyme(B, F).;false;false', '0;false,false,false,false,false;location(B, M), location(A, M), proteinclass(A, N).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '0;false,false,false,false;enzyme(A, K), location(B, L).;false;true', '0;false,false,false;complex(B, I), function(A, J), function(B, J).;false;true', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false,false;enzyme(B, G).;true;true', '1;false,true;enzyme(B, F).;false;false', '1;false,false,true;location(A, H), location(B, H).;false;false', '1;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '1;false,false,false,false;complex(A, J), complex(K, J), enzyme(K, L).;false;false', '1;false,false,false;complex(B, I), complex(A, I).;false;true', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;true', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;true;true', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,false,false;complex(A, K), complex(B, L).;false;false', '2;false,false,true,false;enzyme(A, I).;false;false', '2;false,false,false;complex(B, J), complex(A, J).;false;true', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,true,true;complex(B, F), phenotype(A, G).;false;true', '3;false,true;location(A, E), location(B, E).;true;false', '3;false,true,true,false;proteinclass(A, H), enzyme(B, I).;false;true', '3;false,true,true,false,false;enzyme(B, J), function(A, K), function(B, K).;false;false', '3;false;enzyme(A, D).;true;true', '3;false,false;location(A, L), location(B, L).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,true;phenotype(B, F), proteinclass(A, G), phenotype(A, F).;false;true', '4;false,true,false;proteinclass(A, H), complex(B, I), phenotype(A, J).;false;true', '4;false,true,false,false;proteinclass(A, K), phenotype(A, L).;false;true', '4;false,true,false,false,false;complex(B, M), complex(A, M).;false;true', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;false', '4;false,true,false,false,false,false;complex(B, N).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;true', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;phenotype(B, H).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '5;false,false,false,false;enzyme(A, K).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;complex(A, H).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '6;false,false,false,false;enzyme(A, K).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false,false,true,true,false;phenotype(B, J).;false;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '7;false,false,true,true;phenotype(B, H), complex(B, I), complex(A, I).;false;true', '7;false,false,true,false;enzyme(A, N).;false;false', '7;false,false,true,true,false,false;complex(A, K), complex(L, K), enzyme(L, M).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, K), location(B, K).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '8;false,false,true,false;enzyme(A, J).;false;false', '8;false,false,false,false;enzyme(A, L).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, H).;false;true', '9;false,false,false,false,false,false;location(B, P), function(B, Q), function(A, Q).;false;false', '9;false,false,false,false,false;location(A, L), location(M, L), enzyme(M, N).;true;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, I), complex(J, I), proteinclass(J, K).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,false,false,false,false', 0.565587734241908), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('false,false,false,false,false,true', 0.6), ('false,false,false,true', 0.6396396396396397), ('false,false,false,false,true', 0.7450980392156863), ('true', 0.9655172413793104)]
Tree #2: [('false,false,false,false,false,false', 0.5070422535211268), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('false,false,false,false,false,true', 0.7341772151898734), ('false,false,false,false,true', 0.8172043010752689), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #3: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,false,false,false', 0.5418227215980025), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,false,true', 0.7407407407407407), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #4: [('false,false,false,true', 0.5528455284552846), ('false,true,true,false,false,false', 0.5714285714285714), ('false,false,true', 0.5800344234079173), ('false,false,false,false', 0.5900900900900901), ('false,true,false', 0.6697247706422018), ('false,true,true,false,true', 0.8), ('false,true,true,true', 0.8064516129032258), ('false,true,true,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,false,false', 0.5087179487179487), ('false,false,true', 0.5354609929078015), ('false,true,false,false,false,false,false', 0.5652173913043478), ('false,true,false,false,false,false,true', 0.7222222222222222), ('false,true,false,true', 0.7857142857142857), ('false,true,false,false,true', 0.85), ('false,true,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5576923076923077), ('false,false,true,true,false', 0.5875), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,false,false', 0.5087179487179487), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false,true', 0.6415094339622641), ('false,false,true,true,false,false,false', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('false,false,true,true,false,false,true', 0.8333333333333334), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true', 0.5072727272727273), ('false,false,false,false,false,false,false', 0.5303030303030303), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,true', 0.55), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,true', 0.6470588235294118), ('false,false,false,false,true', 0.7241379310344828)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.32268794219170716;  // std dev = 8,375, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else if ( complex(B, H), function(A, I), function(B, I) )
%   | | | then return 0.4977885747391486;  // std dev = 7,153, 222,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=142 */
%   | | | else if ( enzyme(A, J), location(B, K) )
%   | | | | then return 0.1130508958838261;  // std dev = 3,112, 51,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=13 */
%   | | | | else if ( location(B, L), location(A, L), proteinclass(A, M) )
%   | | | | | then return 0.4581489350995133;  // std dev = 5,254, 115,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=69 */
%   | | | | | else return 0.2925612008576019;  // std dev = 12,009, 587,000 (wgt'ed) examples reached here.  /* #neg=332 #pos=255 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3444692698855149;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.22083290624915236;  // std dev = 6,016, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.7647015506902141;  // std dev = 1,399, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return -0.00595712188544565;  // std dev = 3,711, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | | else return 0.28231549324963706;  // std dev = 13,992, 789,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=371 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then if ( phenotype(B, I) )
%   | | | | then if ( phenotype(A, I), proteinclass(B, J) )
%   | | | | | then return 0.506363143901901;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.13372163446793833;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.3830298105685673;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 6.416401593094596E-4;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22557388948180263;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.24824569284015965;  // std dev = 0,485, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D) )
%   | then if ( location(A, E), location(B, E) )
%   | | then if ( complex(B, F), phenotype(A, G) )
%   | | | then return 0.4924711050308194;  // std dev = 2,190, 31,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=25 */
%   | | | else if ( proteinclass(A, H), enzyme(B, I) )
%   | | | | then return -0.13865572821154745;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | | else if ( enzyme(B, J), function(A, K), function(B, K) )
%   | | | | | then return 0.5502331606773416;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else return 0.11784178306116276;  // std dev = 4,143, 70,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=30 */
%   | | else return 0.08439158721452808;  // std dev = 4,749, 109,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=36 */
%   | else if ( location(A, L), location(B, L) )
%   | | then return 0.26771520692442724;  // std dev = 11,468, 581,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=337 */
%   | | else return 0.14736334002884163;  // std dev = 11,708, 567,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=237 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( phenotype(B, F), proteinclass(A, G), phenotype(A, F) )
%   | | then return 0.5034718836328037;  // std dev = 1,254, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( proteinclass(A, H), complex(B, I), phenotype(A, J) )
%   | | | then return 0.35710451534688425;  // std dev = 1,527, 14,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=11 */
%   | | | else if ( proteinclass(A, K), phenotype(A, L) )
%   | | | | then return -0.17776285145991802;  // std dev = 1,600, 20,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=3 */
%   | | | | else if ( complex(B, M), complex(A, M) )
%   | | | | | then return 0.5979322119183107;  // std dev = 0,076, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( complex(B, N) )
%   | | | | | | then return -0.08531694038852791;  // std dev = 1,934, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | | | | else return 0.20635719494287932;  // std dev = 3,235, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else return 0.15524032707404908;  // std dev = 17,139, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13094988504166113;  // std dev = 0,453, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.0374142165443204;  // std dev = 3,674, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.20766121518750827;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.04354494066662361;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.12158693023968598;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.18328685771712702;  // std dev = 9,925, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06461821765911348;  // std dev = 4,186, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07333414157023273;  // std dev = 10,312, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1000580943346096;  // std dev = 0,452, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H) )
%   | | | | then return 0.013614916258440616;  // std dev = 3,563, 52,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=23 */
%   | | | | else return 0.15825877175804584;  // std dev = 4,268, 80,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.035134907915971174;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.09434548048524931;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.1391334996897246;  // std dev = 9,921, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.051019120768294124;  // std dev = 4,182, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05680085186343418;  // std dev = 10,311, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07614001628166725;  // std dev = 4,954, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I), complex(A, I) )
%   | | | | then return 0.628348062141715;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( phenotype(B, J) )
%   | | | | | then return -0.042081435478474524;  // std dev = 3,438, 53,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=19 */
%   | | | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | | | then return -0.30696249802271447;  // std dev = 0,913, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | | else return 0.16894734889066282;  // std dev = 3,897, 69,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=46 */
%   | | | else if ( enzyme(A, N) )
%   | | | | then return -0.028477211695990618;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07251617367258674;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.07169106286471251;  // std dev = 0,478, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05782847643665282;  // std dev = 0,452, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.08194872701441847;  // std dev = 1,947, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.08361621652100228;  // std dev = 5,052, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.023165855763861192;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05537847709681735;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.08750560279132195;  // std dev = 9,923, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.024322040262249874;  // std dev = 4,177, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.02698895592211127;  // std dev = 10,309, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05585864094196042;  // std dev = 5,895, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.033537553403325544;  // std dev = 5,933, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03011306657660738;  // std dev = 6,156, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, H) )
%   | | | then return 0.08546630730955591;  // std dev = 5,379, 170,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=110 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.11740702584504624;  // std dev = 4,001, 87,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=24 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then if ( phenotype(A, P), phenotype(B, P) )
%   | | | | | | then return 0.22852939818971146;  // std dev = 0,437, 20,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=14 */
%   | | | | | | else return 0.0376038837045954;  // std dev = 0,498, 530,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=257 */
%   | | | | | else if ( location(B, Q), function(B, R), function(A, R) )
%   | | | | | | then return 0.044622523550155;  // std dev = 2,243, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | | | | else return 0.137848971653808;  // std dev = 4,041, 66,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=35 */
Results
   AUC ROC   = 0.736633
   AUC PR    = 0.764903
   CLL	      = -0.626078
   Precision = 0.8125 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.590909


Total learning time: 164.878 seconds
Total inference time: 0.983 seconds
AUC ROC: 0.736633


Best model AUC ROC so far: 0.755918


******************************************
Best model found
******************************************
Total revision time: 367.757
Best validation AUC ROC: 0.755918


Results
   AUC ROC   = 0.584419
   AUC PR    = 0.608072
   CLL	      = -0.680271
   Precision = 0.652308 at threshold = 0.5
   Recall    = 0.168656
   F1        = 0.268015


Total inference time: 2.89 seconds
AUC ROC: 0.584419
Dataset: twitter->yeast, Fold: 4, Type: transfer, Time: 01:19:19
{'Parameter Learning results': {'F1': 0.564328, 'Learning time': 29.14, 'Recall': 0.544948, 'AUC PR': 0.587618, 'AUC ROC': 0.586946, 'CLL': -0.680042, 'Inference time': 2.675, 'Precision': [0.585137, 0.5]}, 'F1': 0.268015, 'Learning time': 367.757, 'Recall': 0.168656, 'AUC PR': 0.608072, 'AUC ROC': 0.584419, 'Mapping results': {'Finding best mapping': 0.010098457336425781, 'Knowledge compiling time': 0.05625128746032715, 'Total time': 2.8777284622192383, 'Generating mappings time': 0.03675675392150879, 'Possible mappings': 98, 'Generating paths time': 2.774615526199341}, 'CLL': -0.680271, 'Inference time': 2.89, 'Precision': [0.652308, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8422759192264946;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), proteinclass(E, F) )
%   | then return 0.15732926296836622;  // std dev = 0,458, 244,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=73 */
%   | else if ( phenotype(B, G), enzyme(B, H) )
%   | | then return 0.17773656396549034;  // std dev = 0,466, 97,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=31 */
%   | | else if ( complex(B, I), complex(J, I), enzyme(J, K) )
%   | | | then return 0.12285481745245355;  // std dev = 0,441, 68,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=18 */
%   | | | else if ( function(B, L), function(A, L), location(B, M) )
%   | | | | then return 0.4462171169176901;  // std dev = 0,492, 352,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=207 */
%   | | | | else if ( enzyme(B, N), enzyme(P, N), location(P, Q) )
%   | | | | | then return 0.5297907261442888;  // std dev = 0,470, 67,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=45 */
%   | | | | | else if ( phenotype(A, R) )
%   | | | | | | then if ( phenotype(B, S), phenotype(T, R), proteinclass(T, U) )
%   | | | | | | | then return 0.4370963035205641;  // std dev = 0,494, 38,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=22 */
%   | | | | | | | else return 0.3447799511422907;  // std dev = 0,500, 187,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=91 */
%   | | | | | | else return 0.2634352787118447;  // std dev = 0,491, 227,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=92 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.7067928809885279;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), phenotype(E, F) )
%   | then return 0.18487608950113832;  // std dev = 0,477, 428,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=155 */
%   | else if ( location(B, G), location(A, G) )
%   | | then return 0.3885276476031289;  // std dev = 0,490, 395,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=229 */
%   | | else if ( enzyme(A, H), enzyme(B, I) )
%   | | | then return 0.01798072667190092;  // std dev = 0,391, 20,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=4 */
%   | | | else if ( location(A, J), location(K, J), proteinclass(K, L) )
%   | | | | then return 0.2320112418735163;  // std dev = 0,490, 332,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=139 */
%   | | | | else if ( phenotype(B, M), enzyme(B, N) )
%   | | | | | then return -0.16489295120131223;  // std dev = 1,05e-08, 9,000 (wgt'ed) examples reached here.  /* #neg=9 */
%   | | | | | else if ( complex(B, P), complex(Q, P), proteinclass(Q, R) )
%   | | | | | | then return -0.1698883567224274;  // std dev = 0,044, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else if ( enzyme(B, S), function(A, T) )
%   | | | | | | | then return 0.6835723350698129;  // std dev = 0,301, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | | | | | else return 0.35888365208471323;  // std dev = 0,498, 79,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.546532671731518;  // std dev = 0,125, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return 0.0825364289181117;  // std dev = 0,445, 186,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( complex(B, G), complex(H, G), enzyme(H, I) )
%   | | then return 0.06513410429095483;  // std dev = 0,433, 103,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | else if ( enzyme(B, J), location(B, K), location(A, K) )
%   | | | then return 0.38908893842825476;  // std dev = 0,473, 121,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=78 */
%   | | | else if ( location(B, L), location(A, L), proteinclass(A, M) )
%   | | | | then return 0.32807505466650405;  // std dev = 0,490, 124,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=73 */
%   | | | | else if ( phenotype(B, N), location(A, P), proteinclass(B, Q) )
%   | | | | | then return 0.06003623787241637;  // std dev = 0,448, 60,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=17 */
%   | | | | | else if ( function(B, R), function(A, R), location(B, S) )
%   | | | | | | then return 0.2977301451130441;  // std dev = 0,492, 253,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=138 */
%   | | | | | | else if ( location(A, T), phenotype(B, U), location(B, T) )
%   | | | | | | | then return -0.047404230753068904;  // std dev = 0,400, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | | | | | else return 0.23296917226292968;  // std dev = 0,493, 418,000 (wgt'ed) examples reached here.  /* #neg=226 #pos=192 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.25513727204520337;  // std dev = 0,455, 727,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=427 */
%   else if ( location(A, D), complex(A, E), phenotype(B, F) )
%   | then return 0.054183348452342586;  // std dev = 0,436, 87,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | else if ( proteinclass(A, G), complex(A, H), location(A, I) )
%   | | then return -0.058757915359771526;  // std dev = 0,365, 25,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=4 */
%   | | else if ( enzyme(A, J), location(A, K), location(B, L) )
%   | | | then return 0.07067995912135967;  // std dev = 0,455, 74,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=24 */
%   | | | else if ( function(B, M), function(N, M), phenotype(N, P) )
%   | | | | then if ( complex(B, Q), complex(R, Q), proteinclass(R, S) )
%   | | | | | then return -0.01104187761714995;  // std dev = 0,322, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | | | else if ( phenotype(A, P), complex(A, T), complex(N, U) )
%   | | | | | | then return 0.34586189961594516;  // std dev = 0,478, 51,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=31 */
%   | | | | | | else if ( complex(A, W) )
%   | | | | | | | then return 0.02778955232832705;  // std dev = 0,433, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | | | | | else return 0.23528836715732343;  // std dev = 0,491, 255,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=131 */
%   | | | | else return 0.0915565088743441;  // std dev = 0,475, 110,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=39 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.20005107774231184;  // std dev = 0,454, 727,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=427 */
%   else if ( location(A, D), location(E, D), proteinclass(E, F) )
%   | then if ( enzyme(E, G), enzyme(A, H), location(B, I) )
%   | | then return 0.04089767844798019;  // std dev = 0,444, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | else if ( enzyme(E, J), complex(A, K), phenotype(B, L) )
%   | | | then return 0.030552166056845808;  // std dev = 0,428, 76,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=22 */
%   | | | else if ( proteinclass(B, F), location(B, M) )
%   | | | | then return 0.4961653772523882;  // std dev = 0,383, 15,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=12 */
%   | | | | else if ( proteinclass(A, N), enzyme(E, P) )
%   | | | | | then return 0.04209477551970046;  // std dev = 0,462, 95,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=31 */
%   | | | | | else if ( phenotype(A, Q), enzyme(E, R), phenotype(E, Q) )
%   | | | | | | then if ( location(B, S), location(T, S), location(T, D) )
%   | | | | | | | then return 0.14163381357529595;  // std dev = 0,479, 46,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=21 */
%   | | | | | | | else return 0.39604247441987495;  // std dev = 0,429, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | | | | else return 0.108849161635345;  // std dev = 0,471, 245,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=99 */
%   | else return 0.17256446914543644;  // std dev = 0,467, 112,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=56 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.3120354911505206;  // std dev = 0,128, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return 0.009236928789078627;  // std dev = 0,437, 186,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( phenotype(B, G), enzyme(B, H) )
%   | | then return 0.009005505456931429;  // std dev = 0,446, 108,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=34 */
%   | | else if ( function(B, I), function(A, I), location(B, J) )
%   | | | then return 0.16231496391738587;  // std dev = 0,480, 400,000 (wgt'ed) examples reached here.  /* #neg=178 #pos=222 */
%   | | | else if ( enzyme(A, K), proteinclass(A, L) )
%   | | | | then return -0.21266194769819777;  // std dev = 0,354, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | else if ( complex(B, M), proteinclass(A, N) )
%   | | | | | then if ( phenotype(B, P), location(A, Q), location(B, Q) )
%   | | | | | | then return 0.5747370094847046;  // std dev = 0,121, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | else if ( complex(A, R) )
%   | | | | | | | then return 0.48707160320890364;  // std dev = 0,893, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | | else return 0.12068254078290327;  // std dev = 0,495, 20,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=9 */
%   | | | | | else return 0.10977647849166608;  // std dev = 0,483, 549,000 (wgt'ed) examples reached here.  /* #neg=295 #pos=254 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(A, C), function(B, D), function(A, D) )
%   then return 0.20767463103507447;  // std dev = 0,430, 172,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=105 */
%   else if ( phenotype(B, E), enzyme(B, F) )
%   | then return -0.011350612421035957;  // std dev = 0,433, 113,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( enzyme(B, G), function(A, H) )
%   | | then return 0.171444064658858;  // std dev = 0,457, 148,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=90 */
%   | | else if ( function(B, I), function(A, I), location(B, J) )
%   | | | then return 0.10614887136099764;  // std dev = 0,434, 424,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=248 */
%   | | | else if ( enzyme(A, K), complex(A, L) )
%   | | | | then return -0.2656197946643179;  // std dev = 0,200, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | else if ( location(A, M), location(N, M), enzyme(N, P) )
%   | | | | | then return 0.05094008472945846;  // std dev = 0,476, 457,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=187 */
%   | | | | | else if ( complex(B, Q), complex(R, Q), proteinclass(R, S) )
%   | | | | | | then return -0.19759548223275278;  // std dev = 0,058, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | | else if ( proteinclass(B, T), function(A, U) )
%   | | | | | | | then return 0.41407914286652636;  // std dev = 0,394, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | | | | | else return 0.13446036474509296;  // std dev = 0,498, 57,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=30 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(A, C), phenotype(B, D), phenotype(A, E) )
%   then return 0.21381742766886666;  // std dev = 0,434, 81,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=52 */
%   else if ( function(B, F), function(A, F) )
%   | then return 0.08357159394940143;  // std dev = 0,434, 661,000 (wgt'ed) examples reached here.  /* #neg=292 #pos=369 */
%   | else if ( complex(A, G), complex(H, G), enzyme(H, I) )
%   | | then return -0.13876977404422552;  // std dev = 0,316, 61,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=7 */
%   | | else if ( proteinclass(B, J), location(A, K), location(B, K) )
%   | | | then return -0.13515247013740908;  // std dev = 0,450, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | else if ( phenotype(A, L), phenotype(B, M), proteinclass(A, N) )
%   | | | | then return 0.2336201585860131;  // std dev = 0,420, 22,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=15 */
%   | | | | else if ( complex(B, P), proteinclass(B, Q) )
%   | | | | | then return -0.14762574877226511;  // std dev = 0,234, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | | | else if ( complex(B, R), location(A, S) )
%   | | | | | | then return 0.011296513844624972;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=26 */
%   | | | | | | else if ( proteinclass(A, T), proteinclass(U, T), enzyme(U, W) )
%   | | | | | | | then return -0.25554517618979794;  // std dev = 0,362, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | | | | else return 0.09519692680903291;  // std dev = 0,482, 449,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=221 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C), enzyme(A, D) )
%   then return 0.13223874972303712;  // std dev = 0,426, 172,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=105 */
%   else if ( phenotype(B, E), enzyme(B, F) )
%   | then return -0.01953093037791841;  // std dev = 0,429, 113,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( enzyme(B, G), enzyme(H, G), location(H, I) )
%   | | then if ( phenotype(A, J), location(B, I) )
%   | | | then if ( proteinclass(A, K), complex(B, L) )
%   | | | | then return 0.35581624685160446;  // std dev = 0,456, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | else if ( proteinclass(H, M), complex(A, N) )
%   | | | | | then return 0.27128903319490594;  // std dev = 0,396, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( proteinclass(A, P) )
%   | | | | | | then return 0.14074599334955165;  // std dev = 0,446, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | | | | else return -0.10701155452435855;  // std dev = 0,452, 34,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=12 */
%   | | | else return 0.17060751196432833;  // std dev = 0,425, 86,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=59 */
%   | | else if ( function(A, Q), proteinclass(B, R), proteinclass(A, S) )
%   | | | then return 0.16789051365832877;  // std dev = 0,447, 59,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=39 */
%   | | | else return 0.03369270824401763;  // std dev = 0,453, 911,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=432 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C), location(A, D) )
%   then return 0.0658347131737389;  // std dev = 0,432, 700,000 (wgt'ed) examples reached here.  /* #neg=298 #pos=402 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then return -0.022618014241040946;  // std dev = 0,432, 188,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=61 */
%   | else if ( phenotype(B, H), location(B, I) )
%   | | then return -0.005368366080161343;  // std dev = 0,451, 143,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=56 */
%   | | else if ( proteinclass(A, J), proteinclass(K, J), enzyme(K, L) )
%   | | | then return -0.20407333428918664;  // std dev = 0,350, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( complex(A, M), location(B, N), proteinclass(A, P) )
%   | | | | then return -0.06648439478270411;  // std dev = 0,430, 14,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=5 */
%   | | | | else if ( complex(B, Q), enzyme(A, R) )
%   | | | | | then return -0.28524717677464906;  // std dev = 0,081, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | else if ( enzyme(A, S) )
%   | | | | | | then if ( phenotype(A, T) )
%   | | | | | | | then return 0.41486884824771464;  // std dev = 0,882, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | | else return 0.11221259677075264;  // std dev = 0,487, 33,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=16 */
%   | | | | | | else return 0.06148124053751628;  // std dev = 0,483, 307,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=158 */
Results
   AUC ROC   = 0.607084
   AUC PR    = 0.628411
   CLL	      = -0.680219
   Precision = 0.649781 at threshold = 0.5
   Recall    = 0.353752
   F1        = 0.458104


Total learning time: 176.671 seconds
Total inference time: 12.574 seconds
AUC ROC: 0.607084


Dataset: twitter->yeast, Fold: 4, Type: scratch, Time: 01:22:29
{'F1': 0.458104, 'Learning time': 176.671, 'Recall': 0.353752, 'AUC PR': 0.628411, 'AUC ROC': 0.607084, 'CLL': -0.680219, 'Inference time': 12.574, 'Precision': [0.649781, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5398142000280186;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.18564893509950744;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(A, H), function(B, H) )
%   | | then if ( enzyme(A, I), enzyme(J, I), complex(J, K) )
%   | | | then return 0.2520883290389074;  // std dev = 0,489, 132,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | | else if ( complex(B, L), complex(A, L) )
%   | | | | then return 0.8146706742299468;  // std dev = 0,204, 46,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=44 */
%   | | | | else if ( proteinclass(A, M), phenotype(N, G), enzyme(N, P) )
%   | | | | | then if ( complex(A, Q), proteinclass(N, R), function(N, H) )
%   | | | | | | then return 0.28972788246793296;  // std dev = 0,495, 95,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=41 */
%   | | | | | | else return 0.41277078383900895;  // std dev = 0,497, 119,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=66 */
%   | | | | | else if ( enzyme(B, S) )
%   | | | | | | then return 0.3301489350995134;  // std dev = 0,499, 125,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=59 */
%   | | | | | | else return 0.41617755195165407;  // std dev = 0,497, 629,000 (wgt'ed) examples reached here.  /* #neg=278 #pos=351 */
%   | | else return 0.29541219267526486;  // std dev = 0,496, 4.224,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.847 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.46072335548061355;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.15821954552644565;  // std dev = 0,468, 1.132,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=367 */
%   | else if ( phenotype(A, G), phenotype(H, G), complex(H, I) )
%   | | then return 0.23533184883382474;  // std dev = 0,491, 2.804,000 (wgt'ed) examples reached here.  /* #neg=1.617 #pos=1.187 */
%   | | else if ( location(B, J), function(B, K), function(A, K) )
%   | | | then return 0.4607963396993536;  // std dev = 0,479, 862,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=554 */
%   | | | else if ( complex(A, L), complex(M, L), proteinclass(M, N) )
%   | | | | then return 0.10639332791333284;  // std dev = 0,453, 177,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=51 */
%   | | | | else if ( proteinclass(B, P), location(A, Q), location(B, R) )
%   | | | | | then return 0.19159106802632625;  // std dev = 0,484, 150,000 (wgt'ed) examples reached here.  /* #neg=94 #pos=56 */
%   | | | | | else if ( enzyme(A, S), enzyme(B, T) )
%   | | | | | | then return 0.4662434325657576;  // std dev = 0,477, 17,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=11 */
%   | | | | | | else if ( function(B, U), function(A, U) )
%   | | | | | | | then return 0.4704316477364716;  // std dev = 0,476, 69,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=45 */
%   | | | | | | | else return 0.2472094726107594;  // std dev = 0,495, 1.359,000 (wgt'ed) examples reached here.  /* #neg=777 #pos=582 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.3715247459791863;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.13762540101930137;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(B, H), function(A, H) )
%   | | then if ( enzyme(A, I), enzyme(J, I), complex(J, K) )
%   | | | then return 0.18188392720410948;  // std dev = 0,489, 132,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | | else if ( complex(B, L), complex(M, L), phenotype(M, G) )
%   | | | | then return 0.4900191512276809;  // std dev = 0,422, 153,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=115 */
%   | | | | else if ( location(B, N), location(A, N) )
%   | | | | | then return 0.3331369313818939;  // std dev = 0,495, 512,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=292 */
%   | | | | | else if ( complex(B, P) )
%   | | | | | | then return 0.010678019684699915;  // std dev = 0,431, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | | | | else if ( location(B, Q) )
%   | | | | | | | then return 0.2166411159489172;  // std dev = 0,497, 249,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=113 */
%   | | | | | | | else return 0.3579560547500032;  // std dev = 0,490, 47,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | else return 0.2092685700719187;  // std dev = 0,492, 4.224,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.847 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.26219892236761416;  // std dev = 0,478, 4.835,000 (wgt'ed) examples reached here.  /* #neg=2.075 #pos=2.760 */
%   else if ( location(A, D), location(E, D), proteinclass(E, F) )
%   | then return 0.1250093260057497;  // std dev = 0,483, 3.733,000 (wgt'ed) examples reached here.  /* #neg=2.209 #pos=1.524 */
%   | else if ( function(B, G), function(A, G) )
%   | | then return 0.2779939346259978;  // std dev = 0,483, 152,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=95 */
%   | | else if ( location(B, H), location(I, H), complex(I, J) )
%   | | | then if ( phenotype(A, K) )
%   | | | | then return 0.07067912451685529;  // std dev = 0,461, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | | else if ( function(A, L), function(M, L), complex(M, N) )
%   | | | | | then return 0.1279481860015548;  // std dev = 0,486, 93,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=35 */
%   | | | | | else if ( complex(B, J), function(A, P) )
%   | | | | | | then return 0.08601576644405325;  // std dev = 0,467, 19,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=6 */
%   | | | | | | else if ( phenotype(B, Q), enzyme(B, R), function(A, S) )
%   | | | | | | | then return -0.226266114791326;  // std dev = 5,27e-09, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | | else return 0.3455382382161459;  // std dev = 0,490, 65,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=39 */
%   | | | else return 0.050992071937296005;  // std dev = 0,463, 29,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=9 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.3398530804886756;  // std dev = 0,409, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), phenotype(E, D), complex(E, F) )
%   | then return 0.11191758318963516;  // std dev = 0,484, 4.110,000 (wgt'ed) examples reached here.  /* #neg=2.278 #pos=1.832 */
%   | else if ( enzyme(B, G), complex(B, H), location(B, I) )
%   | | then return 0.03989751937946264;  // std dev = 0,462, 178,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=66 */
%   | | else if ( location(B, J), function(B, K), function(A, K) )
%   | | | then return 0.2654988269376463;  // std dev = 0,470, 1.537,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=1.019 */
%   | | | else if ( complex(A, L), complex(M, L), phenotype(M, N) )
%   | | | | then return 0.02688186772028224;  // std dev = 0,456, 371,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=112 */
%   | | | | else if ( phenotype(B, P), location(A, Q), enzyme(A, R) )
%   | | | | | then return -0.10831889151416227;  // std dev = 0,345, 51,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=7 */
%   | | | | | else if ( complex(B, S), location(A, T), phenotype(B, U) )
%   | | | | | | then return 0.05118637501887841;  // std dev = 0,461, 136,000 (wgt'ed) examples reached here.  /* #neg=95 #pos=41 */
%   | | | | | | else if ( function(B, W), function(A, W) )
%   | | | | | | | then return 0.25151736509184847;  // std dev = 0,494, 82,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=49 */
%   | | | | | | | else return 0.14264153810115573;  // std dev = 0,494, 1.651,000 (wgt'ed) examples reached here.  /* #neg=942 #pos=709 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C), location(B, D) )
%   then return 0.25776529623445266;  // std dev = 0,408, 822,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=632 */
%   else if ( phenotype(A, E), function(B, F), location(A, G) )
%   | then if ( function(A, F), location(B, G) )
%   | | then if ( phenotype(B, H), phenotype(I, E), proteinclass(I, J) )
%   | | | then if ( phenotype(I, H), function(I, F), complex(I, K) )
%   | | | | then return 0.20202347973054705;  // std dev = 0,463, 350,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=241 */
%   | | | | else if ( enzyme(B, L), phenotype(I, H) )
%   | | | | | then return 0.23758998219359848;  // std dev = 0,447, 29,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | | | else if ( complex(B, M), complex(A, M) )
%   | | | | | | then return 0.513452051159116;  // std dev = 0,000, 10,000 (wgt'ed) examples reached here.  /* #pos=10 */
%   | | | | | | else if ( function(I, F), proteinclass(N, J), location(N, G) )
%   | | | | | | | then return -0.09224476181558253;  // std dev = 0,490, 139,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=55 */
%   | | | | | | | else return 0.37059490830197295;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | else return 0.2033437501113218;  // std dev = 0,482, 727,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=433 */
%   | | else return 0.048173520948919274;  // std dev = 0,479, 2.841,000 (wgt'ed) examples reached here.  /* #neg=1.775 #pos=1.066 */
%   | else return 0.13144070759970466;  // std dev = 0,482, 4.023,000 (wgt'ed) examples reached here.  /* #neg=2.013 #pos=2.010 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.19477019261294765;  // std dev = 0,409, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), phenotype(E, D), complex(E, F) )
%   | then return 0.066489246959169;  // std dev = 0,481, 4.110,000 (wgt'ed) examples reached here.  /* #neg=2.278 #pos=1.832 */
%   | else if ( proteinclass(B, G), phenotype(B, H) )
%   | | then return 0.052454783769912534;  // std dev = 0,463, 405,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=196 */
%   | | else if ( function(B, I), function(A, I) )
%   | | | then return 0.1735791120727877;  // std dev = 0,472, 1.486,000 (wgt'ed) examples reached here.  /* #neg=515 #pos=971 */
%   | | | else if ( phenotype(A, J) )
%   | | | | then if ( complex(B, K) )
%   | | | | | then return 0.019505081888271946;  // std dev = 1,138, 6,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=2 */
%   | | | | | else if ( phenotype(B, L) )
%   | | | | | | then return 0.5463997312040451;  // std dev = 0,924, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | | else if ( location(B, M), location(A, M) )
%   | | | | | | | then return -0.022133167755563215;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | | else return 0.2728375959369657;  // std dev = 0,490, 15,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=9 */
%   | | | | else return 0.05756194863445994;  // std dev = 0,485, 2.085,000 (wgt'ed) examples reached here.  /* #neg=1.266 #pos=819 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4063985035993625;  // std dev = 0,210, 111,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=107 */
%   else if ( enzyme(B, D), complex(A, E), phenotype(A, F) )
%   | then return -0.030321092014207088;  // std dev = 0,467, 499,000 (wgt'ed) examples reached here.  /* #neg=302 #pos=197 */
%   | else if ( enzyme(A, G), enzyme(H, G), proteinclass(H, I) )
%   | | then return 0.01888437508910187;  // std dev = 0,466, 659,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=295 */
%   | | else if ( enzyme(B, J), location(B, K), complex(B, L) )
%   | | | then return -0.019305645854625145;  // std dev = 0,471, 237,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=88 */
%   | | | else if ( proteinclass(B, M), enzyme(A, N), location(B, P) )
%   | | | | then if ( complex(B, Q), phenotype(B, R) )
%   | | | | | then return -0.3258661445091086;  // std dev = 0,353, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | | | else if ( phenotype(A, S), phenotype(B, T) )
%   | | | | | | then return 0.25319587575062635;  // std dev = 0,445, 19,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=14 */
%   | | | | | | else return -0.06888575133208097;  // std dev = 0,473, 42,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=14 */
%   | | | | else if ( complex(B, U), complex(A, U) )
%   | | | | | then return 0.36282687634642974;  // std dev = 0,243, 319,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=302 */
%   | | | | | else return 0.06986809466919801;  // std dev = 0,480, 7.049,000 (wgt'ed) examples reached here.  /* #neg=3.594 #pos=3.455 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), phenotype(A, D), complex(A, E) )
%   then return 0.0071326451764933555;  // std dev = 0,457, 551,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=248 */
%   else if ( proteinclass(B, F), phenotype(B, G), complex(A, H) )
%   | then return -0.006012854723909056;  // std dev = 0,457, 386,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=204 */
%   | else if ( phenotype(B, I), phenotype(A, I), location(B, J) )
%   | | then return 0.16051117634125542;  // std dev = 0,381, 610,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=490 */
%   | | else if ( location(B, K), location(A, K) )
%   | | | then return 0.08532998981641275;  // std dev = 0,475, 3.804,000 (wgt'ed) examples reached here.  /* #neg=1.736 #pos=2.068 */
%   | | | else if ( location(A, L), location(B, M), complex(B, N) )
%   | | | | then return -0.024146627928216025;  // std dev = 0,470, 631,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=234 */
%   | | | | else if ( location(A, P), location(B, Q) )
%   | | | | | then return 0.017564578293457193;  // std dev = 0,484, 1.766,000 (wgt'ed) examples reached here.  /* #neg=1.062 #pos=704 */
%   | | | | | else if ( location(A, R), function(A, S), function(B, S) )
%   | | | | | | then if ( phenotype(B, T), location(U, R), phenotype(U, T) )
%   | | | | | | | then return -0.009847079734097666;  // std dev = 0,505, 38,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=20 */
%   | | | | | | | else return 0.16258711638031767;  // std dev = 0,487, 131,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=78 */
%   | | | | | | else return 0.0319090397353452;  // std dev = 0,483, 1.031,000 (wgt'ed) examples reached here.  /* #neg=603 #pos=428 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), phenotype(A, E) )
%   then return 0.017363870156327094;  // std dev = 0,460, 896,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=422 */
%   else if ( location(B, F), location(A, F) )
%   | then return 0.06945360126879856;  // std dev = 0,464, 4.313,000 (wgt'ed) examples reached here.  /* #neg=1.842 #pos=2.471 */
%   | else if ( complex(B, G), location(B, H), function(A, I) )
%   | | then return -0.01770042744052112;  // std dev = 0,469, 811,000 (wgt'ed) examples reached here.  /* #neg=479 #pos=332 */
%   | | else if ( location(A, J), function(B, K) )
%   | | | then return 0.02203527035832674;  // std dev = 0,483, 2.590,000 (wgt'ed) examples reached here.  /* #neg=1.508 #pos=1.082 */
%   | | | else if ( phenotype(A, L), enzyme(A, M), location(A, N) )
%   | | | | then return 0.6368053943812284;  // std dev = 0,010, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( function(B, P), phenotype(A, Q), phenotype(B, Q) )
%   | | | | | then return 0.32513994682121095;  // std dev = 0,051, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else if ( proteinclass(B, R), proteinclass(S, R), complex(S, T) )
%   | | | | | | then if ( enzyme(B, U), phenotype(B, W), function(A, X) )
%   | | | | | | | then return -0.48718014383692737;  // std dev = 0,274, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | | else return -0.06285440973902325;  // std dev = 0,499, 19,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=7 */
%   | | | | | | else return 0.0613756479112156;  // std dev = 0,485, 308,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=152 */


Predicates from source: ['interaction(protein,protein).', 'location(protein,loc).', 'enzyme(protein,enz).', 'function(protein,fun).', 'proteinclass(protein,class).', 'phenotype(protein,phe).', 'complex(protein,com).'] 

Source structured tree: [['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(A, H), function(B, H)', 'false,false,true,false,false,true': 'complex(A, Q), proteinclass(N, R), function(N, H)', 'false,false,true': 'enzyme(A, I), enzyme(J, I), complex(J, K)', 'false,false,true,false,false': 'proteinclass(A, M), phenotype(N, G), enzyme(N, P)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,true,false': 'complex(B, L), complex(A, L)', 'false,false,true,false,false,false': 'enzyme(B, S)'}, {'false,false,true,false,false,true,true': [0.495, 54, 41], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.204, 2, 44], 'false,false,true,false,false,true,false': [0.497, 53, 66], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,true': [0.489, 80, 52], 'false,false,true,false,false,false,false': [0.497, 278, 351], 'false,true': [0.469, 807, 393], 'false,false,true,false,false,false,true': [0.499, 66, 59]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), phenotype(H, G), complex(H, I)', 'false,false,false': 'location(B, J), function(B, K), function(A, K)', 'false,false,false,false,false,false': 'enzyme(A, S), enzyme(B, T)', 'false,false,false,false,false': 'proteinclass(B, P), location(A, Q), location(B, R)', 'false': 'phenotype(B, E), location(A, F)', 'false,false,false,false': 'complex(A, L), complex(M, L), proteinclass(M, N)', 'false,false,false,false,false,false,false': 'function(B, U), function(A, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'false,false,false,false,false,false,true': [0.477, 6, 11], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.484, 94, 56], 'false,false,false,false,false,false,false,true': [0.476, 24, 45], 'false,false,false,false,false,false,false,false': [0.495, 777, 582], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.453, 126, 51]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(B, H), function(A, H)', 'false,false,true': 'enzyme(A, I), enzyme(J, I), complex(J, K)', 'false,false,true,false,false': 'location(B, N), location(A, N)', 'false,false,true,false,false,false,false': 'location(B, Q)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,true,false': 'complex(B, L), complex(M, L), phenotype(M, G)', 'false,false,true,false,false,false': 'complex(B, P)'}, {'false,true': [0.469, 807, 393], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.422, 38, 115], 'false,false,true,false,false,false,false,false': [0.49, 19, 28], 'false,false,true,true': [0.489, 80, 52], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,false,false,true': [0.495, 220, 292], 'false,false,true,false,false,false,true': [0.431, 40, 13], 'false,false,true,false,false,false,false,true': [0.497, 136, 113]}], ['interaction(A, B)', {'': 'location(B, C), location(A, C)', 'false,false': 'function(B, G), function(A, G)', 'false,false,false': 'location(B, H), location(I, H), complex(I, J)', 'false,false,false,true,false,false,false': 'phenotype(B, Q), enzyme(B, R), function(A, S)', 'false,false,false,true,false,false': 'complex(B, J), function(A, P)', 'false': 'location(A, D), location(E, D), proteinclass(E, F)', 'false,false,false,true,false': 'function(A, L), function(M, L), complex(M, N)', 'false,false,false,true': 'phenotype(A, K)'}, {'false,true': [0.483, 2209, 1524], 'false,false,true': [0.483, 57, 95], 'false,false,false,true,false,false,true': [0.467, 13, 6], 'true': [0.478, 2075, 2760], 'false,false,false,false': [0.463, 20, 9], 'false,false,false,true,false,false,false,false': [0.49, 26, 39], 'false,false,false,true,false,false,false,true': [5.27e-09, 3, 0], 'false,false,false,true,true': [0.461, 13, 6], 'false,false,false,true,false,true': [0.486, 58, 35]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,false': 'enzyme(B, G), complex(B, H), location(B, I)', 'false,false,false': 'location(B, J), function(B, K), function(A, K)', 'false,false,false,false,false,false': 'complex(B, S), location(A, T), phenotype(B, U)', 'false,false,false,false,false': 'phenotype(B, P), location(A, Q), enzyme(A, R)', 'false': 'phenotype(A, D), phenotype(E, D), complex(E, F)', 'false,false,false,false': 'complex(A, L), complex(M, L), phenotype(M, N)', 'false,false,false,false,false,false,false': 'function(B, W), function(A, W)'}, {'false,true': [0.484, 2278, 1832], 'false,false,true': [0.462, 112, 66], 'false,false,false,false,false,false,true': [0.461, 95, 41], 'true': [0.409, 193, 639], 'false,false,false,false,false,true': [0.345, 44, 7], 'false,false,false,false,false,false,false,true': [0.494, 33, 49], 'false,false,false,false,false,false,false,false': [0.494, 942, 709], 'false,false,false,true': [0.47, 518, 1019], 'false,false,false,false,true': [0.456, 259, 112]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C), location(B, D)', 'false,true,true': 'phenotype(B, H), phenotype(I, E), proteinclass(I, J)', 'false,true': 'function(A, F), location(B, G)', 'false,true,true,true,false': 'enzyme(B, L), phenotype(I, H)', 'false,true,true,true,false,false': 'complex(B, M), complex(A, M)', 'false,true,true,true,false,false,false': 'function(I, F), proteinclass(N, J), location(N, G)', 'false': 'phenotype(A, E), function(B, F), location(A, G)', 'false,true,true,true': 'phenotype(I, H), function(I, F), complex(I, K)'}, {'false,true,true,true,false,true': [0.447, 8, 21], 'false,true,true,true,true': [0.463, 109, 241], 'false,false': [0.482, 2013, 2010], 'false,true,true,false': [0.482, 294, 433], 'true': [0.408, 190, 632], 'false,true,false': [0.479, 1775, 1066], 'false,true,true,true,false,false,false,false': [0.35, 1, 6], 'false,true,true,true,false,false,true': [0.0, 0, 10], 'false,true,true,true,false,false,false,true': [0.49, 84, 55]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,false': 'proteinclass(B, G), phenotype(B, H)', 'false,false,false': 'function(B, I), function(A, I)', 'false': 'phenotype(A, D), phenotype(E, D), complex(E, F)', 'false,false,false,false': 'phenotype(A, J)', 'false,false,false,false,true,false,false': 'location(B, M), location(A, M)', 'false,false,false,false,true': 'complex(B, K)', 'false,false,false,false,true,false': 'phenotype(B, L)'}, {'false,false,false,false,true,false,true': [0.924, 1, 5], 'false,true': [0.481, 2278, 1832], 'false,false,true': [0.463, 209, 196], 'false,false,false,false,true,false,false,true': [0.816, 2, 1], 'true': [0.409, 193, 639], 'false,false,false,false,true,true': [1.138, 4, 2], 'false,false,false,false,false': [0.485, 1266, 819], 'false,false,false,true': [0.472, 515, 971], 'false,false,false,false,true,false,false,false': [0.49, 6, 9]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(A, G), enzyme(H, G), proteinclass(H, I)', 'false,false,false': 'enzyme(B, J), location(B, K), complex(B, L)', 'false,false,false,false,false': 'complex(B, U), complex(A, U)', 'false': 'enzyme(B, D), complex(A, E), phenotype(A, F)', 'false,false,false,false': 'proteinclass(B, M), enzyme(A, N), location(B, P)', 'false,false,false,false,true': 'complex(B, Q), phenotype(B, R)', 'false,false,false,false,true,false': 'phenotype(A, S), phenotype(B, T)'}, {'false,false,false,false,true,false,true': [0.445, 5, 14], 'false,true': [0.467, 302, 197], 'false,false,true': [0.466, 364, 295], 'false,false,false,false,false,false': [0.48, 3594, 3455], 'true': [0.21, 4, 107], 'false,false,false,false,false,true': [0.243, 17, 302], 'false,false,false,false,true,true': [0.353, 11, 2], 'false,false,false,false,true,false,false': [0.473, 28, 14], 'false,false,false,true': [0.471, 149, 88]}], ['interaction(A, B)', {'': 'enzyme(B, C), phenotype(A, D), complex(A, E)', 'false,false': 'phenotype(B, I), phenotype(A, I), location(B, J)', 'false,false,false': 'location(B, K), location(A, K)', 'false,false,false,false,false,false,true': 'phenotype(B, T), location(U, R), phenotype(U, T)', 'false,false,false,false,false,false': 'location(A, R), function(A, S), function(B, S)', 'false,false,false,false,false': 'location(A, P), location(B, Q)', 'false': 'proteinclass(B, F), phenotype(B, G), complex(A, H)', 'false,false,false,false': 'location(A, L), location(B, M), complex(B, N)'}, {'false,false,false,false,false,false,false': [0.483, 603, 428], 'false,true': [0.457, 182, 204], 'false,false,true': [0.381, 120, 490], 'false,false,false,false,false,false,true,true': [0.505, 18, 20], 'true': [0.457, 303, 248], 'false,false,false,false,false,true': [0.484, 1062, 704], 'false,false,false,false,false,false,true,false': [0.487, 53, 78], 'false,false,false,true': [0.475, 1736, 2068], 'false,false,false,false,true': [0.47, 397, 234]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), phenotype(A, E)', 'false,false': 'complex(B, G), location(B, H), function(A, I)', 'false,false,false': 'location(A, J), function(B, K)', 'false,false,false,false,false,false,true': 'enzyme(B, U), phenotype(B, W), function(A, X)', 'false,false,false,false,false,false': 'proteinclass(B, R), proteinclass(S, R), complex(S, T)', 'false,false,false,false,false': 'function(B, P), phenotype(A, Q), phenotype(B, Q)', 'false': 'location(B, F), location(A, F)', 'false,false,false,false': 'phenotype(A, L), enzyme(A, M), location(A, N)'}, {'false,false,false,false,false,false,false': [0.485, 156, 152], 'false,true': [0.464, 1842, 2471], 'false,false,true': [0.469, 479, 332], 'false,false,false,false,false,false,true,true': [0.274, 3, 0], 'true': [0.46, 474, 422], 'false,false,false,false,false,true': [0.051, 0, 4], 'false,false,false,false,false,false,true,false': [0.499, 12, 7], 'false,false,false,true': [0.483, 1508, 1082], 'false,false,false,false,true': [0.01, 0, 4]}]] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)', 'false,false,true,false,false,true': 'tweets(A, Q), tweets(N, R), tweets(N, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'tweets(A, M), tweets(N, G), tweets(N, P)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(A, L)', 'false,false,true,false,false,false': 'tweets(B, S)'}, {'false,false,true,false,false,true,true': [0.495, 54, 41], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.204, 2, 44], 'false,false,true,false,false,true,false': [0.497, 53, 66], 'false,false,true,true': [0.489, 80, 52], 'false,false,true,false,false,false,false': [0.497, 278, 351], 'false,true': [0.469, 807, 393], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,false,false,false,true': [0.499, 66, 59]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(A, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), accounttype(B, R)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(B, U), tweets(A, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'false,false,false,false,false,false,true': [0.477, 6, 11], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.484, 94, 56], 'false,false,false,false,false,false,false,true': [0.476, 24, 45], 'false,false,false,false,false,false,false,false': [0.495, 777, 582], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.453, 126, 51]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(B, H), tweets(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'accounttype(B, N), accounttype(A, N)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(M, L), tweets(M, G)', 'false,false,true,false,false,false,false': 'accounttype(B, Q)', 'false,false,true,false,false,false': 'tweets(B, P)'}, {'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.495, 220, 292], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.422, 38, 115], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,true': [0.489, 80, 52], 'false,false,true,false,false,false,false,false': [0.49, 19, 28], 'false,false,true,false,false,false,true': [0.431, 40, 13], 'false,false,true,false,false,false,false,true': [0.497, 136, 113]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false,false': 'tweets(B, G), tweets(A, G)', 'false,false,false': 'accounttype(B, H), accounttype(I, H), tweets(I, J)', 'false,false,false,true,false,false,false': 'tweets(B, Q), tweets(B, R), tweets(A, S)', 'false,false,false,true,false,false': 'tweets(B, J), tweets(A, P)', 'false': 'accounttype(A, D), accounttype(E, D), tweets(E, F)', 'false,false,false,true,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(A, K)'}, {'false,true': [0.483, 2209, 1524], 'false,false,true': [0.483, 57, 95], 'false,false,false,true,false,false,true': [0.467, 13, 6], 'true': [0.478, 2075, 2760], 'false,false,false,true,false,true': [0.486, 58, 35], 'false,false,false,false': [0.463, 20, 9], 'false,false,false,true,false,false,false,false': [0.49, 26, 39], 'false,false,false,true,true': [0.461, 13, 6], 'false,false,false,true,false,false,false,true': [5.27e-09, 3, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), tweets(B, U)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), tweets(A, R)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(B, W), tweets(A, W)'}, {'false,true': [0.484, 2278, 1832], 'false,false,true': [0.462, 112, 66], 'false,false,false,false,false,false,true': [0.461, 95, 41], 'true': [0.409, 193, 639], 'false,false,false,false,false,true': [0.345, 44, 7], 'false,false,false,false,false,false,false,true': [0.494, 33, 49], 'false,false,false,false,false,false,false,false': [0.494, 942, 709], 'false,false,false,true': [0.47, 518, 1019], 'false,false,false,false,true': [0.456, 259, 112]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C), accounttype(B, D)', 'false,true,true': 'tweets(B, H), tweets(I, E), tweets(I, J)', 'false,true': 'tweets(A, F), accounttype(B, G)', 'false,true,true,true,false': 'tweets(B, L), tweets(I, H)', 'false,true,true,true,false,false': 'tweets(B, M), tweets(A, M)', 'false,true,true,true,false,false,false': 'tweets(I, F), tweets(N, J), accounttype(N, G)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,true,true,true': 'tweets(I, H), tweets(I, F), tweets(I, K)'}, {'false,true,true,true,false,true': [0.447, 8, 21], 'false,true,true,true,true': [0.463, 109, 241], 'false,false': [0.482, 2013, 2010], 'false,true,true,false': [0.482, 294, 433], 'true': [0.408, 190, 632], 'false,true,true,true,false,false,false,true': [0.49, 84, 55], 'false,true,true,true,false,false,false,false': [0.35, 1, 6], 'false,true,true,true,false,false,true': [0.0, 0, 10], 'false,true,false': [0.479, 1775, 1066]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H)', 'false,false,false': 'tweets(B, I), tweets(A, I)', 'false,false,false,false,true': 'tweets(B, K)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, J)', 'false,false,false,false,true,false,false': 'accounttype(B, M), accounttype(A, M)', 'false,false,false,false,true,false': 'tweets(B, L)'}, {'false,false,false,false,true,false,false,false': [0.49, 6, 9], 'false,false,false,false,true,false,true': [0.924, 1, 5], 'false,false,true': [0.463, 209, 196], 'false,false,false,false,true,false,false,true': [0.816, 2, 1], 'true': [0.409, 193, 639], 'false,false,false,false,true,true': [1.138, 4, 2], 'false,false,false,false,false': [0.485, 1266, 819], 'false,true': [0.481, 2278, 1832], 'false,false,false,true': [0.472, 515, 971]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K), tweets(B, L)', 'false,false,false,false,false': 'tweets(B, U), tweets(A, U)', 'false': 'tweets(B, D), tweets(A, E), tweets(A, F)', 'false,false,false,false': 'tweets(B, M), tweets(A, N), accounttype(B, P)', 'false,false,false,false,true': 'tweets(B, Q), tweets(B, R)', 'false,false,false,false,true,false': 'tweets(A, S), tweets(B, T)'}, {'false,false,false,false,true,false,true': [0.445, 5, 14], 'false,false,true': [0.466, 364, 295], 'false,false,false,false,false,false': [0.48, 3594, 3455], 'true': [0.21, 4, 107], 'false,false,false,false,false,true': [0.243, 17, 302], 'false,false,false,false,true,true': [0.353, 11, 2], 'false,false,false,false,true,false,false': [0.473, 28, 14], 'false,true': [0.467, 302, 197], 'false,false,false,true': [0.471, 149, 88]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, I), tweets(A, I), accounttype(B, J)', 'false,false,false': 'accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false,false,true': 'tweets(B, T), accounttype(U, R), tweets(U, T)', 'false,false,false,false,false,false': 'accounttype(A, R), tweets(A, S), tweets(B, S)', 'false,false,false,false,false': 'accounttype(A, P), accounttype(B, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(A, H)', 'false,false,false,false': 'accounttype(A, L), accounttype(B, M), tweets(B, N)'}, {'false,false,false,false,false,false,false': [0.483, 603, 428], 'false,false,true': [0.381, 120, 490], 'true': [0.457, 303, 248], 'false,false,false,false,false,true': [0.484, 1062, 704], 'false,false,false,false,false,false,true,false': [0.487, 53, 78], 'false,false,false,false,true': [0.47, 397, 234], 'false,true': [0.457, 182, 204], 'false,false,false,false,false,false,true,true': [0.505, 18, 20], 'false,false,false,true': [0.475, 1736, 2068]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), tweets(A, E)', 'false,false': 'tweets(B, G), accounttype(B, H), tweets(A, I)', 'false,false,false': 'accounttype(A, J), tweets(B, K)', 'false,false,false,false,false,false,true': 'tweets(B, U), tweets(B, W), tweets(A, X)', 'false,false,false,false,false,false': 'tweets(B, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'tweets(B, P), tweets(A, Q), tweets(B, Q)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(A, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [0.485, 156, 152], 'false,false,true': [0.469, 479, 332], 'true': [0.46, 474, 422], 'false,false,false,false,false,true': [0.051, 0, 4], 'false,false,false,false,false,false,true,false': [0.499, 12, 7], 'false,false,false,false,true': [0.01, 0, 4], 'false,true': [0.464, 1842, 2471], 'false,false,false,false,false,false,true,true': [0.274, 3, 0], 'false,false,false,true': [0.483, 1508, 1082]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false,false;tweets(A, G), tweets(A, H), tweets(B, H).;true;false', '0;false,false,true,false,false,true;tweets(A, Q), tweets(N, R), tweets(N, H).;false;false', '0;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '0;false,false,true,false,false;tweets(A, M), tweets(N, G), tweets(N, P).;true;true', '0;false;tweets(B, E), tweets(A, F).;false;true', '0;false,false,true,false;tweets(B, L), tweets(A, L).;false;true', '0;false,false,true,false,false,false;tweets(B, S).;false;false', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '1;false,false,false,false,false,false;tweets(A, S), tweets(B, T).;false;true', '1;false,false,false,false,false;tweets(B, P), accounttype(A, Q), accounttype(B, R).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '1;false,false,false,false,false,false,false;tweets(B, U), tweets(A, U).;false;false', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false,false;tweets(A, G), tweets(B, H), tweets(A, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;accounttype(B, N), accounttype(A, N).;false;true', '2;false;tweets(B, E), tweets(A, F).;false;true', '2;false,false,true,false;tweets(B, L), tweets(M, L), tweets(M, G).;false;true', '2;false,false,true,false,false,false,false;accounttype(B, Q).;false;false', '2;false,false,true,false,false,false;tweets(B, P).;false;true', '3;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;true', '3;false,false;tweets(B, G), tweets(A, G).;false;true', '3;false,false,false;accounttype(B, H), accounttype(I, H), tweets(I, J).;true;false', '3;false,false,false,true,false,false,false;tweets(B, Q), tweets(B, R), tweets(A, S).;false;false', '3;false,false,false,true,false,false;tweets(B, J), tweets(A, P).;false;true', '3;false;accounttype(A, D), accounttype(E, D), tweets(E, F).;false;true', '3;false,false,false,true,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '3;false,false,false,true;tweets(A, K).;false;true', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '4;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '4;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '4;false,false,false,false,false,false;tweets(B, S), accounttype(A, T), tweets(B, U).;false;true', '4;false,false,false,false,false;tweets(B, P), accounttype(A, Q), tweets(A, R).;false;true', '4;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '4;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '4;false,false,false,false,false,false,false;tweets(B, W), tweets(A, W).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false,true,true;tweets(B, H), tweets(I, E), tweets(I, J).;true;false', '5;false,true;tweets(A, F), accounttype(B, G).;true;false', '5;false,true,true,true,false;tweets(B, L), tweets(I, H).;false;true', '5;false,true,true,true,false,false;tweets(B, M), tweets(A, M).;false;true', '5;false,true,true,true,false,false,false;tweets(I, F), tweets(N, J), accounttype(N, G).;false;false', '5;false;tweets(A, E), tweets(B, F), accounttype(A, G).;true;false', '5;false,true,true,true;tweets(I, H), tweets(I, F), tweets(I, K).;false;true', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '6;false,false;tweets(B, G), tweets(B, H).;false;true', '6;false,false,false;tweets(B, I), tweets(A, I).;false;true', '6;false,false,false,false,true;tweets(B, K).;false;true', '6;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '6;false,false,false,false;tweets(A, J).;true;false', '6;false,false,false,false,true,false,false;accounttype(B, M), accounttype(A, M).;false;false', '6;false,false,false,false,true,false;tweets(B, L).;false;true', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '7;false,false,false;tweets(B, J), accounttype(B, K), tweets(B, L).;false;true', '7;false,false,false,false,false;tweets(B, U), tweets(A, U).;false;false', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false,false,false;tweets(B, M), tweets(A, N), accounttype(B, P).;true;true', '7;false,false,false,false,true;tweets(B, Q), tweets(B, R).;false;true', '7;false,false,false,false,true,false;tweets(A, S), tweets(B, T).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '8;false,false;tweets(B, I), tweets(A, I), accounttype(B, J).;false;true', '8;false,false,false;accounttype(B, K), accounttype(A, K).;false;true', '8;false,false,false,false,false,false,true;tweets(B, T), accounttype(U, R), tweets(U, T).;false;false', '8;false,false,false,false,false,false;accounttype(A, R), tweets(A, S), tweets(B, S).;true;false', '8;false,false,false,false,false;accounttype(A, P), accounttype(B, Q).;false;true', '8;false;tweets(B, F), tweets(B, G), tweets(A, H).;false;true', '8;false,false,false,false;accounttype(A, L), accounttype(B, M), tweets(B, N).;false;true', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;false;true', '9;false,false;tweets(B, G), accounttype(B, H), tweets(A, I).;false;true', '9;false,false,false;accounttype(A, J), tweets(B, K).;false;true', '9;false,false,false,false,false,false,true;tweets(B, U), tweets(B, W), tweets(A, X).;false;false', '9;false,false,false,false,false,false;tweets(B, R), tweets(S, R), tweets(S, T).;true;false', '9;false,false,false,false,false;tweets(B, P), tweets(A, Q), tweets(B, Q).;false;true', '9;false;accounttype(B, F), accounttype(A, F).;false;true', '9;false,false,false,false;tweets(A, L), tweets(A, M), accounttype(A, N).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(A, H), tweets(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25084299902645113;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.08499602486893311;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, P), accounttype(A, Q), accounttype(B, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, S), tweets(B, T) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, U), tweets(A, U) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.029920148364485595;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19143272830459085;  // std dev = 10,120, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.07906375368192743;  // std dev = 13,552, 805,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=298 */
%   else if ( accounttype(A, D), accounttype(E, D), tweets(E, F) )
%   | then return 0.33574840272581163;  // std dev = 12,812, 755,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=482 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.20423757222913047;  // std dev = 13,601, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.06111801890264749;  // std dev = 10,580, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.2639502618743979;  // std dev = 6,985, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, P), accounttype(A, Q), tweets(A, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, S), accounttype(A, T), tweets(B, U) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, W), tweets(A, W) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.028771895247315167;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.15451680280163455;  // std dev = 13,594, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then if ( tweets(A, F), accounttype(B, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.0802038094880723;  // std dev = 8,573, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.09292477967127373;  // std dev = 9,876, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.11619489343933485;  // std dev = 13,591, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.03140795456545182;  // std dev = 10,578, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H) )
%   | | then return 0.18536970187272114;  // std dev = 6,974, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( tweets(B, I), tweets(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.04043600247708448;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.0872755098874588;  // std dev = 13,591, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return 0.056412480282689234;  // std dev = 8,571, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return -0.02638193473312282;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( tweets(B, J), accounttype(B, K), tweets(B, L) )
%   | | | then return 0.14134645643373683;  // std dev = 6,971, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | | else if ( tweets(B, M), tweets(A, N), accounttype(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, Q), tweets(A, Q) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.03303882368493446;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.059521163997878684;  // std dev = 16,072, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, I), tweets(A, I), accounttype(B, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(B, K), accounttype(A, K) )
%   | | | then return -0.008491091437546448;  // std dev = 7,376, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | | | else if ( accounttype(A, L), accounttype(B, M), tweets(B, N) )
%   | | | | then return 0.21819097861991527;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | | | else if ( accounttype(A, P), accounttype(B, Q) )
%   | | | | | then return -0.02208407272149201;  // std dev = 4,044, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then return 0.0452211350904577;  // std dev = 16,072, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return -0.006695359199482651;  // std dev = 7,376, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | else if ( tweets(B, G), accounttype(B, H), tweets(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(A, J), tweets(B, K) )
%   | | | then return 0.1637245480657724;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | | else if ( tweets(A, L), tweets(A, M), accounttype(A, N) )
%   | | | | then return -0.014251919274153682;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | | else if ( tweets(B, P), tweets(A, Q), tweets(B, Q) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, R), tweets(S, R), tweets(S, T) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.04213142281030698;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
Results
   AUC ROC   = 0.648936
   AUC PR    = 0.630695
   CLL	      = -0.667145
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 164.412 seconds
Total inference time: 0.66 seconds
AUC ROC: 0.648936


Results in test set
   AUC ROC   = 0.648936
   AUC PR    = 0.630695
   CLL	      = -0.667145
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total inference time: 0.66 seconds
AUC ROC: 0.648936
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.22, 266, 172], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(A, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), accounttype(B, R)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(B, U), tweets(A, U)'}, {'false,true': [11.336, 287, 233], 'false,false,true': [6.142, 145, 51], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.522, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false': 'tweets(A, G), tweets(B, H), tweets(A, H)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.12, 266, 172], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false': 'accounttype(A, D), accounttype(E, D), tweets(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [12.812, 273, 482], 'true': [13.552, 507, 298]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), tweets(B, U)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), tweets(A, R)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(B, W), tweets(A, W)'}, {'false,true': [10.58, 342, 171], 'false,false,true': [6.985, 90, 113], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.601, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.522, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C), accounttype(B, D)', 'false': 'tweets(A, E), tweets(B, F), accounttype(A, G)', 'false,true': 'tweets(A, F), accounttype(B, G)'}, {'false,true,true': [0.0, 0, 0], 'false,false': [9.876, 266, 172], 'false,true,false': [8.573, 197, 120], 'true': [13.594, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false': 'tweets(B, G), tweets(B, H)', 'false,false,false': 'tweets(B, I), tweets(A, I)', 'false,false,false,false': 'tweets(A, J)'}, {'false,true': [10.578, 342, 171], 'false,false,true': [6.974, 90, 113], 'true': [13.591, 317, 488], 'false,false,false,false,false': [2.522, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K), tweets(B, L)', 'false,false,false,false,false': 'tweets(B, Q), tweets(A, Q)', 'false': 'tweets(B, D), tweets(A, E), tweets(A, F)', 'false,false,false,false': 'tweets(B, M), tweets(A, N), accounttype(B, P)'}, {'false,true': [8.571, 197, 120], 'false,false,true': [6.131, 145, 51], 'false,false,false,false,false,false': [2.522, 31, 8], 'true': [13.591, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.971, 90, 113], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, I), tweets(A, I), accounttype(B, J)', 'false,false,false': 'accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false': 'accounttype(A, P), accounttype(B, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(A, H)', 'false,false,false,false': 'accounttype(A, L), accounttype(B, M), tweets(B, N)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [16.072, 514, 608], 'false,false,false,false,false,true': [4.044, 57, 23], 'false,false,false,true': [7.376, 181, 83], 'false,false,false,false,true': [4.434, 28, 66]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), tweets(A, E)', 'false,false': 'tweets(B, G), accounttype(B, H), tweets(A, I)', 'false,false,false': 'accounttype(A, J), tweets(B, K)', 'false,false,false,false,false,false': 'tweets(B, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'tweets(B, P), tweets(A, Q), tweets(B, Q)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(A, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [1.247, 7, 2], 'false,true': [7.376, 181, 83], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [16.072, 514, 608], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [4.434, 28, 66], 'false,false,false,false,true': [3.846, 50, 21]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false;tweets(B, E), tweets(A, F).;false;false', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '1;false,false,false,false,false;tweets(B, P), accounttype(A, Q), accounttype(B, R).;false;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false;tweets(B, E), tweets(A, F).;false;false', '3;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '4;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '4;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '4;false,false,false,false,false;tweets(B, P), accounttype(A, Q), tweets(A, R).;false;false', '4;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '4;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false;tweets(A, E), tweets(B, F), accounttype(A, G).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '6;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '6;false,false;tweets(B, G), tweets(B, H).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '7;false,false,false;tweets(B, J), accounttype(B, K), tweets(B, L).;false;true', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false,false,false;tweets(B, M), tweets(A, N), accounttype(B, P).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;false', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;false;true', '9;false;accounttype(B, F), accounttype(A, F).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true', 0.6214511041009464)]
Tree #2: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #3: [('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true', 0.6214511041009464)]
Tree #4: [('false,false', 0), ('true', 0.6298136645962733), ('false,true', 0.6384105960264901)]
Tree #5: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,true', 0.5566502463054187), ('true', 0.6062111801242236), ('false,true', 0.6666666666666666), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #6: [('false,true,true', 0), ('true', 0.6062111801242236), ('false,false', 0.6073059360730594), ('false,true,false', 0.6214511041009464)]
Tree #7: [('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,true', 0.5566502463054187), ('true', 0.6062111801242236), ('false,true', 0.6666666666666666), ('false,false,false,false,false', 0.7948717948717948)]
Tree #8: [('false,false,false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,false,true', 0.5566502463054187), ('true', 0.6062111801242236), ('false,true', 0.6214511041009464), ('false,false,true', 0.7397959183673469), ('false,false,false,false,false,false', 0.7948717948717948)]
Tree #9: [('false,true', 0), ('false,false,true', 0), ('false,false,false,false,false,false', 0), ('true', 0.5418894830659536), ('false,false,false,true', 0.6856060606060606), ('false,false,false,false,true', 0.7021276595744681), ('false,false,false,false,false,true', 0.7125)]
Tree #10: [('false,false,true', 0), ('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.6856060606060606), ('false,false,false,true', 0.7021276595744681), ('false,false,false,false,true', 0.704225352112676), ('false,false,false,false,false,false,false', 0.7777777777777778)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.2508429990264519;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.084996024868933;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, P), accounttype(A, Q), accounttype(B, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.029920148364485543;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.19143272830459093;  // std dev = 10,120, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.07906375368192743;  // std dev = 13,552, 805,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=298 */
%   else return 0.33574840272581163;  // std dev = 12,812, 755,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=482 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.20423757222913047;  // std dev = 13,601, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.06111801890264749;  // std dev = 10,580, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.2639502618743977;  // std dev = 6,985, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, P), accounttype(A, Q), tweets(A, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.02877189524731546;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.15451680280163455;  // std dev = 13,594, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F), accounttype(A, G) )
%   | then return 0.0802038094880723;  // std dev = 8,573, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.09292477967127373;  // std dev = 9,876, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.11619489343933485;  // std dev = 13,591, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.03140795456545182;  // std dev = 10,578, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H) )
%   | | then return 0.18536970187272114;  // std dev = 6,974, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else return -0.04043600247708454;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.0872755098874588;  // std dev = 13,591, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return 0.056412480282689234;  // std dev = 8,571, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return -0.02638193473312291;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( tweets(B, J), accounttype(B, K), tweets(B, L) )
%   | | | then return 0.1413464564337367;  // std dev = 6,971, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | | else if ( tweets(B, M), tweets(A, N), accounttype(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.03303882368493447;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.059521163997878684;  // std dev = 16,072, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else return 0.03767483569187364;  // std dev = 9,712, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then return 0.0452211350904577;  // std dev = 16,072, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return -0.016519493353088315;  // std dev = 7,375, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | else return 0.09890926448931374;  // std dev = 6,203, 174,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=89 */
Results
   AUC ROC   = 0.627486
   AUC PR    = 0.611669
   CLL	      = -0.669622
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 175.328 seconds
Total inference time: 0.585 seconds
AUC ROC: 0.627486


Best model AUC ROC so far: 0.648936


******************************************
Best model found
******************************************
Total revision time: 340.985
Best validation AUC ROC: 0.648936


Results
   AUC ROC   = 0.749541
   AUC PR    = 0.723426
   CLL	      = -0.621056
   Precision = 0.638487 at threshold = 0.5
   Recall    = 0.810734
   F1        = 0.714375


Total inference time: 0.953 seconds
AUC ROC: 0.749541
Dataset: yeast->twitter, Fold: 1, Type: transfer, Time: 01:36:29
{'Parameter Learning results': {'F1': 0.714375, 'Learning time': 164.412, 'Recall': 0.810734, 'AUC PR': 0.723426, 'AUC ROC': 0.749541, 'CLL': -0.621056, 'Inference time': 1.144, 'Precision': [0.638487, 0.5]}, 'F1': 0.714375, 'Learning time': 340.985, 'Recall': 0.810734, 'AUC PR': 0.723426, 'AUC ROC': 0.749541, 'Mapping results': {'Finding best mapping': 0.8221473693847656, 'Knowledge compiling time': 0.163041353225708, 'Total time': 6.181636333465576, 'Generating mappings time': 0.11664962768554688, 'Possible mappings': 1458, 'Generating paths time': 5.079789400100708}, 'CLL': -0.621056, 'Inference time': 0.953, 'Precision': [0.638487, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2953217099686181;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.6170141833264585;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.12481560176617795;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.28934159564997186;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.3138451376311591;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.5602765946739812;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.09040699961564004;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.1456489350995117;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.25544396504018674;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.5243494850117562;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.10893247925776796;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.25035142239059655;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.27119663943451633;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.4776435248675061;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.07904155157974005;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.12697824250829925;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21434006589346677;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.4178192410070285;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.09391529972732618;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21027160903852193;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22687127601954168;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.3839327874961612;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.09115193712242843;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.03799870373894804;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1750364240763374;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.3187802468060836;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.08007894754641993;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17197435224648763;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.18440609551807563;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2955537862431351;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.057105970757237993;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.09628175221440763;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.13980372601974603;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.23938432568879928;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.06761908965919006;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.13761291641748175;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.14645750237908162;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2227642562770938;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.0669944884018586;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.02291857739175187;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.10979170699664419;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.1801875707461082;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.05661907716341858;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.10828649707955408;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.11433257931207602;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.16714218601195022;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.03972978884506359;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.0705646110501786;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.0851734320706171;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.13698536343358944;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.04707019797674135;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.08417209890999892;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.08818083037033851;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.1258983666871707;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.04785769983713238;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.012215218966472511;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.06550974051695709;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.10535150322458203;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.03889723332668014;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.06486167644453979;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.06745468144626868;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.09548737537629778;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.02681539844407904;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.05046507171832119;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05008712778509982;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.08189740035811596;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.03198323809501064;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.11243535096764834;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05131798679728922;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.04967885473545552;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.07294806483386942;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.033523512445940075;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.0051254355304122265;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.03813886296629491;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.06425345980304739;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then if ( tweets(A, G) )
%   | | | then if ( accounttype(H, F), tweets(H, E), tweets(H, G) )
%   | | | | then return 0.026190156472953672;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | | else return 0.09352720014861136;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0378896114214694;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03889950372719807;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else return 0.05609464931900332;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, J) )
%   | | then return 0.02760290361140207;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.004305059141106619;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.748983
   AUC PR    = 0.72186
   CLL	      = -0.59057
   Precision = 0.789474 at threshold = 0.5
   Recall    = 0.529661
   F1        = 0.633981


Total learning time: 696.375 seconds
Total inference time: 1.488 seconds
AUC ROC: 0.748983


Dataset: yeast->twitter, Fold: 1, Type: scratch, Time: 01:48:08
{'F1': 0.633981, 'Learning time': 696.375, 'Recall': 0.529661, 'AUC PR': 0.72186, 'AUC ROC': 0.748983, 'CLL': -0.59057, 'Inference time': 1.488, 'Precision': [0.789474, 0.5]}


Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true,false,false,true': 'tweets(A, Q), tweets(N, R), accounttype(N, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'tweets(A, M), tweets(N, G), tweets(N, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(A, L)', 'false,false,true,false,false,false': 'tweets(B, S)'}, {'false,false,true,false,false,true,true': [0.495, 54, 41], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.204, 2, 44], 'false,false,true,false,false,true,false': [0.497, 53, 66], 'false,false,true,true': [0.489, 80, 52], 'false,false,true,false,false,false,false': [0.497, 278, 351], 'false,true': [0.469, 807, 393], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,false,false,false,true': [0.499, 66, 59]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false,false': 'tweets(A, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), accounttype(B, R)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'accounttype(B, U), accounttype(A, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.491, 1617, 1187], 'false,false,false,false,false,false,true': [0.477, 6, 11], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.484, 94, 56], 'false,false,false,false,false,false,false,true': [0.476, 24, 45], 'false,false,false,false,false,false,false,false': [0.495, 777, 582], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.453, 126, 51]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'accounttype(B, N), accounttype(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(M, L), tweets(M, G)', 'false,false,true,false,false,false,false': 'accounttype(B, Q)', 'false,false,true,false,false,false': 'tweets(B, P)'}, {'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.495, 220, 292], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.422, 38, 115], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,true': [0.489, 80, 52], 'false,false,true,false,false,false,false,false': [0.49, 19, 28], 'false,false,true,false,false,false,true': [0.431, 40, 13], 'false,false,true,false,false,false,false,true': [0.497, 136, 113]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false,false': 'accounttype(B, G), accounttype(A, G)', 'false,false,false': 'accounttype(B, H), accounttype(I, H), tweets(I, J)', 'false,false,false,true,false,false,false': 'tweets(B, Q), tweets(B, R), accounttype(A, S)', 'false,false,false,true,false,false': 'tweets(B, J), accounttype(A, P)', 'false': 'accounttype(A, D), accounttype(E, D), tweets(E, F)', 'false,false,false,true,false': 'accounttype(A, L), accounttype(M, L), tweets(M, N)', 'false,false,false,true': 'tweets(A, K)'}, {'false,true': [0.483, 2209, 1524], 'false,false,true': [0.483, 57, 95], 'false,false,false,true,false,false,true': [0.467, 13, 6], 'true': [0.478, 2075, 2760], 'false,false,false,true,false,true': [0.486, 58, 35], 'false,false,false,false': [0.463, 20, 9], 'false,false,false,true,false,false,false,false': [0.49, 26, 39], 'false,false,false,true,true': [0.461, 13, 6], 'false,false,false,true,false,false,false,true': [5.27e-09, 3, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false,false': 'tweets(B, S), accounttype(A, T), tweets(B, U)', 'false,false,false,false,false': 'tweets(B, P), accounttype(A, Q), tweets(A, R)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'accounttype(B, W), accounttype(A, W)'}, {'false,true': [0.484, 2278, 1832], 'false,false,true': [0.462, 112, 66], 'false,false,false,false,false,false,true': [0.461, 95, 41], 'true': [0.409, 193, 639], 'false,false,false,false,false,true': [0.345, 44, 7], 'false,false,false,false,false,false,false,true': [0.494, 33, 49], 'false,false,false,false,false,false,false,false': [0.494, 942, 709], 'false,false,false,true': [0.47, 518, 1019], 'false,false,false,false,true': [0.456, 259, 112]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C), accounttype(B, D)', 'false,true,true': 'tweets(B, H), tweets(I, E), tweets(I, J)', 'false,true': 'accounttype(A, F), accounttype(B, G)', 'false,true,true,true,false': 'tweets(B, L), tweets(I, H)', 'false,true,true,true,false,false': 'tweets(B, M), tweets(A, M)', 'false,true,true,true,false,false,false': 'accounttype(I, F), tweets(N, J), accounttype(N, G)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, G)', 'false,true,true,true': 'tweets(I, H), accounttype(I, F), tweets(I, K)'}, {'false,true,true,true,false,true': [0.447, 8, 21], 'false,true,true,true,true': [0.463, 109, 241], 'false,false': [0.482, 2013, 2010], 'false,true,true,false': [0.482, 294, 433], 'true': [0.408, 190, 632], 'false,true,true,true,false,false,false,true': [0.49, 84, 55], 'false,true,true,true,false,false,false,false': [0.35, 1, 6], 'false,true,true,true,false,false,true': [0.0, 0, 10], 'false,true,false': [0.479, 1775, 1066]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H)', 'false,false,false': 'accounttype(B, I), accounttype(A, I)', 'false,false,false,false,true': 'tweets(B, K)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, J)', 'false,false,false,false,true,false,false': 'accounttype(B, M), accounttype(A, M)', 'false,false,false,false,true,false': 'tweets(B, L)'}, {'false,false,false,false,true,false,false,false': [0.49, 6, 9], 'false,false,false,false,true,false,true': [0.924, 1, 5], 'false,false,true': [0.463, 209, 196], 'false,false,false,false,true,false,false,true': [0.816, 2, 1], 'true': [0.409, 193, 639], 'false,false,false,false,true,true': [1.138, 4, 2], 'false,false,false,false,false': [0.485, 1266, 819], 'false,true': [0.481, 2278, 1832], 'false,false,false,true': [0.472, 515, 971]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K), tweets(B, L)', 'false,false,false,false,false': 'tweets(B, U), tweets(A, U)', 'false': 'tweets(B, D), tweets(A, E), tweets(A, F)', 'false,false,false,false': 'tweets(B, M), tweets(A, N), accounttype(B, P)', 'false,false,false,false,true': 'tweets(B, Q), tweets(B, R)', 'false,false,false,false,true,false': 'tweets(A, S), tweets(B, T)'}, {'false,false,false,false,true,false,true': [0.445, 5, 14], 'false,false,true': [0.466, 364, 295], 'false,false,false,false,false,false': [0.48, 3594, 3455], 'true': [0.21, 4, 107], 'false,false,false,false,false,true': [0.243, 17, 302], 'false,false,false,false,true,true': [0.353, 11, 2], 'false,false,false,false,true,false,false': [0.473, 28, 14], 'false,true': [0.467, 302, 197], 'false,false,false,true': [0.471, 149, 88]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, I), tweets(A, I), accounttype(B, J)', 'false,false,false': 'accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false,false,true': 'tweets(B, T), accounttype(U, R), tweets(U, T)', 'false,false,false,false,false,false': 'accounttype(A, R), accounttype(A, S), accounttype(B, S)', 'false,false,false,false,false': 'accounttype(A, P), accounttype(B, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(A, H)', 'false,false,false,false': 'accounttype(A, L), accounttype(B, M), tweets(B, N)'}, {'false,false,false,false,false,false,false': [0.483, 603, 428], 'false,false,true': [0.381, 120, 490], 'true': [0.457, 303, 248], 'false,false,false,false,false,true': [0.484, 1062, 704], 'false,false,false,false,false,false,true,false': [0.487, 53, 78], 'false,false,false,false,true': [0.47, 397, 234], 'false,true': [0.457, 182, 204], 'false,false,false,false,false,false,true,true': [0.505, 18, 20], 'false,false,false,true': [0.475, 1736, 2068]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), tweets(A, E)', 'false,false': 'tweets(B, G), accounttype(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(A, J), accounttype(B, K)', 'false,false,false,false,false,false,true': 'tweets(B, U), tweets(B, W), accounttype(A, X)', 'false,false,false,false,false,false': 'tweets(B, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'accounttype(B, P), tweets(A, Q), tweets(B, Q)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), tweets(A, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [0.485, 156, 152], 'false,false,true': [0.469, 479, 332], 'true': [0.46, 474, 422], 'false,false,false,false,false,true': [0.051, 0, 4], 'false,false,false,false,false,false,true,false': [0.499, 12, 7], 'false,false,false,false,true': [0.01, 0, 4], 'false,true': [0.464, 1842, 2471], 'false,false,false,false,false,false,true,true': [0.274, 3, 0], 'false,false,false,true': [0.483, 1508, 1082]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;true;false', '0;false,false,true,false,false,true;tweets(A, Q), tweets(N, R), accounttype(N, H).;false;false', '0;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '0;false,false,true,false,false;tweets(A, M), tweets(N, G), tweets(N, P).;true;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false,true,false;tweets(B, L), tweets(A, L).;false;true', '0;false,false,true,false,false,false;tweets(B, S).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(B, K), accounttype(A, K).;false;true', '1;false,false,false,false,false,false;tweets(A, S), tweets(B, T).;false;true', '1;false,false,false,false,false;tweets(B, P), accounttype(A, Q), accounttype(B, R).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '1;false,false,false,false,false,false,false;accounttype(B, U), accounttype(A, U).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false,false;tweets(A, G), accounttype(B, H), accounttype(A, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;accounttype(B, N), accounttype(A, N).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false,true,false;tweets(B, L), tweets(M, L), tweets(M, G).;false;true', '2;false,false,true,false,false,false,false;accounttype(B, Q).;false;false', '2;false,false,true,false,false,false;tweets(B, P).;false;true', '3;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;true', '3;false,false;accounttype(B, G), accounttype(A, G).;false;true', '3;false,false,false;accounttype(B, H), accounttype(I, H), tweets(I, J).;true;false', '3;false,false,false,true,false,false,false;tweets(B, Q), tweets(B, R), accounttype(A, S).;false;false', '3;false,false,false,true,false,false;tweets(B, J), accounttype(A, P).;false;true', '3;false;accounttype(A, D), accounttype(E, D), tweets(E, F).;false;true', '3;false,false,false,true,false;accounttype(A, L), accounttype(M, L), tweets(M, N).;false;true', '3;false,false,false,true;tweets(A, K).;false;true', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '4;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '4;false,false,false;accounttype(B, J), accounttype(B, K), accounttype(A, K).;false;true', '4;false,false,false,false,false,false;tweets(B, S), accounttype(A, T), tweets(B, U).;false;true', '4;false,false,false,false,false;tweets(B, P), accounttype(A, Q), tweets(A, R).;false;true', '4;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '4;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '4;false,false,false,false,false,false,false;accounttype(B, W), accounttype(A, W).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false,true,true;tweets(B, H), tweets(I, E), tweets(I, J).;true;false', '5;false,true;accounttype(A, F), accounttype(B, G).;true;false', '5;false,true,true,true,false;tweets(B, L), tweets(I, H).;false;true', '5;false,true,true,true,false,false;tweets(B, M), tweets(A, M).;false;true', '5;false,true,true,true,false,false,false;accounttype(I, F), tweets(N, J), accounttype(N, G).;false;false', '5;false;tweets(A, E), accounttype(B, F), accounttype(A, G).;true;false', '5;false,true,true,true;tweets(I, H), accounttype(I, F), tweets(I, K).;false;true', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '6;false,false;tweets(B, G), tweets(B, H).;false;true', '6;false,false,false;accounttype(B, I), accounttype(A, I).;false;true', '6;false,false,false,false,true;tweets(B, K).;false;true', '6;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '6;false,false,false,false;tweets(A, J).;true;false', '6;false,false,false,false,true,false,false;accounttype(B, M), accounttype(A, M).;false;false', '6;false,false,false,false,true,false;tweets(B, L).;false;true', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '7;false,false,false;tweets(B, J), accounttype(B, K), tweets(B, L).;false;true', '7;false,false,false,false,false;tweets(B, U), tweets(A, U).;false;false', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false,false,false;tweets(B, M), tweets(A, N), accounttype(B, P).;true;true', '7;false,false,false,false,true;tweets(B, Q), tweets(B, R).;false;true', '7;false,false,false,false,true,false;tweets(A, S), tweets(B, T).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '8;false,false;tweets(B, I), tweets(A, I), accounttype(B, J).;false;true', '8;false,false,false;accounttype(B, K), accounttype(A, K).;false;true', '8;false,false,false,false,false,false,true;tweets(B, T), accounttype(U, R), tweets(U, T).;false;false', '8;false,false,false,false,false,false;accounttype(A, R), accounttype(A, S), accounttype(B, S).;true;false', '8;false,false,false,false,false;accounttype(A, P), accounttype(B, Q).;false;true', '8;false;tweets(B, F), tweets(B, G), tweets(A, H).;false;true', '8;false,false,false,false;accounttype(A, L), accounttype(B, M), tweets(B, N).;false;true', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;false;true', '9;false,false;tweets(B, G), accounttype(B, H), accounttype(A, I).;false;true', '9;false,false,false;accounttype(A, J), accounttype(B, K).;false;true', '9;false,false,false,false,false,false,true;tweets(B, U), tweets(B, W), accounttype(A, X).;false;false', '9;false,false,false,false,false,false;tweets(B, R), tweets(S, R), tweets(S, T).;true;false', '9;false,false,false,false,false;accounttype(B, P), tweets(A, Q), tweets(B, Q).;false;true', '9;false;accounttype(B, F), accounttype(A, F).;false;true', '9;false,false,false,false;tweets(A, L), tweets(A, M), accounttype(A, N).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( accounttype(B, J), accounttype(B, K), accounttype(A, K) )
%   | | | then return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, H) )
%   | | then if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.12501551675118835;  // std dev = 13,245, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( accounttype(A, D), accounttype(E, D), tweets(E, F) )
%   | then return 0.28889989365858454;  // std dev = 11,419, 635,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=437 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2572880618452667;  // std dev = 13,200, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.053067692593762573;  // std dev = 8,550, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.18657646329236685;  // std dev = 5,730, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( accounttype(B, J), accounttype(B, K), accounttype(A, K) )
%   | | | then return -0.039486496300760475;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.1994646653633134;  // std dev = 13,185, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, G) )
%   | then if ( accounttype(A, F), accounttype(B, G) )
%   | | then if ( tweets(B, H), tweets(I, E), tweets(I, J) )
%   | | | then if ( tweets(I, H), accounttype(I, F), tweets(I, K) )
%   | | | | then return -0.15582054898832007;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0519342090158068;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return -0.0159732130764599;  // std dev = 6,163, 160,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=62 */
%   | else return 0.12407814603674748;  // std dev = 5,987, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.15320808508062095;  // std dev = 13,179, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.03453542922230099;  // std dev = 8,493, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H) )
%   | | then return 0.11686646643601932;  // std dev = 5,710, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( accounttype(B, I), accounttype(A, I) )
%   | | | then return -0.052438964604099046;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.11732827589767786;  // std dev = 13,179, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return -0.08371874166094888;  // std dev = 6,299, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.05927190076270396;  // std dev = 5,518, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( tweets(B, J), accounttype(B, K), tweets(B, L) )
%   | | | then return 0.08979974231598804;  // std dev = 5,706, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | | else if ( tweets(B, M), tweets(A, N), accounttype(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, Q), tweets(A, Q) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.04432932785301348;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.053394545184661704;  // std dev = 14,772, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(A, H) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, I), tweets(A, I), accounttype(B, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(B, K), accounttype(A, K) )
%   | | | then return 0.008410941375703425;  // std dev = 6,570, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | | | else if ( accounttype(A, L), accounttype(B, M), tweets(B, N) )
%   | | | | then return 0.17741701666641052;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | | else if ( accounttype(A, P), accounttype(B, Q) )
%   | | | | | then return 0.07570450729823529;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then return 0.0413563007663651;  // std dev = 14,768, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 0.006837344549491102;  // std dev = 6,570, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( tweets(B, G), accounttype(B, H), accounttype(A, I) )
%   | | then return 0.1363193714288197;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( accounttype(A, J), accounttype(B, K) )
%   | | | then return 0.06244932114582484;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.756979
   AUC PR    = 0.719984
   CLL	      = -0.58386
   Precision = 0.782178 at threshold = 0.5
   Recall    = 0.560284
   F1        = 0.652893


Total learning time: 58.152 seconds
Total inference time: 0.65 seconds
AUC ROC: 0.756979


Results in test set
   AUC ROC   = 0.756979
   AUC PR    = 0.719984
   CLL	      = -0.58386
   Precision = 0.782178 at threshold = 0.5
   Recall    = 0.560284
   F1        = 0.652893


Total inference time: 0.65 seconds
AUC ROC: 0.756979
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)'}, {'false,false,false': [3.473, 49, 16], 'false,true': [10.946, 167, 424], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [4.609, 88, 28], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [10.946, 167, 424], 'false,false,true': [5.522, 119, 41], 'false,false,false,true': [1.604, 18, 3], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)'}, {'false,false,false': [3.464, 49, 16], 'false,true': [10.946, 167, 424], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [4.609, 88, 28], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false': 'accounttype(A, D), accounttype(E, D), tweets(E, F)'}, {'false,false': [0.0, 0, 0], 'false,true': [11.419, 198, 437], 'true': [13.245, 510, 271]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [8.55, 309, 102], 'false,false,true': [5.73, 71, 86], 'false,false,false,true': [1.604, 18, 3], 'true': [13.2, 310, 517]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, G)', 'false,true': 'accounttype(A, F), accounttype(B, G)', 'false,true,true': 'tweets(B, H), tweets(I, E), tweets(I, J)', 'false,true,true,true': 'tweets(I, H), accounttype(I, F), tweets(I, K)'}, {'false,false': [5.987, 89, 89], 'false,true,true,true,true': [3.307, 123, 12], 'false,true,true,true,false': [0.0, 0, 0], 'true': [13.185, 310, 517], 'false,true,true,false': [4.609, 88, 28], 'false,true,false': [6.163, 98, 62]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false': 'tweets(B, G), tweets(B, H)', 'false,false,false': 'accounttype(B, I), accounttype(A, I)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [8.493, 309, 102], 'false,false,true': [5.71, 71, 86], 'false,false,false,true': [1.604, 18, 3], 'true': [13.179, 310, 517]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K), tweets(B, L)', 'false,false,false,false,false': 'tweets(B, Q), tweets(A, Q)', 'false': 'tweets(B, D), tweets(A, E), tweets(A, F)', 'false,false,false,false': 'tweets(B, M), tweets(A, N), accounttype(B, P)'}, {'false,true': [6.299, 190, 61], 'false,false,true': [5.518, 119, 41], 'false,false,false,false,false,false': [1.604, 18, 3], 'true': [13.179, 310, 517], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.706, 71, 86], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, I), tweets(A, I), accounttype(B, J)', 'false,false,false': 'accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false': 'accounttype(A, P), accounttype(B, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(A, H)', 'false,false,false,false': 'accounttype(A, L), accounttype(B, M), tweets(B, N)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [14.772, 500, 578], 'false,false,false,false,false,true': [3.026, 31, 13], 'false,false,false,true': [6.57, 162, 60], 'false,false,false,false,true': [3.446, 15, 57]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), tweets(A, E)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false': 'tweets(B, G), accounttype(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(A, J), accounttype(B, K)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [6.57, 162, 60], 'false,false,true': [3.446, 15, 57], 'false,false,false,true': [3.026, 31, 13], 'true': [14.768, 500, 578]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false;tweets(A, G), accounttype(B, H), accounttype(A, H).;false;false', '3;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '4;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '4;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false;tweets(A, E), accounttype(B, F), accounttype(A, G).;true;false', '5;false,true;accounttype(A, F), accounttype(B, G).;true;false', '5;false,true,true;tweets(B, H), tweets(I, E), tweets(I, J).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '6;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '6;false,false;tweets(B, G), tweets(B, H).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '7;false,false,false;tweets(B, J), accounttype(B, K), tweets(B, L).;false;true', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false,false,false;tweets(B, M), tweets(A, N), accounttype(B, P).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;false', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;false;true', '9;false;accounttype(B, F), accounttype(A, F).;false;true', '9;false,false;tweets(B, G), accounttype(B, H), accounttype(A, I).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,true', 0.7586206896551724)]
Tree #2: [('false,false,false,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false,true', 0.8571428571428571)]
Tree #3: [('false,false,true,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,true', 0.7586206896551724)]
Tree #4: [('false,false', 0), ('true', 0.6530089628681178), ('false,true', 0.6881889763779527)]
Tree #5: [('false,false,false,false', 0), ('false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481), ('false,false,false,true', 0.8571428571428571)]
Tree #6: [('false,true,true,true,false', 0), ('false,false', 0.5), ('false,true,false', 0.6125), ('true', 0.6251511487303507), ('false,true,true,false', 0.7586206896551724), ('false,true,true,true,true', 0.9111111111111111)]
Tree #7: [('false,false,false,false', 0), ('false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481), ('false,false,false,true', 0.8571428571428571)]
Tree #8: [('false,false,false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,false,true', 0.74375), ('false,true', 0.7569721115537849), ('false,false,false,false,false,false', 0.8571428571428571)]
Tree #9: [('false,true', 0), ('false,false,true', 0), ('false,false,false,false,false,false', 0), ('true', 0.536178107606679), ('false,false,false,false,false,true', 0.7045454545454546), ('false,false,false,true', 0.7297297297297297), ('false,false,false,false,true', 0.7916666666666666)]
Tree #10: [('false,false,false,false', 0), ('true', 0.536178107606679), ('false,false,false,true', 0.7045454545454546), ('false,true', 0.7297297297297297), ('false,false,true', 0.7916666666666666)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, H) )
%   | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.12501551675118835;  // std dev = 13,245, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else return 0.28889989365858454;  // std dev = 11,419, 635,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=437 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2572880618452667;  // std dev = 13,200, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.053067692593762573;  // std dev = 8,550, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.18657646329236685;  // std dev = 5,730, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else return -0.039486496300760475;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.1994646653633134;  // std dev = 13,185, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, G) )
%   | then if ( accounttype(A, F), accounttype(B, G) )
%   | | then if ( tweets(B, H), tweets(I, E), tweets(I, J) )
%   | | | then return -0.15582054898832007;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.0519342090158068;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return -0.0159732130764599;  // std dev = 6,163, 160,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=62 */
%   | else return 0.12407814603674748;  // std dev = 5,987, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.15320808508062095;  // std dev = 13,179, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.03453542922230099;  // std dev = 8,493, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H) )
%   | | then return 0.11686646643601932;  // std dev = 5,710, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else return -0.052438964604099046;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.11732827589767786;  // std dev = 13,179, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return -0.08371874166094888;  // std dev = 6,299, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.05927190076270396;  // std dev = 5,518, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( tweets(B, J), accounttype(B, K), tweets(B, L) )
%   | | | then return 0.08979974231598804;  // std dev = 5,706, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | | else if ( tweets(B, M), tweets(A, N), accounttype(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.04432932785301348;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.053394545184661704;  // std dev = 14,772, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else return 0.05317234469381719;  // std dev = 8,110, 338,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=130 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then return 0.0413563007663651;  // std dev = 14,768, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return -0.0016352710789687274;  // std dev = 6,571, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( tweets(B, G), accounttype(B, H), accounttype(A, I) )
%   | | then return 0.1648969960055275;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else return 0.06645188069956358;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
Results
   AUC ROC   = 0.760248
   AUC PR    = 0.731083
   CLL	      = -0.584481
   Precision = 0.782178 at threshold = 0.5
   Recall    = 0.560284
   F1        = 0.652893


Total learning time: 60.256 seconds
Total inference time: 0.792 seconds
AUC ROC: 0.760248


Best model AUC ROC so far: 0.760248


Refining iteration 2
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false;tweets(A, G), accounttype(B, H), accounttype(A, H).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '4;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false;tweets(A, E), accounttype(B, F), accounttype(A, G).;true;true', '5;false,true;accounttype(A, F), accounttype(B, G).;true;false', '5;false,true,true;tweets(B, H), tweets(I, E), tweets(I, J).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '6;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '7;false,false,false;tweets(B, J), accounttype(B, K), tweets(B, L).;false;false', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;true;true', '9;false;accounttype(B, F), accounttype(A, F).;false;true', '9;false,false;tweets(B, G), accounttype(B, H), accounttype(A, I).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true', 0.7586206896551724)]
Tree #2: [('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false', 0.8571428571428571)]
Tree #3: [('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true', 0.7586206896551724)]
Tree #4: [('true', 0.6530089628681178), ('false', 0.6881889763779527)]
Tree #5: [('false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481), ('false,false,false', 0.8571428571428571)]
Tree #6: [('false,false', 0.5), ('false,true,false', 0.6125), ('true', 0.6251511487303507), ('false,true,true,false', 0.7586206896551724), ('false,true,true,true', 0.9111111111111111)]
Tree #7: [('false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481), ('false,false,false', 0.8571428571428571)]
Tree #8: [('false,false,false,false,true', 0), ('false,false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,false,true', 0.74375), ('false,true', 0.7569721115537849), ('false,false,false,false,false', 0.8571428571428571)]
Tree #9: [('true', 0.536178107606679), ('false', 0.6153846153846154)]
Tree #10: [('true', 0.536178107606679), ('false,false,false', 0.7045454545454546), ('false,true', 0.7297297297297297), ('false,false,true', 0.7916666666666666)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.05296217601159877;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.1993254056877463;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), accounttype(A, J), accounttype(B, J) )
%   | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.046636589713539955;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.17328911846492726;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.04126500401346218;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.14767008630297346;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.19119830646834776;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.37351764852389485;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E) )
%   | then if ( tweets(B, F) )
%   | | then if ( accounttype(A, G), accounttype(B, G) )
%   | | | then return -0.036664104155083546;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.006849555771257481;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.06273618826579601;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0.11477038037548808;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( accounttype(A, I), accounttype(B, I) )
%   | | then if ( tweets(B, J) )
%   | | | then return 0.1235777961205822;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return -0.021581725309557025;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.3761024293344758;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.21444895798886157;  // std dev = 13,272, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.016181410862305217;  // std dev = 8,392, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else return 0.16084587657987118;  // std dev = 5,966, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.16375655104685202;  // std dev = 13,262, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, G) )
%   | then if ( accounttype(A, F), accounttype(B, G) )
%   | | then if ( tweets(B, H), tweets(I, E), tweets(I, J) )
%   | | | then return -0.034432514356109355;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.05086164343169572;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.02690929205294117;  // std dev = 6,143, 160,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=62 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then if ( tweets(B, L) )
%   | | | then return 0.07130833811759853;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return -0.04162051124270782;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.24283812606879593;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.1244667630558675;  // std dev = 13,260, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.010157495255335417;  // std dev = 8,384, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else return 0.09735723820145326;  // std dev = 5,882, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.09458251544292143;  // std dev = 13,262, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return -0.020733154436237345;  // std dev = 6,267, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.054274923861287315;  // std dev = 5,520, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( tweets(B, J), accounttype(B, K), tweets(B, L) )
%   | | | then return 0.09365466104228344;  // std dev = 5,620, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | | else return -0.050153716852423924;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, C) )
%   | then return 0.010557617031452275;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, E) )
%   | | then return -0.02964844989206341;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.016633474880611326;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, F), tweets(A, F) )
%   | then return 0.13664621739130373;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(B, H) )
%   | | | then return -0.002741588579234014;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then return 0.03244414768185952;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | else return 0.07950449207761827;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.13922512614947635;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | else return -0.042461930852135406;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then if ( tweets(A, F), tweets(B, F) )
%   | then return 0.05588729577756263;  // std dev = 0,460, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   | else return -0.0152563861172329;  // std dev = 0,396, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   else if ( accounttype(B, G), accounttype(A, G) )
%   | then return 0.015674533741736347;  // std dev = 6,557, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( tweets(B, H), accounttype(B, I), accounttype(A, J) )
%   | | then return 0.10835914884694962;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else return 0.06573953147341224;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
Results
   AUC ROC   = 0.76729
   AUC PR    = 0.723486
   CLL	      = -0.5742
   Precision = 0.782178 at threshold = 0.5
   Recall    = 0.560284
   F1        = 0.652893


Total learning time: 97.65899999999999 seconds
Total inference time: 0.717 seconds
AUC ROC: 0.76729


Best model AUC ROC so far: 0.76729


Refining iteration 3
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '0;true,false;tweets(A, F).;false;false', '0;false,false;tweets(A, I), accounttype(A, J), accounttype(B, J).;false;false', '0;true;tweets(A, E), tweets(B, E).;true;true', '0;false;tweets(B, G), accounttype(A, H).;false;true', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '1;true,false;tweets(A, F).;false;false', '1;false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;false', '1;true;tweets(A, E), tweets(B, E).;true;true', '1;false;tweets(B, G), accounttype(A, H).;false;true', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '2;true,false;tweets(A, F).;false;false', '2;false,false;tweets(A, I), accounttype(B, J), accounttype(A, J).;false;false', '2;true;tweets(A, E), tweets(B, E).;true;true', '2;false;tweets(B, G), accounttype(A, H).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,true,true;accounttype(A, G), accounttype(B, G).;false;false', '3;false,true;tweets(B, F).;true;true', '3;false,false,true;tweets(B, J).;false;false', '3;false,true,false;accounttype(A, H), accounttype(B, H).;false;false', '3;false;tweets(A, E).;true;true', '3;false,false;accounttype(A, I), accounttype(B, I).;true;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C), accounttype(B, D).;false;true', '5;false,true,true;tweets(B, H), tweets(I, E), tweets(I, J).;false;false', '5;false,true;accounttype(A, F), accounttype(B, G).;true;true', '5;false,false,true;tweets(B, L).;false;false', '5;false;tweets(A, E), accounttype(B, F), accounttype(A, G).;true;true', '5;false,false;accounttype(A, K), accounttype(B, K).;true;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false;tweets(B, D), tweets(A, E), tweets(A, F).;false;true', '7;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;false', '8;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;true;true', '8;false,false;tweets(A, G).;true;true', '8;false,false,false;tweets(B, J).;false;false', '8;false,false,true;tweets(B, H).;false;true', '8;true;tweets(A, C).;true;true', '8;true,false;tweets(A, E).;false;false', '8;false;tweets(B, F), tweets(A, F).;false;true', '8;false,false,true,false;accounttype(A, I), accounttype(B, I).;false;false', '9;;follows(A, B) :- tweets(B, C), accounttype(A, D), tweets(A, E).;false;true', '9;false;accounttype(B, G), accounttype(A, G).;false;true', '9;false,false;tweets(B, H), accounttype(B, I), accounttype(A, J).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('true,true', 0.5306603773584906), ('true,false,false', 0.6588235294117647), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true', 0.7586206896551724), ('true,false,true', 0.9111111111111111)]
Tree #2: [('true,true', 0.5306603773584906), ('true,false,false', 0.6588235294117647), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false', 0.8571428571428571), ('true,false,true', 0.9111111111111111)]
Tree #3: [('true,true', 0.5306603773584906), ('true,false,false', 0.6588235294117647), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true', 0.7586206896551724), ('true,false,true', 0.9111111111111111)]
Tree #4: [('true,true', 0.5306603773584906), ('false,true,true,false', 0.5775862068965517), ('false,false,true,true', 0.6588235294117647), ('false,true,false,false', 0.7045454545454546), ('false,true,false,true', 0.7586206896551724), ('true,false', 0.7890818858560794), ('false,false,false', 0.7916666666666666), ('false,false,true,false', 0.8571428571428571), ('false,true,true,true', 0.9111111111111111)]
Tree #5: [('false,false', 0.5), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481)]
Tree #6: [('false,true,false', 0.6125), ('true', 0.6251511487303507), ('false,false,true,true', 0.6588235294117647), ('false,true,true,false', 0.7586206896551724), ('false,false,false', 0.7916666666666666), ('false,false,true,false', 0.8571428571428571), ('false,true,true,true', 0.9111111111111111)]
Tree #7: [('false,false', 0.5), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481)]
Tree #8: [('false,false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,false,true', 0.74375), ('false,true', 0.7569721115537849), ('false,false,false,false', 0.8571428571428571)]
Tree #9: [('true,true', 0.5306603773584906), ('false,false,true,true', 0.5775862068965517), ('true,false,false', 0.6588235294117647), ('false,false,true,false,false', 0.7045454545454546), ('false,false,true,false,true', 0.7586206896551724), ('false,true', 0.7890818858560794), ('false,false,false,true', 0.7916666666666666), ('false,false,false,false', 0.8571428571428571), ('true,false,true', 0.9111111111111111)]
Tree #10: [('true,true', 0.6251511487303507), ('false,false,false', 0.7045454545454546), ('false,true', 0.7297297297297297), ('true,false', 0.7569721115537849), ('false,false,true', 0.7916666666666666)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.05296217601159877;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.1993254056877463;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), accounttype(A, J), accounttype(B, J) )
%   | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.046636589713539955;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.17328911846492726;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, E), tweets(B, E) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, F) )
%   | | then return -0.04126500401346218;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.14767008630297346;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, G), accounttype(A, H) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2800431611822329;  // std dev = 13,399, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D) )
%   | then if ( tweets(B, E) )
%   | | then if ( accounttype(A, F), accounttype(B, F) )
%   | | | then return -0.036664104155083546;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.006849555771257481;  // std dev = 5,320, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | else if ( accounttype(A, G), accounttype(B, G) )
%   | | | then return 0.06273618826579601;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0.11477038037548808;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(B, I) )
%   | | | then return 0.1235777961205822;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return -0.021581725309557025;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.3761024293344758;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.21579782090533522;  // std dev = 13,373, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else return 0.05990004396540676;  // std dev = 10,422, 589,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=191 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C), accounttype(B, D) )
%   then return 0.1640077994000407;  // std dev = 13,362, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, G) )
%   | then if ( accounttype(A, F), accounttype(B, G) )
%   | | then if ( tweets(B, H), tweets(I, E), tweets(I, J) )
%   | | | then return -0.0392374387993468;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else return 0.04402795346392645;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else if ( tweets(B, K) )
%   | | | then return -0.009447761628248398;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else return 0.08745872067776496;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | else if ( accounttype(A, L), accounttype(B, L) )
%   | | then if ( tweets(B, M) )
%   | | | then return 0.09073094269264229;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else return -0.026914530964775557;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | else return 0.2679363073389624;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.12402947318277802;  // std dev = 13,360, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else return 0.03773868288476138;  // std dev = 10,311, 589,000 (wgt'ed) examples reached here.  /* #neg=398 #pos=191 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.09377776370414682;  // std dev = 13,362, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D), tweets(A, E), tweets(A, F) )
%   | then return -0.028594047858598;  // std dev = 6,266, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.04046942758111753;  // std dev = 5,517, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return 0.10608371046625183;  // std dev = 5,883, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, C) )
%   | then return -0.011658519186570944;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else if ( tweets(A, E) )
%   | | then return -0.035913223758997366;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.04418888523616509;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   else if ( tweets(B, F), tweets(A, F) )
%   | then return 0.15804995694532364;  // std dev = 8,190, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   | else if ( tweets(A, G) )
%   | | then if ( tweets(B, H) )
%   | | | then return -0.009373388885088174;  // std dev = 5,320, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then return 0.023947422608684002;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | else return 0.058849241914293235;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | else if ( tweets(B, J) )
%   | | | then return 0.16762202339363338;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | else return -0.0440340333380686;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), tweets(A, E) )
%   then return 0.03741986890666403;  // std dev = 14,717, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 0.020183686355401017;  // std dev = 6,558, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( tweets(B, G), accounttype(B, H), accounttype(A, I) )
%   | | then return 0.12918489401764305;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else return 0.04805550732325623;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
Results
   AUC ROC   = 0.76729
   AUC PR    = 0.723486
   CLL	      = -0.575662
   Precision = 0.782178 at threshold = 0.5
   Recall    = 0.560284
   F1        = 0.652893


Total learning time: 57.959 seconds
Total inference time: 0.873 seconds
AUC ROC: 0.76729


Best model AUC ROC so far: 0.76729


******************************************
Best model found
******************************************
Total revision time: 277.058
Best validation AUC ROC: 0.76729


Results
   AUC ROC   = 0.697146
   AUC PR    = 0.670434
   CLL	      = -0.637599
   Precision = 0.748549 at threshold = 0.5
   Recall    = 0.496154
   F1        = 0.596762


Total inference time: 1.435 seconds
AUC ROC: 0.697146
Dataset: yeast->twitter, Fold: 2, Type: transfer, Time: 01:52:54
{'Parameter Learning results': {'F1': 0.596762, 'Learning time': 58.152, 'Recall': 0.496154, 'AUC PR': 0.672703, 'AUC ROC': 0.702494, 'CLL': -0.625379, 'Inference time': 1.215, 'Precision': [0.748549, 0.5]}, 'F1': 0.596762, 'Learning time': 277.058, 'Recall': 0.496154, 'AUC PR': 0.670434, 'AUC ROC': 0.697146, 'Mapping results': {'Finding best mapping': 0.6352181434631348, 'Knowledge compiling time': 0.19285893440246582, 'Total time': 5.935181140899658, 'Generating mappings time': 0.0941774845123291, 'Possible mappings': 1458, 'Generating paths time': 5.012920141220093}, 'CLL': -0.637599, 'Inference time': 1.435, 'Precision': [0.748549, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.6472308209555876;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.05296217601159877;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.09952824544433897;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1993254056877463;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.2805627282029616;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.6498156017661795;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.15360348055405781;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.0010060779566550774;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.549098241119697;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.046636589713539955;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.08697564907438803;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17328911846492726;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.24286939416089628;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.5512112630944944;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13385798024736764;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 8.835646163368844E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.43557759505931615;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.04126500401346218;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.07527551940942277;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.14767008630297346;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.20427878004648498;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.43708800727225394;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11489165900800301;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 7.758973011973755E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.19119830646834776;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.33100655161038145;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.036664104155083546;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.06458521224134921;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1235777961205822;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.16744578820253844;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.33204979443556765;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.09726476390236147;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 6.812936799187676E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.15123627082198027;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.24844342508210263;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.032693725873089184;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.05498862653883258;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.10180665778558536;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.13435757949895957;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.2492278555378379;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08135383101863741;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.981815657342233E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11756904775468155;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.1876687563199241;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02924500108552499;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.04650549175860373;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.08278216065690562;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.1060397506011726;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.1883287900606578;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.06734704593186719;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.251750232106048E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.09031645667960987;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.14364858664523228;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.026232168413492324;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03910519567603582;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.06660456442738766;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.08267220082015268;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.14424583915059108;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.055272413639729456;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.6105298554672245E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0688390908655739;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.11150158147353458;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02358680449047552;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03272170158921938;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.05314094933548588;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.06388924363144032;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.11205948623285547;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04504116859975111;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.0474016800404585E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05220345901691881;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.08763955896479636;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.021253687739216147;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.027267194615232963;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.04212175139001412;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.04906676000335172;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.08816541943154743;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.03649198584382003;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.552900687251765E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0394588085364301;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.06961572907167762;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.01918778417737564;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.022643236170139462;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03321810241282451;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.03751769451017392;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.07011086202405459;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.029427786683806866;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.118698576379438E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.697251
   AUC PR    = 0.670471
   CLL	      = -0.637301
   Precision = 0.748549 at threshold = 0.5
   Recall    = 0.496154
   F1        = 0.596762


Total learning time: 178.501 seconds
Total inference time: 1.609 seconds
AUC ROC: 0.697251


Dataset: yeast->twitter, Fold: 2, Type: scratch, Time: 01:55:55
{'F1': 0.596762, 'Learning time': 178.501, 'Recall': 0.496154, 'AUC PR': 0.670471, 'AUC ROC': 0.697251, 'CLL': -0.637301, 'Inference time': 1.609, 'Precision': [0.748549, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3029765213064041;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.6057006217153944;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.02771415249081582;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.09881283551445066;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.2499015124191009;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.26146385222658547;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5991127905211964;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.1538011090125544;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.041482268432845706;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.26195770509987254;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.5150608092227671;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.024306925639779996;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.08635362224095879;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21668053336674278;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22656674054116943;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5096464309523057;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13402883159591558;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.036357252670662456;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21953155930279844;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.4111204193418097;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.021262920970161307;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.07474527956991832;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.18315801979572102;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.19115743949407257;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.40720674267139145;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11503476080236148;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.03174024374368541;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.17892939244519368;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.3141825418796683;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.04188157746962599;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.15131096914906783;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.15745421419149033;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.3114987982673407;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.020750005128064426;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.09738108407343211;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.06650163911499253;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1425772569838136;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.23603762450509483;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.03606366665942301;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.12260445980204351;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.12710849653552952;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.2340980963909117;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.01800243753968006;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.08144578875500447;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.05755706555929886;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11168986511459747;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1774902008011571;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.030923627820140676;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.09781671784146916;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.10098959576200428;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1759434171915245;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.015586918195983929;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.06741790070294855;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.049486519118003613;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.08643271964998046;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1346342522853809;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.02641938592742567;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.07711530908204077;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.07927332329813633;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1332991893384412;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.013471543878489367;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.05532571130835863;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.04230007132502209;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.06632409104376542;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.10321738118856012;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.022500001229099988;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.060253439733887366;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.061673116590251875;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.10201484413152792;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.011625262298408061;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.04508033714379663;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.03597398089443983;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05060117037502902;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.07993088904146513;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.01911009127483825;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.046767993217629915;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.0476691029643235;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.07882946968212366;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.010018554751275404;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.03652009504854331;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.0304601306719722;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, C) )
%   | then return 0.03845458614271817;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return -0.005547389263289258;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.03612459730283215;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   else if ( tweets(B, F) )
%   | then if ( tweets(A, F) )
%   | | then return 0.06243765193281927;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.036671568052569055;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.06142578394326317;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | else if ( tweets(A, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03694155335542689;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | | | else return 0.029447441950451732;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else return 0.011184506846444247;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */


Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).'] 

Source structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, H)', 'false,true': 'tweets(A, F)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'false,true,false': 'tweets(A, G)', 'true': 'tweets(A, C)', 'true,false': 'tweets(A, E)', 'false': 'tweets(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.427, 183, 58], 'false,true,false,false': [0.438, 43, 123], 'false,true,false,true': [0.491, 108, 73], 'false,false,true,false': [0.456, 81, 34], 'true,false,true': [0.375, 191, 39], 'true,false,false': [0.488, 118, 76]}]] 



Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.156660115303962;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.12185408003996846;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.1690588431090709;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12652833005489178;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.10048838272215738;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10058245297325914;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.0818069789519704;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.10684292618038639;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0789974449301268;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06590519832557229;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06149224389390623;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.052654433946546925;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.047554622437177986;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04179415130489351;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.04928605546308811;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03660221690565094;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03300589385532892;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03765074919083744;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 33.883 seconds
Total inference time: 0.931 seconds
AUC ROC: 0.652806


Results in test set
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total inference time: 0.931 seconds
AUC ROC: 0.652806
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [12.139, 244, 372], 'false,false,false': [0.0, 0, 0], 'true,true': [14.835, 312, 747], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [15.797, 738, 377], 'false,false,true,false': [3.39, 27, 20], 'true,false,true': [15.449, 594, 399], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;false', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #4: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false', 0.574468085106383), ('true,false,true', 0.5981873111782477), ('false,true,true', 0.6038961038961039), ('false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.156660115303962;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.12185408003996846;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16905884310907088;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12652833005489178;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.10048838272215738;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10058245297325914;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.0818069789519704;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10684292618038635;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0789974449301268;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06590519832557229;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06149224389390623;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.052654433946546925;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.047554622437177986;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04179415130489351;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04928605546308813;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03660221690565094;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03300589385532892;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03765074919083752;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 45.544 seconds
Total inference time: 0.828 seconds
AUC ROC: 0.652806


Best model AUC ROC so far: 0.652806


******************************************
Best model found
******************************************
Total revision time: 81.186
Best validation AUC ROC: 0.652806


Results
   AUC ROC   = 0.657726
   AUC PR    = 0.639384
   CLL	      = -0.654507
   Precision = 0.616571 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.642977


Total inference time: 2.051 seconds
AUC ROC: 0.657726
Dataset: twitter->yeast, Fold: 1, Type: transfer, Time: 02:09:34
{'Parameter Learning results': {'F1': 0.642977, 'Learning time': 33.883, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'CLL': -0.654507, 'Inference time': 2.505, 'Precision': [0.616571, 0.5]}, 'F1': 0.642977, 'Learning time': 81.186, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'Mapping results': {'Finding best mapping': 0.012972593307495117, 'Knowledge compiling time': 0.06580781936645508, 'Total time': 3.2627005577087402, 'Generating mappings time': 0.04642486572265625, 'Possible mappings': 98, 'Generating paths time': 3.1374897956848145}, 'CLL': -0.654507, 'Inference time': 2.051, 'Precision': [0.616571, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(D, C), complex(D, E) )
%   then return 0.4515868808912335;  // std dev = 0,491, 1.402,000 (wgt'ed) examples reached here.  /* #neg=570 #pos=832 */
%   else if ( enzyme(B, F), phenotype(A, G) )
%   | then return 0.1409358203454154;  // std dev = 0,450, 244,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=69 */
%   | else if ( phenotype(A, H), function(A, I), function(B, I) )
%   | | then if ( location(B, J), location(A, J) )
%   | | | then return 0.48777856472913844;  // std dev = 0,483, 243,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=153 */
%   | | | else if ( location(B, K), phenotype(L, H), proteinclass(L, M) )
%   | | | | then return 0.30551735615214487;  // std dev = 0,497, 114,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=51 */
%   | | | | else return 0.5664822684328457;  // std dev = 0,455, 24,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=17 */
%   | | else if ( phenotype(A, N), function(B, P), location(A, Q) )
%   | | | then return 0.20597502205602955;  // std dev = 0,476, 575,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=200 */
%   | | | else if ( enzyme(B, R), location(B, S) )
%   | | | | then return 0.26886322081379554;  // std dev = 0,492, 224,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=92 */
%   | | | | else if ( function(B, T), function(A, T) )
%   | | | | | then return 0.5464606234111967;  // std dev = 0,463, 308,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=212 */
%   | | | | | else return 0.2733788201569793;  // std dev = 0,493, 696,000 (wgt'ed) examples reached here.  /* #neg=407 #pos=289 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5274485200875965;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( phenotype(B, E) )
%   | then return 0.15759067286840442;  // std dev = 0,479, 631,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=227 */
%   | else if ( enzyme(B, F), phenotype(A, G) )
%   | | then return 0.13159216093577691;  // std dev = 0,454, 223,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=65 */
%   | | else if ( location(B, H), location(A, H) )
%   | | | then if ( complex(B, I), function(A, J), function(B, J) )
%   | | | | then return 0.45127460450556856;  // std dev = 0,470, 66,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=44 */
%   | | | | else if ( complex(B, K), phenotype(A, L) )
%   | | | | | then return 0.03807818765056913;  // std dev = 0,405, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | | | else if ( enzyme(A, M), function(A, N), function(B, N) )
%   | | | | | | then return 0.5006131328255431;  // std dev = 0,455, 51,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=36 */
%   | | | | | | else if ( proteinclass(A, P), complex(A, Q) )
%   | | | | | | | then return 0.19002705874253667;  // std dev = 0,480, 45,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=17 */
%   | | | | | | | else return 0.33371633651146226;  // std dev = 0,495, 896,000 (wgt'ed) examples reached here.  /* #neg=427 #pos=469 */
%   | | | else return 0.2249014308531715;  // std dev = 0,488, 1.023,000 (wgt'ed) examples reached here.  /* #neg=607 #pos=416 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.4281285445392207;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( phenotype(B, E) )
%   | then return 0.13100278059028736;  // std dev = 0,479, 631,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=227 */
%   | else if ( phenotype(A, F), function(B, G), location(A, H) )
%   | | then return 0.19667978064425737;  // std dev = 0,484, 1.145,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=475 */
%   | | else if ( enzyme(B, I), location(B, J) )
%   | | | then return 0.19078179811243262;  // std dev = 0,492, 208,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=87 */
%   | | | else if ( proteinclass(B, K), location(B, L) )
%   | | | | then return 0.1990069884074395;  // std dev = 0,491, 101,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=45 */
%   | | | | else if ( function(B, M), function(A, M) )
%   | | | | | then return 0.4193242512648445;  // std dev = 0,456, 270,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=189 */
%   | | | | | else if ( complex(A, N), function(B, P) )
%   | | | | | | then if ( complex(B, Q), location(A, R), location(B, R) )
%   | | | | | | | then return 0.7672601905426467;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | | else return 0.29323799697906056;  // std dev = 0,500, 60,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=31 */
%   | | | | | | else return 0.1858142498031186;  // std dev = 0,491, 545,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=222 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, D), location(A, E) )
%   then return 0.264337347078497;  // std dev = 0,464, 837,000 (wgt'ed) examples reached here.  /* #neg=322 #pos=515 */
%   else if ( phenotype(A, F), function(B, G), function(A, G) )
%   | then if ( enzyme(B, H), location(A, I), location(B, I) )
%   | | then if ( proteinclass(B, J) )
%   | | | then return -0.021528349941156676;  // std dev = 0,390, 16,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=3 */
%   | | | else if ( complex(A, K), complex(L, K), proteinclass(L, M) )
%   | | | | then return 0.5909716500588433;  // std dev = 0,894, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( complex(A, N), enzyme(P, H), complex(P, Q) )
%   | | | | | then return 0.3909716500588434;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | else if ( complex(B, R) )
%   | | | | | | then return 0.12430498339217662;  // std dev = 0,816, 3,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=1 */
%   | | | | | | else if ( complex(A, S) )
%   | | | | | | | then return 0.2909716500588433;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | | else return 0.23541609450328785;  // std dev = 0,497, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | else return 0.28542501320862496;  // std dev = 0,489, 406,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=235 */
%   | else return 0.16908291993052713;  // std dev = 0,482, 2.545,000 (wgt'ed) examples reached here.  /* #neg=1.397 #pos=1.148 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C) )
%   then return 0.1021109117774156;  // std dev = 0,473, 721,000 (wgt'ed) examples reached here.  /* #neg=426 #pos=295 */
%   else if ( phenotype(B, D), phenotype(E, D), enzyme(E, F) )
%   | then return 0.21627811342613049;  // std dev = 0,463, 1.085,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=668 */
%   | else if ( phenotype(A, G), function(A, H), function(B, H) )
%   | | then if ( phenotype(B, I), location(B, J), location(A, K) )
%   | | | then return -0.07124027009214892;  // std dev = 0,484, 33,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=13 */
%   | | | else if ( location(B, L), phenotype(M, G), complex(M, N) )
%   | | | | then if ( proteinclass(M, P), location(Q, L), phenotype(Q, G) )
%   | | | | | then if ( function(Q, H) )
%   | | | | | | then if ( location(M, L) )
%   | | | | | | | then return 0.2382725614471971;  // std dev = 0,488, 291,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=176 */
%   | | | | | | | else return 0.3873123021953212;  // std dev = 0,432, 26,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=19 */
%   | | | | | | else return -0.13089260602514635;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=2 */
%   | | | | | else return -0.1651859764990581;  // std dev = 0,370, 19,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=3 */
%   | | | | else return 0.342684730183222;  // std dev = 0,440, 30,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=22 */
%   | | else return 0.13549527554032903;  // std dev = 0,485, 1.614,000 (wgt'ed) examples reached here.  /* #neg=897 #pos=717 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.324563605358621;  // std dev = 0,373, 298,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=244 */
%   else if ( phenotype(A, D), function(B, E), location(A, F) )
%   | then return 0.08010601688559783;  // std dev = 0,477, 1.685,000 (wgt'ed) examples reached here.  /* #neg=938 #pos=747 */
%   | else if ( enzyme(B, G), location(B, H) )
%   | | then if ( enzyme(A, G) )
%   | | | then return 0.5153108526057497;  // std dev = 0,312, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else if ( location(A, H), function(A, I), function(B, I) )
%   | | | | then return 0.22389873653184453;  // std dev = 0,472, 62,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=38 */
%   | | | | else return 0.04871549875111977;  // std dev = 0,480, 266,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=98 */
%   | | else if ( enzyme(A, J), phenotype(B, K), location(A, L) )
%   | | | then return 0.0010519157543202068;  // std dev = 0,461, 51,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=22 */
%   | | | else if ( phenotype(A, M), proteinclass(A, N), complex(A, P) )
%   | | | | then return 0.6923922725340765;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | else if ( function(B, Q), function(A, Q) )
%   | | | | | then return 0.24074490976952717;  // std dev = 0,453, 545,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=385 */
%   | | | | | else return 0.08229561535024463;  // std dev = 0,490, 911,000 (wgt'ed) examples reached here.  /* #neg=541 #pos=370 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.24509907732423497;  // std dev = 0,372, 298,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=244 */
%   else if ( phenotype(A, D), function(B, E), function(A, E) )
%   | then if ( proteinclass(B, F), proteinclass(G, F), location(G, H) )
%   | | then if ( enzyme(G, I), location(A, H) )
%   | | | then return 0.22778463578385189;  // std dev = 0,431, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | | | else if ( proteinclass(A, F) )
%   | | | | then return 0.491743685822328;  // std dev = 0,068, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( phenotype(B, J) )
%   | | | | | then return -0.12239000015113931;  // std dev = 0,488, 51,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=21 */
%   | | | | | else if ( phenotype(G, K), function(G, E) )
%   | | | | | | then return 0.3509665072235267;  // std dev = 0,407, 9,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=7 */
%   | | | | | | else if ( complex(A, L) )
%   | | | | | | | then return -0.015615393585841205;  // std dev = 0,485, 27,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=11 */
%   | | | | | | | else return 0.15319080583995953;  // std dev = 0,503, 15,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=8 */
%   | | else return 0.1453708890927766;  // std dev = 0,476, 577,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=349 */
%   | else return 0.06772023675436667;  // std dev = 0,477, 2.788,000 (wgt'ed) examples reached here.  /* #neg=1.557 #pos=1.231 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(B, D), phenotype(B, E) )
%   then return -0.07025274366408933;  // std dev = 0,459, 63,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=24 */
%   else if ( phenotype(A, F), phenotype(B, F) )
%   | then return 0.19505514878128324;  // std dev = 0,364, 291,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=241 */
%   | else if ( phenotype(A, G), function(B, H), location(A, I) )
%   | | then return 0.04059644498931522;  // std dev = 0,474, 1.660,000 (wgt'ed) examples reached here.  /* #neg=925 #pos=735 */
%   | | else if ( proteinclass(A, J), location(B, K), location(A, K) )
%   | | | then return 0.010156240125743487;  // std dev = 0,470, 94,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=43 */
%   | | | else if ( location(A, L), location(B, L) )
%   | | | | then return 0.11528973365941354;  // std dev = 0,474, 894,000 (wgt'ed) examples reached here.  /* #neg=401 #pos=493 */
%   | | | | else if ( location(B, M), complex(A, N), phenotype(B, P) )
%   | | | | | then return -0.19415979018437782;  // std dev = 0,402, 18,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=4 */
%   | | | | | else if ( location(B, Q) )
%   | | | | | | then if ( proteinclass(A, R), location(S, Q), phenotype(S, T) )
%   | | | | | | | then return 0.14415320060936676;  // std dev = 0,482, 69,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=40 */
%   | | | | | | | else return 0.04729222653047733;  // std dev = 0,485, 545,000 (wgt'ed) examples reached here.  /* #neg=304 #pos=241 */
%   | | | | | | else return 0.1034318749385635;  // std dev = 0,486, 196,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=94 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), phenotype(A, D) )
%   then return 0.005434980955955077;  // std dev = 0,458, 387,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=185 */
%   else if ( enzyme(B, E), complex(A, F) )
%   | then return -0.03216595590146314;  // std dev = 0,451, 186,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=60 */
%   | else if ( phenotype(B, G), function(A, H), function(B, H) )
%   | | then return 0.13915239794600845;  // std dev = 0,421, 683,000 (wgt'ed) examples reached here.  /* #neg=170 #pos=513 */
%   | | else if ( phenotype(B, I), enzyme(A, J), location(A, K) )
%   | | | then return -0.21991774488156599;  // std dev = 0,360, 46,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=7 */
%   | | | else if ( complex(B, L), location(A, M) )
%   | | | | then return -0.007545334300078458;  // std dev = 0,470, 361,000 (wgt'ed) examples reached here.  /* #neg=217 #pos=144 */
%   | | | | else if ( phenotype(B, N) )
%   | | | | | then if ( enzyme(B, P), location(B, Q), location(A, Q) )
%   | | | | | | then if ( phenotype(A, R), phenotype(S, N), proteinclass(S, T) )
%   | | | | | | | then return 0.409476525959683;  // std dev = 0,395, 10,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=8 */
%   | | | | | | | else return 0.0923195144715039;  // std dev = 0,499, 34,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=15 */
%   | | | | | | else return -7.098797174994291E-4;  // std dev = 0,482, 286,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=111 */
%   | | | | | else return 0.0688705237661534;  // std dev = 0,484, 1.837,000 (wgt'ed) examples reached here.  /* #neg=965 #pos=872 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(A, D) )
%   then return -0.012400808613349914;  // std dev = 0,447, 275,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=100 */
%   else if ( proteinclass(B, E) )
%   | then if ( location(B, F), function(A, G), function(B, G) )
%   | | then return 0.0658048360397672;  // std dev = 0,465, 321,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=201 */
%   | | else if ( phenotype(B, H), complex(B, I), location(A, J) )
%   | | | then return -0.16482636681383817;  // std dev = 0,411, 59,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=13 */
%   | | | else if ( phenotype(A, K), enzyme(B, L) )
%   | | | | then return -0.2740434836578637;  // std dev = 0,260, 14,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=1 */
%   | | | | else if ( proteinclass(A, M), location(B, N) )
%   | | | | | then return -0.14048601896212387;  // std dev = 0,426, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | | | else if ( location(B, P), complex(A, Q), phenotype(A, R) )
%   | | | | | | then if ( complex(B, S), proteinclass(T, E), phenotype(T, U) )
%   | | | | | | | then return -0.04033305672507792;  // std dev = 0,458, 7,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=2 */
%   | | | | | | | else return 0.2371552290785741;  // std dev = 0,495, 28,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=17 */
%   | | | | | | else return -0.0111404845101242;  // std dev = 0,479, 165,000 (wgt'ed) examples reached here.  /* #neg=104 #pos=61 */
%   | else return 0.05325912762050838;  // std dev = 0,469, 2.939,000 (wgt'ed) examples reached here.  /* #neg=1.424 #pos=1.515 */
Results
   AUC ROC   = 0.654424
   AUC PR    = 0.649814
   CLL	      = -0.653877
   Precision = 0.635604 at threshold = 0.5
   Recall    = 0.594373
   F1        = 0.614297


Total learning time: 110.951 seconds
Total inference time: 2.885 seconds
AUC ROC: 0.654424


Dataset: twitter->yeast, Fold: 1, Type: scratch, Time: 02:11:28
{'F1': 0.614297, 'Learning time': 110.951, 'Recall': 0.594373, 'AUC PR': 0.649814, 'AUC ROC': 0.654424, 'CLL': -0.653877, 'Inference time': 2.885, 'Precision': [0.635604, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10398203009346133;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1341427763142289;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08664186252602446;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1098206895427749;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.07140027033864552;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08865263572839156;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05830247002796966;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07076815119389623;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04725203491755055;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05600174874763819;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03806542572442744;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04402136668006728;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.030517148453083637;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.034428390147791706;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 33.452 seconds
Total inference time: 1.022 seconds
AUC ROC: 0.68902


Results in test set
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total inference time: 1.022 seconds
AUC ROC: 0.68902
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [11.225, 254, 250], 'false,false,false': [0.0, 0, 0], 'true,true': [13.487, 264, 585], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [11.481, 366, 206], 'false,false,true,false': [1.651, 6, 5], 'true,false,true': [9.27, 280, 124], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;false', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #4: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,true,true', 0.503968253968254), ('false,false,true,false', 0.5454545454545454), ('false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('true,false,true', 0.693069306930693)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10398203009346133;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1341427763142289;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08664186252602446;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1098206895427749;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.07140027033864552;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08865263572839156;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05830247002796966;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07076815119389623;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04725203491755055;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05600174874763819;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03806542572442744;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04402136668006728;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.030517148453083637;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.034428390147791706;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 35.369 seconds
Total inference time: 0.939 seconds
AUC ROC: 0.68902


Best model AUC ROC so far: 0.68902


******************************************
Best model found
******************************************
Total revision time: 70.782
Best validation AUC ROC: 0.68902


Results
   AUC ROC   = 0.645378
   AUC PR    = 0.636573
   CLL	      = -0.660701
   Precision = 0.704691 at threshold = 0.5
   Recall    = 0.431901
   F1        = 0.53556


Total inference time: 2.613 seconds
AUC ROC: 0.645378
Dataset: twitter->yeast, Fold: 2, Type: transfer, Time: 02:12:49
{'Parameter Learning results': {'F1': 0.53556, 'Learning time': 33.452, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'CLL': -0.660701, 'Inference time': 2.618, 'Precision': [0.704691, 0.5]}, 'F1': 0.53556, 'Learning time': 70.782, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'Mapping results': {'Finding best mapping': 0.013162374496459961, 'Knowledge compiling time': 0.04569864273071289, 'Total time': 3.35247540473938, 'Generating mappings time': 0.04708099365234375, 'Possible mappings': 98, 'Generating paths time': 3.2465250492095947}, 'CLL': -0.660701, 'Inference time': 2.613, 'Precision': [0.704691, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5427455121166226;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.11478610324110598;  // std dev = 0,437, 226,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( complex(B, G), location(A, H), location(B, H) )
%   | | then return 0.5119950889456629;  // std dev = 0,476, 208,000 (wgt'ed) examples reached here.  /* #neg=72 #pos=136 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.17162855892396128;  // std dev = 0,464, 319,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=100 */
%   | | | else if ( complex(B, J), location(B, K) )
%   | | | | then return 0.16403128804068778;  // std dev = 0,461, 85,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=26 */
%   | | | | else if ( phenotype(A, L) )
%   | | | | | then return 0.2646005480027338;  // std dev = 0,491, 465,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=189 */
%   | | | | | else if ( complex(A, M), location(B, N) )
%   | | | | | | then return 0.19814893509951237;  // std dev = 0,474, 50,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=17 */
%   | | | | | | else if ( proteinclass(B, P), location(A, Q) )
%   | | | | | | | then return 0.09624417319475045;  // std dev = 0,426, 21,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=5 */
%   | | | | | | | else return 0.39193271888329645;  // std dev = 0,499, 148,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=79 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.4631496981317357;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.10023087141462249;  // std dev = 0,437, 226,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( complex(B, G), function(A, H), function(B, H) )
%   | | then return 0.39504648060300257;  // std dev = 0,480, 228,000 (wgt'ed) examples reached here.  /* #neg=92 #pos=136 */
%   | | else if ( proteinclass(A, I), complex(A, J), proteinclass(B, K) )
%   | | | then return -0.12096890290323765;  // std dev = 0,209, 22,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=1 */
%   | | | else if ( complex(B, L), complex(A, M) )
%   | | | | then return 0.03647270603188496;  // std dev = 0,418, 49,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=11 */
%   | | | | else if ( proteinclass(A, N), enzyme(A, P), function(B, Q) )
%   | | | | | then return 0.09479197894723743;  // std dev = 0,436, 73,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=19 */
%   | | | | | else if ( phenotype(A, R), complex(B, S) )
%   | | | | | | then return 0.06566315331073602;  // std dev = 0,440, 20,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=5 */
%   | | | | | | else if ( complex(B, T), location(A, U) )
%   | | | | | | | then return 0.4787606781304619;  // std dev = 0,476, 21,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=14 */
%   | | | | | | | else return 0.23811071252020202;  // std dev = 0,491, 883,000 (wgt'ed) examples reached here.  /* #neg=517 #pos=366 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.37330860529496585;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( proteinclass(A, E), proteinclass(B, E) )
%   | then return 0.6807886706698231;  // std dev = 0,249, 14,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=13 */
%   | else if ( phenotype(B, F), phenotype(G, F), proteinclass(G, H) )
%   | | then return 0.08440676930162092;  // std dev = 0,435, 223,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | | else if ( complex(B, I), proteinclass(B, J), location(B, K) )
%   | | | then return 0.4088781178299175;  // std dev = 0,441, 79,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=53 */
%   | | | else if ( phenotype(A, L), complex(A, M), complex(B, M) )
%   | | | | then return 0.5666431683979967;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | else if ( proteinclass(A, N), complex(A, P), proteinclass(B, Q) )
%   | | | | | then return -0.15220776612154222;  // std dev = 0,075, 19,000 (wgt'ed) examples reached here.  /* #neg=19 */
%   | | | | | else if ( proteinclass(A, R), function(B, S), enzyme(A, T) )
%   | | | | | | then return 0.060476094088114565;  // std dev = 0,434, 84,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=21 */
%   | | | | | | else if ( proteinclass(A, U), location(B, W) )
%   | | | | | | | then return 0.14984668657335884;  // std dev = 0,478, 191,000 (wgt'ed) examples reached here.  /* #neg=122 #pos=69 */
%   | | | | | | | else return 0.20993491985014634;  // std dev = 0,491, 905,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=391 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), location(B, D), phenotype(A, C) )
%   then return 0.3643842641716103;  // std dev = 0,428, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( proteinclass(B, E), complex(B, F), proteinclass(A, G) )
%   | then return 0.32529654700841226;  // std dev = 0,411, 74,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=50 */
%   | else if ( phenotype(A, H), function(A, I), function(B, I) )
%   | | then if ( complex(B, J), complex(K, J), phenotype(K, H) )
%   | | | then return 0.3321071114557757;  // std dev = 0,450, 99,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=70 */
%   | | | else if ( complex(B, L), phenotype(M, H), complex(M, N) )
%   | | | | then return 0.041641150755214275;  // std dev = 0,477, 147,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=56 */
%   | | | | else if ( enzyme(A, P), enzyme(B, P) )
%   | | | | | then return 0.6036737541062765;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | else if ( complex(A, Q), function(R, I), enzyme(R, S) )
%   | | | | | | then if ( complex(R, Q), phenotype(B, T), location(B, U) )
%   | | | | | | | then return 0.3849237541062766;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=25 */
%   | | | | | | | else return 0.16298504427027644;  // std dev = 0,496, 210,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=98 */
%   | | | | | | else return 0.262115140698033;  // std dev = 0,490, 195,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=113 */
%   | | else return 0.14847765699823687;  // std dev = 0,474, 1.251,000 (wgt'ed) examples reached here.  /* #neg=741 #pos=510 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.2236573979992224;  // std dev = 0,460, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( proteinclass(A, E), function(A, F), function(B, F) )
%   | then return 0.212491437876804;  // std dev = 0,459, 173,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=90 */
%   | else if ( proteinclass(A, G), location(B, H) )
%   | | then return -0.011629105616835786;  // std dev = 0,413, 218,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=49 */
%   | | else if ( complex(A, I), function(B, J), function(A, J) )
%   | | | then return 0.23918493358117965;  // std dev = 0,480, 205,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=116 */
%   | | | else if ( complex(B, K), location(A, L) )
%   | | | | then return 0.06941877045564261;  // std dev = 0,456, 183,000 (wgt'ed) examples reached here.  /* #neg=120 #pos=63 */
%   | | | | else if ( complex(A, M), phenotype(A, N), function(B, P) )
%   | | | | | then if ( phenotype(B, N) )
%   | | | | | | then return 0.5069797982573956;  // std dev = 0,433, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | else if ( proteinclass(B, Q), complex(R, M), proteinclass(R, S) )
%   | | | | | | | then return 0.41913922275875737;  // std dev = 0,479, 9,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=6 */
%   | | | | | | | else return 0.1550535682220982;  // std dev = 0,493, 234,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=100 */
%   | | | | | else return 0.09016797615055867;  // std dev = 0,476, 492,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=180 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(B, C), function(A, D), function(B, D) )
%   then return 0.19793618020063844;  // std dev = 0,447, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( phenotype(A, E), phenotype(B, E), location(B, F) )
%   | then return 0.20791384742465888;  // std dev = 0,436, 194,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=138 */
%   | else if ( phenotype(A, G) )
%   | | then return 0.07131519044072294;  // std dev = 0,473, 1.128,000 (wgt'ed) examples reached here.  /* #neg=668 #pos=460 */
%   | | else if ( proteinclass(B, H), complex(A, I) )
%   | | | then return -0.1296023263491023;  // std dev = 0,296, 31,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=3 */
%   | | | else if ( location(B, J), location(A, J), complex(A, K) )
%   | | | | then return 0.23137583877323395;  // std dev = 0,446, 125,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=76 */
%   | | | | else if ( complex(A, L) )
%   | | | | | then return -0.016317058087207337;  // std dev = 0,452, 93,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=28 */
%   | | | | | else if ( complex(B, M), location(A, N), proteinclass(B, P) )
%   | | | | | | then return 0.40381393540101085;  // std dev = 0,412, 10,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=7 */
%   | | | | | | else if ( complex(B, Q) )
%   | | | | | | | then return 0.04597031971512533;  // std dev = 0,472, 72,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=29 */
%   | | | | | | | else return 0.17651155866759416;  // std dev = 0,491, 205,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=103 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( proteinclass(B, C), location(B, D), location(A, D) )
%   then return 0.14337369943576092;  // std dev = 0,431, 414,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=260 */
%   else if ( enzyme(B, E), proteinclass(A, F), location(A, G) )
%   | then return -0.015699843332832277;  // std dev = 0,414, 61,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=22 */
%   | else if ( phenotype(A, H), phenotype(B, H), location(B, I) )
%   | | then return 0.16780849283532026;  // std dev = 0,428, 210,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=155 */
%   | | else if ( phenotype(A, J), proteinclass(B, K), location(B, L) )
%   | | | then if ( complex(B, M), location(A, N), phenotype(B, P) )
%   | | | | then return -0.32479171100550513;  // std dev = 0,344, 13,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=2 */
%   | | | | else if ( complex(A, Q), location(R, L), complex(R, S) )
%   | | | | | then return -0.12758326851230692;  // std dev = 0,440, 35,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=10 */
%   | | | | | else if ( enzyme(B, T), function(A, U), function(B, U) )
%   | | | | | | then return 0.39242841501290654;  // std dev = 0,265, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | | | | else if ( phenotype(B, W), phenotype(X, J), complex(X, Y) )
%   | | | | | | | then return 0.09976924610672118;  // std dev = 0,548, 14,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=8 */
%   | | | | | | | else return -0.02625933572028954;  // std dev = 0,459, 15,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=5 */
%   | | | else return 0.08160382308223976;  // std dev = 0,477, 1.568,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=699 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), location(B, D) )
%   then return 0.13763093346597596;  // std dev = 0,426, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E), phenotype(F, E), complex(F, G) )
%   | then if ( complex(A, H), enzyme(F, I), function(B, J) )
%   | | then if ( phenotype(B, K), function(F, J) )
%   | | | then return 0.0015847020631175213;  // std dev = 0,464, 202,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=95 */
%   | | | else if ( enzyme(B, I), proteinclass(B, L) )
%   | | | | then return -0.1416296578468062;  // std dev = 0,456, 10,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=3 */
%   | | | | else if ( function(A, J), location(B, M), location(A, M) )
%   | | | | | then return 0.14847423761619719;  // std dev = 0,464, 139,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=84 */
%   | | | | | else if ( complex(B, N), function(F, J) )
%   | | | | | | then return -0.03417077493060122;  // std dev = 0,453, 46,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=13 */
%   | | | | | | else if ( location(B, P) )
%   | | | | | | | then return 0.0753996398128296;  // std dev = 0,483, 238,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=96 */
%   | | | | | | | else return 0.12482056910261306;  // std dev = 0,492, 96,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=44 */
%   | | else return 0.02063675434849283;  // std dev = 0,464, 582,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=243 */
%   | else return 0.09040700812977027;  // std dev = 0,460, 701,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=350 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), location(B, D) )
%   then return 0.10610476402109266;  // std dev = 0,426, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E) )
%   | then if ( complex(A, F), proteinclass(A, G), complex(B, H) )
%   | | then return 0.12284087219226011;  // std dev = 0,412, 77,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=44 */
%   | | else if ( complex(B, I), complex(A, J), phenotype(B, K) )
%   | | | then return -0.08167148173118116;  // std dev = 0,460, 69,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=25 */
%   | | | else if ( enzyme(B, L), phenotype(B, M), proteinclass(B, N) )
%   | | | | then return 0.19133001340602818;  // std dev = 0,399, 51,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=39 */
%   | | | | else if ( complex(A, P), phenotype(Q, E), enzyme(Q, R) )
%   | | | | | then if ( complex(Q, S), function(B, T) )
%   | | | | | | then if ( location(B, U), location(Q, U), function(A, T) )
%   | | | | | | | then return 0.023259754086807714;  // std dev = 0,485, 201,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=100 */
%   | | | | | | | else return 0.07416819031375951;  // std dev = 0,478, 379,000 (wgt'ed) examples reached here.  /* #neg=218 #pos=161 */
%   | | | | | | else return -0.028145899420406677;  // std dev = 0,440, 52,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=19 */
%   | | | | | else return 0.0066801552820907086;  // std dev = 0,469, 531,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=213 */
%   | else return 0.07128157283823976;  // std dev = 0,460, 654,000 (wgt'ed) examples reached here.  /* #neg=327 #pos=327 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(B, C), function(A, D), function(B, D) )
%   then return 0.08829211739841647;  // std dev = 0,437, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( phenotype(A, E), phenotype(B, E) )
%   | then return 0.06280366533553326;  // std dev = 0,438, 198,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=140 */
%   | else if ( proteinclass(B, F), location(A, G), location(B, G) )
%   | | then return -0.12936967606896466;  // std dev = 0,368, 73,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=13 */
%   | | else if ( proteinclass(A, H), function(A, I), function(B, I) )
%   | | | then return 0.07655142816786982;  // std dev = 0,467, 198,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=108 */
%   | | | else if ( proteinclass(A, J), function(B, K) )
%   | | | | then return -0.03990110029008831;  // std dev = 0,429, 242,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=63 */
%   | | | | else if ( phenotype(A, L) )
%   | | | | | then return 0.03129282447233583;  // std dev = 0,479, 749,000 (wgt'ed) examples reached here.  /* #neg=424 #pos=325 */
%   | | | | | else if ( phenotype(B, M), complex(B, N) )
%   | | | | | | then return -0.019652152163238578;  // std dev = 0,468, 61,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=26 */
%   | | | | | | else if ( complex(B, P), location(A, Q), location(B, Q) )
%   | | | | | | | then return 0.2004122721565391;  // std dev = 0,425, 38,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=27 */
%   | | | | | | | else return 0.064577426073505;  // std dev = 0,487, 299,000 (wgt'ed) examples reached here.  /* #neg=157 #pos=142 */
Results
   AUC ROC   = 0.651161
   AUC PR    = 0.655164
   CLL	      = -0.663851
   Precision = 0.687704 at threshold = 0.5
   Recall    = 0.382567
   F1        = 0.491637


Total learning time: 148.895 seconds
Total inference time: 4.83 seconds
AUC ROC: 0.651161


Dataset: twitter->yeast, Fold: 2, Type: scratch, Time: 02:15:23
{'F1': 0.491637, 'Learning time': 148.895, 'Recall': 0.382567, 'AUC PR': 0.655164, 'AUC ROC': 0.651161, 'CLL': -0.663851, 'Inference time': 4.83, 'Precision': [0.687704, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.16562815947624016;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.14424688162459248;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.12357625186313503;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.104301197312694;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08689198580080103;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07159091160654964;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05844404016553731;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04735453305420465;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.038137714131827496;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.03930851827806131;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03056665598230434;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 18.448 seconds
Total inference time: 0.767 seconds
AUC ROC: 0.666605


Results in test set
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total inference time: 0.767 seconds
AUC ROC: 0.666605
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,true': 'function(A, F)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [7.125, 109, 95], 'false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false,false': [1.0, 2, 2], 'false,true,false,true': [8.768, 250, 111], 'true,false,true': [8.312, 195, 107], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,true;function(B, G).;false;false', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,true;function(B, G).;false;false', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,true;function(B, G).;false;false', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;false;false', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;false;false', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;false;false', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;false;false', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;false;false', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #2: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #3: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #4: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #5: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #6: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #7: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #8: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #9: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #10: [('false,false', 0), ('true,false,false', 0), ('false,true,false,false', 0.5), ('false,true,true', 0.5343137254901961), ('true,false,true', 0.6456953642384106), ('false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16773797619540226;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1460683188657648;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1250953221598019;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.10552719680101035;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.08785181115459323;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.07232157573593731;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.05898584007307785;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.04774613917021104;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.03841335735279484;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.033821631884821866;  // std dev = 11,348, 569,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=208 */
Results
   AUC ROC   = 0.662049
   AUC PR    = 0.643905
   CLL	      = -0.64792
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 17.506 seconds
Total inference time: 0.842 seconds
AUC ROC: 0.662049


Best model AUC ROC so far: 0.666605


******************************************
Best model found
******************************************
Total revision time: 37.563
Best validation AUC ROC: 0.666605


Results
   AUC ROC   = 0.652567
   AUC PR    = 0.633533
   CLL	      = -0.661881
   Precision = 0.69153 at threshold = 0.5
   Recall    = 0.43321
   F1        = 0.532706


Total inference time: 2.599 seconds
AUC ROC: 0.652567
Dataset: twitter->yeast, Fold: 3, Type: transfer, Time: 02:16:10
{'Parameter Learning results': {'F1': 0.532706, 'Learning time': 18.448, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'CLL': -0.661881, 'Inference time': 2.682, 'Precision': [0.69153, 0.5]}, 'F1': 0.532706, 'Learning time': 37.563, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'Mapping results': {'Finding best mapping': 0.013212919235229492, 'Knowledge compiling time': 0.0712900161743164, 'Total time': 3.369051933288574, 'Generating mappings time': 0.04590153694152832, 'Possible mappings': 98, 'Generating paths time': 3.2386419773101807}, 'CLL': -0.661881, 'Inference time': 2.599, 'Precision': [0.69153, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8581489350995105;  // std dev = 7,15e-07, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), phenotype(A, E), enzyme(A, F) )
%   | then return 0.05217878584578103;  // std dev = 0,395, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then return 0.2676316937201976;  // std dev = 0,492, 464,000 (wgt'ed) examples reached here.  /* #neg=274 #pos=190 */
%   | | else if ( complex(B, I), complex(J, I), phenotype(J, K) )
%   | | | then return 0.25408802139392905;  // std dev = 0,489, 197,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=78 */
%   | | | else if ( location(B, L), function(A, M), function(B, M) )
%   | | | | then return 0.5887188832860378;  // std dev = 0,444, 193,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=141 */
%   | | | | else if ( location(A, N), phenotype(B, P), location(B, Q) )
%   | | | | | then return 0.12841920536978263;  // std dev = 0,444, 37,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=10 */
%   | | | | | else if ( enzyme(B, R), location(A, S) )
%   | | | | | | then return 0.06504548682365029;  // std dev = 0,405, 29,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=6 */
%   | | | | | | else if ( location(A, T), location(B, T) )
%   | | | | | | | then return 0.4046605630064898;  // std dev = 0,498, 86,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=47 */
%   | | | | | | | else return 0.2949305442949153;  // std dev = 0,496, 174,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=76 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.7194734122109554;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( location(B, D), location(A, D) )
%   | then if ( complex(A, E), location(F, D), enzyme(F, G) )
%   | | then if ( enzyme(A, G), phenotype(F, H), proteinclass(F, I) )
%   | | | then return 0.08854569911504048;  // std dev = 0,430, 57,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=14 */
%   | | | else if ( complex(B, J), phenotype(B, K), phenotype(A, K) )
%   | | | | then return 0.6133696783738156;  // std dev = 0,405, 19,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=15 */
%   | | | | else if ( complex(B, L) )
%   | | | | | then if ( proteinclass(B, M), proteinclass(F, N) )
%   | | | | | | then return 0.1405343796534292;  // std dev = 0,466, 22,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=7 */
%   | | | | | | else if ( complex(F, L), phenotype(A, P) )
%   | | | | | | | then return -0.052647438528388865;  // std dev = 0,331, 8,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=1 */
%   | | | | | | | else return 0.4363876491909093;  // std dev = 0,487, 57,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=35 */
%   | | | | | else return 0.2110527429186749;  // std dev = 0,488, 139,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=54 */
%   | | else return 0.4071825538206263;  // std dev = 0,480, 378,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=229 */
%   | else return 0.18227630149944055;  // std dev = 0,479, 567,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=206 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( location(B, C), function(A, D), function(B, D) )
%   then return 0.383465891904858;  // std dev = 0,438, 660,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=440 */
%   else if ( location(A, E), proteinclass(B, F), complex(B, G) )
%   | then return -0.07021136467871157;  // std dev = 0,355, 44,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=7 */
%   | else if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | then return 0.032902958850582247;  // std dev = 0,421, 187,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=44 */
%   | | else if ( phenotype(B, K), location(B, L), function(A, M) )
%   | | | then return 0.08423160444491462;  // std dev = 0,457, 117,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=35 */
%   | | | else if ( phenotype(B, N) )
%   | | | | then return 0.5404840287274342;  // std dev = 0,434, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | else if ( proteinclass(A, P), proteinclass(Q, P), phenotype(Q, R) )
%   | | | | | then return 0.38080819765089374;  // std dev = 0,485, 42,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=25 */
%   | | | | | else if ( enzyme(A, S), location(B, T), location(A, U) )
%   | | | | | | then return 0.3901335933283204;  // std dev = 0,479, 19,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=12 */
%   | | | | | | else if ( location(A, W), location(B, W), phenotype(A, X) )
%   | | | | | | | then return 0.4029296101087465;  // std dev = 0,466, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | | | | else return 0.16363771681663491;  // std dev = 0,484, 283,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=109 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.25962329145325896;  // std dev = 0,444, 803,000 (wgt'ed) examples reached here.  /* #neg=325 #pos=478 */
%   else if ( location(A, D) )
%   | then return 0.09840935642019628;  // std dev = 0,467, 493,000 (wgt'ed) examples reached here.  /* #neg=323 #pos=170 */
%   | else if ( location(B, E), function(A, F) )
%   | | then if ( complex(B, G), phenotype(B, H) )
%   | | | then return 0.03558991257864799;  // std dev = 0,443, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | else if ( phenotype(B, I), function(J, F), phenotype(J, I) )
%   | | | | then return 0.5514517188062099;  // std dev = 0,874, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | else if ( complex(B, K), function(L, F), complex(L, M) )
%   | | | | | then return 0.53916928284957;  // std dev = 0,862, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | else if ( function(B, F) )
%   | | | | | | then if ( phenotype(A, N) )
%   | | | | | | | then return 0.15600446626919373;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | | | | | | else return 0.28100446626919373;  // std dev = 0,484, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | | else return 0.11188593516515147;  // std dev = 0,476, 20,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=7 */
%   | | else return 0.43562094578764227;  // std dev = 0,456, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(A, D), location(B, E) )
%   then return 0.2757495988291392;  // std dev = 0,414, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   else if ( proteinclass(B, F), proteinclass(G, F), phenotype(G, H) )
%   | then return 0.016428490606647757;  // std dev = 0,441, 124,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | else if ( complex(B, I), complex(A, I) )
%   | | then return 0.3967157516639923;  // std dev = 0,039, 106,000 (wgt'ed) examples reached here.  /* #pos=106 */
%   | | else if ( complex(A, J), complex(K, J), phenotype(K, L) )
%   | | | then return 0.09839887978270094;  // std dev = 0,463, 340,000 (wgt'ed) examples reached here.  /* #neg=210 #pos=130 */
%   | | | else if ( complex(B, M), complex(N, M), phenotype(N, P) )
%   | | | | then if ( enzyme(B, Q), enzyme(R, Q), proteinclass(R, S) )
%   | | | | | then return -0.0941977291126005;  // std dev = 0,401, 15,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=3 */
%   | | | | | else if ( phenotype(B, P), function(A, T), function(B, T) )
%   | | | | | | then return 0.2164350051182739;  // std dev = 0,484, 60,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=34 */
%   | | | | | | else return 0.03744122619731331;  // std dev = 0,459, 103,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=34 */
%   | | | | else if ( phenotype(A, U), location(B, W) )
%   | | | | | then return 0.10046071484113865;  // std dev = 0,471, 86,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=40 */
%   | | | | | else return 0.2071034650788412;  // std dev = 0,473, 487,000 (wgt'ed) examples reached here.  /* #neg=223 #pos=264 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.3136785411861174;  // std dev = 0,253, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), enzyme(A, E), location(B, F) )
%   | then return -0.01431379463997233;  // std dev = 0,432, 95,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=26 */
%   | else if ( proteinclass(B, G), proteinclass(H, G), phenotype(H, I) )
%   | | then return 0.0271053660540626;  // std dev = 0,450, 131,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=45 */
%   | | else if ( enzyme(B, J), phenotype(B, K), complex(B, L) )
%   | | | then return -0.09371500311312994;  // std dev = 0,395, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else if ( location(B, M), function(B, N), function(A, N) )
%   | | | | then return 0.2229282054389606;  // std dev = 0,459, 410,000 (wgt'ed) examples reached here.  /* #neg=144 #pos=266 */
%   | | | | else if ( phenotype(B, P), location(B, Q), location(A, R) )
%   | | | | | then return -0.014760068791916854;  // std dev = 0,444, 96,000 (wgt'ed) examples reached here.  /* #neg=70 #pos=26 */
%   | | | | | else if ( proteinclass(A, S), proteinclass(T, S), phenotype(T, U) )
%   | | | | | | then return 0.19653645943270523;  // std dev = 0,469, 49,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=25 */
%   | | | | | | else if ( location(A, W), function(B, X), function(A, X) )
%   | | | | | | | then return 0.1908442345247922;  // std dev = 0,489, 31,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=15 */
%   | | | | | | | else return 0.05900980544349582;  // std dev = 0,472, 409,000 (wgt'ed) examples reached here.  /* #neg=256 #pos=153 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(B, D), function(A, D) )
%   then return 0.18612137759490616;  // std dev = 0,403, 315,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=218 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return -0.026974904720516477;  // std dev = 0,428, 157,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | else if ( complex(A, G), phenotype(A, H), enzyme(A, I) )
%   | | then return -0.08540749103111439;  // std dev = 0,341, 50,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=9 */
%   | | else if ( complex(A, J), enzyme(B, K), proteinclass(A, L) )
%   | | | then return 0.39914477228452355;  // std dev = 0,320, 16,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=14 */
%   | | | else if ( complex(A, M), complex(B, M) )
%   | | | | then return 0.2458733690854806;  // std dev = 0,038, 36,000 (wgt'ed) examples reached here.  /* #pos=36 */
%   | | | | else if ( complex(A, N), location(A, P) )
%   | | | | | then if ( complex(B, Q) )
%   | | | | | | then return 0.06035320615202123;  // std dev = 0,467, 63,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=27 */
%   | | | | | | else if ( enzyme(B, R), location(B, S) )
%   | | | | | | | then return 0.13620729106518123;  // std dev = 0,472, 30,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=14 */
%   | | | | | | | else return 0.0056646997938054056;  // std dev = 0,468, 208,000 (wgt'ed) examples reached here.  /* #neg=139 #pos=69 */
%   | | | | | else return 0.1124435465070893;  // std dev = 0,468, 497,000 (wgt'ed) examples reached here.  /* #neg=237 #pos=260 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(B, D), function(A, D) )
%   then return 0.1445793407064238;  // std dev = 0,403, 315,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=218 */
%   else if ( complex(A, E), complex(B, E) )
%   | then return 0.20966139743152581;  // std dev = 0,220, 44,000 (wgt'ed) examples reached here.  /* #pos=44 */
%   | else if ( phenotype(B, F), location(A, G), proteinclass(B, H) )
%   | | then return -0.11991055046668725;  // std dev = 0,350, 35,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=5 */
%   | | else if ( complex(A, I), complex(J, I), phenotype(J, K) )
%   | | | then return -0.003796674509942491;  // std dev = 0,441, 285,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=87 */
%   | | | else if ( phenotype(B, L), phenotype(M, L), complex(M, N) )
%   | | | | then return 0.016393220577361974;  // std dev = 0,448, 112,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=33 */
%   | | | | else if ( complex(B, P), location(A, Q) )
%   | | | | | then return 0.03066595741534315;  // std dev = 0,467, 104,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=45 */
%   | | | | | else if ( function(A, R), function(B, R) )
%   | | | | | | then return 0.1639567785353059;  // std dev = 0,445, 198,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=135 */
%   | | | | | | else if ( proteinclass(A, S), proteinclass(T, S), phenotype(T, U) )
%   | | | | | | | then return 0.1928713076720223;  // std dev = 0,472, 33,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=20 */
%   | | | | | | | else return 0.030448081202041444;  // std dev = 0,483, 246,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=99 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(B, C), complex(A, D), complex(B, D) )
%   then return 0.19517025898328139;  // std dev = 0,212, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( proteinclass(B, E), location(A, F), phenotype(B, G) )
%   | then return -0.017547351571371828;  // std dev = 0,440, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | else if ( enzyme(A, H), phenotype(A, I) )
%   | | then return -0.05658906995876711;  // std dev = 0,405, 86,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=23 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then return 0.09599124958545091;  // std dev = 0,440, 608,000 (wgt'ed) examples reached here.  /* #neg=249 #pos=359 */
%   | | | else if ( enzyme(A, K), complex(A, L) )
%   | | | | then if ( location(B, M), proteinclass(A, N) )
%   | | | | | then if ( phenotype(B, P), location(Q, M), proteinclass(Q, N) )
%   | | | | | | then return 0.4834736811728571;  // std dev = 0,824, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return -0.20865167186910125;  // std dev = 0,309, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | | | else return 0.25370921382421174;  // std dev = 0,460, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | else if ( location(A, R) )
%   | | | | | then return 2.4076633203094604E-4;  // std dev = 0,466, 409,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=142 */
%   | | | | | else return 0.08493038956263291;  // std dev = 0,470, 76,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=38 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(D, C), phenotype(D, E) )
%   then return 0.003911593392508597;  // std dev = 0,424, 161,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=65 */
%   else if ( complex(B, F), complex(A, F) )
%   | then return 0.16101933001484753;  // std dev = 0,108, 109,000 (wgt'ed) examples reached here.  /* #pos=109 */
%   | else if ( enzyme(A, G), phenotype(A, H) )
%   | | then return -0.0477066073390217;  // std dev = 0,412, 82,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=21 */
%   | | else if ( function(A, I), function(B, I) )
%   | | | then return 0.0950437639835051;  // std dev = 0,453, 465,000 (wgt'ed) examples reached here.  /* #neg=172 #pos=293 */
%   | | | else if ( enzyme(A, J), complex(B, K) )
%   | | | | then return 0.14483916844440115;  // std dev = 0,462, 16,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=8 */
%   | | | | else if ( complex(B, L), complex(M, L), phenotype(M, N) )
%   | | | | | then return -0.05444869187201838;  // std dev = 0,429, 91,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=22 */
%   | | | | | else if ( enzyme(B, P), location(A, Q) )
%   | | | | | | then return -0.05741553758224176;  // std dev = 0,442, 58,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=17 */
%   | | | | | | else if ( location(B, R), proteinclass(A, S), complex(A, T) )
%   | | | | | | | then return -0.12268543635112254;  // std dev = 0,408, 22,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=5 */
%   | | | | | | | else return 0.03127105410498319;  // std dev = 0,476, 368,000 (wgt'ed) examples reached here.  /* #neg=222 #pos=146 */
Results
   AUC ROC   = 0.653748
   AUC PR    = 0.671072
   CLL	      = -0.660422
   Precision = 0.665526 at threshold = 0.5
   Recall    = 0.410771
   F1        = 0.507999


Total learning time: 57.547 seconds
Total inference time: 6.875 seconds
AUC ROC: 0.653748


Dataset: twitter->yeast, Fold: 3, Type: scratch, Time: 02:17:14
{'F1': 0.507999, 'Learning time': 57.547, 'Recall': 0.410771, 'AUC PR': 0.671072, 'AUC ROC': 0.653748, 'CLL': -0.660422, 'Inference time': 6.875, 'Precision': [0.665526, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '0;false,false,false;enzyme(A, K).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '1;false,false,false;enzyme(A, K).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '2;false,false,false;enzyme(A, K).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;enzyme(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;enzyme(A, K).;false;false', '3;false,false,true,false;enzyme(A, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;false', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22400259363609637;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.3609484871711761;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.19449056448208704;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.31110728186563763;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.16508655516703946;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.25825886676574666;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40125234911517477;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.22048316970840084;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.05259950478597549;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.18010688948105735;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.29933501303370724;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.13728663146700865;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.11459013452490119;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30597716653683;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.17148051633182343;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.04506156572157872;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.14341361761511429;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.23349880133935735;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.11218365916482889;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09019781906270513;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2405132231023213;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.13115060373003595;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03839689936532517;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.11226070841535328;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.17808031301814733;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.09036480862064877;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07026957412906448;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.19478558503680857;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.09932141518842214;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03256600389502004;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08681077500092178;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.13426442490613463;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07196774713737968;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05433619026124952;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16176939808047838;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.07481634168125942;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.02751039248460187;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06656852882667326;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10078118477892072;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.056814987510623235;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.041790169381226795;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.13711329382195048;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.05620720508681774;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.023160528370293892;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05075578496808014;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.07559543456373714;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.044553334757396805;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03201701803605345;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then if ( enzyme(A, C) )
%   | then return 0.11814007732365525;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.058614112072662296;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.0421763851458421;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   else if ( enzyme(B, F) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.019442152765119698;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.03855005033302373;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | else if ( enzyme(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.03883758073739689;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | | | else return 0.03476140793128398;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | else return 0.04070111819599059;  // std dev = 14,692, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
Results
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total learning time: 196.59199999999998 seconds
Total inference time: 0.712 seconds
AUC ROC: 0.602959


Results in test set
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total inference time: 0.712 seconds
AUC ROC: 0.602959
Structure after Parameter Learning
[['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [2.11e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [1.05e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.0, 0, 3], 'false,false,false': [14.692, 444, 449], 'true,true': [0.981, 1, 25], 'false,false,true,true': [4.889, 45, 51], 'false,true,false,false': [5.514, 68, 55], 'false,true,false,true': [2.16, 21, 6], 'false,false,true,false': [4.362, 52, 30], 'true,false,true': [2.415, 10, 14], 'true,false,false': [5.734, 62, 70]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;false', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;false', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;false', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;enzyme(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;true;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;enzyme(A, K).;false;false', '3;false,false,true,false;enzyme(A, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;true;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;true;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;true;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;true;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;true;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;true', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #5: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #6: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #7: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #8: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #9: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #10: [('false,false,false', 0.5027995520716685), ('true,false,false', 0.5303030303030303), ('false,false,true,true', 0.53125), ('false,true,false,false', 0.5528455284552846), ('true,false,true', 0.5833333333333334), ('false,false,true,false', 0.6341463414634146), ('false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.34943098638155884;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.3013680415683762;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.25064699225158504;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.402934545843775;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.44018013940537015;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.067538629971408;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.3168468060720372;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.15715556023594265;  // std dev = 0,486, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.3053070428278925;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07650591294577223;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.12056216431909476;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074904058867061;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.33922959079921866;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.052914460751003554;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.24538571851867014;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.12683568295855718;  // std dev = 0,486, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.2387645849383014;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06052457336203083;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09515705280530191;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24200412148827358;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.6638521822669119;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.03916662223344261;  // std dev = 0,471, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.18518587892990457;  // std dev = 0,477, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.10080669905318468;  // std dev = 0,485, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.18235890236051971;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.04753806782487307;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07428100301556732;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.1962948133020858;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.060731125120387655;  // std dev = 0,420, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.1287767440651973;  // std dev = 0,484, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.008629963352575851;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.09847663222465008;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.13757972688534514;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.037134852914370416;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05752073447302714;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.1633021727450617;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.006704533688337604;  // std dev = 0,468, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.12579045256024726;  // std dev = 0,478, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.007101192191291276;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07579273125026893;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10328986046889431;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.02888907432121915;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.044285137432734614;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13866499333849036;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.020945169206986042;  // std dev = 0,475, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.09563028125341423;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.005848581709143029;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05793317236306242;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.077475019475898;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.022404602622918785;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03395370446261172;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05505089793462002;  // std dev = 0,449, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.0374033542384023;  // std dev = 0,479, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.028931887783263152;  // std dev = 0,491, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.44153168102814455;  // std dev = 0,147, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.25683315743970914;  // std dev = 0,390, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then if ( location(B, K), complex(B, N), complex(L, P) )
%   | | | | | | then return -0.12075995991518275;  // std dev = 0,493, 89,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=37 */
%   | | | | | | else return 0.030671570508450877;  // std dev = 0,495, 551,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=264 */
%   | | | | | else if ( complex(B, Q), complex(R, Q), proteinclass(R, S) )
%   | | | | | | then return -0.38395511147887046;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.1710760887044847;  // std dev = 0,495, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.68352
   AUC PR    = 0.725597
   CLL	      = -0.643646
   Precision = 0.669725 at threshold = 0.5
   Recall    = 0.521429
   F1        = 0.586345


Total learning time: 30.151 seconds
Total inference time: 1.015 seconds
AUC ROC: 0.68352


Best model AUC ROC so far: 0.68352


Refining iteration 2
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,false;enzyme(B, F).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, G), location(B, G).;true;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,false,true,true;phenotype(B, H).;true;false', '3;false,false,false,false;enzyme(A, K).;false;false', '3;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, K), location(B, K).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;true;false', '5;false,false,false,false;enzyme(A, L).;false;false', '5;false,false,true,true,true;complex(B, H).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, G).;false;true', '9;false,false,false,false,false,false;complex(B, Q), complex(R, Q), proteinclass(R, S).;false;false', '9;false,false,false,false,false;location(A, K), location(L, K), enzyme(L, M).;false;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, H), complex(I, H), enzyme(I, J).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true,false', 0.5208711433756806), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.5569620253164557), ('false,true', 0.5816993464052288), ('false,false,false,false,false,true,true', 0.5842696629213483), ('true', 0.5989010989010989), ('false,false,false,false,true', 0.8026315789473685), ('false,false,false,true', 0.978021978021978)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.26481560176617963;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), location(B, J), location(A, J) )
%   | | | then return 0.5231235543888494;  // std dev = 0,472, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | then return 0.06802547830938892;  // std dev = 0,407, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | | else if ( phenotype(A, N), location(A, P), location(B, P) )
%   | | | | | then return 0.42957750652808296;  // std dev = 0,495, 140,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | | | | else return 0.30877730134726444;  // std dev = 0,498, 557,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=251 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.22943025431536862;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.7618691619730594;  // std dev = 0,146, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return 0.022262004750890147;  // std dev = 0,388, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | | else if ( complex(B, M), complex(N, M), phenotype(N, P) )
%   | | | | | then return 0.2155798852468727;  // std dev = 0,493, 166,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=69 */
%   | | | | | else return 0.2960685634039361;  // std dev = 0,499, 623,000 (wgt'ed) examples reached here.  /* #neg=321 #pos=302 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.009024025432460236;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.23395627475495379;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), complex(A, J) )
%   | | | then return 0.606606679954101;  // std dev = 0,146, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | then return 0.01925254956469816;  // std dev = 0,388, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | | else return 0.23233898151260782;  // std dev = 0,498, 789,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=371 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.559953278903063;  // std dev = 0,329, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.014423320163096378;  // std dev = 0,474, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else if ( proteinclass(B, J) )
%   | | | | then return -0.04017317499560905;  // std dev = 0,447, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.5502331606773416;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( phenotype(A, L), function(A, M), function(B, M) )
%   | | | | | | then return 0.5078568985078031;  // std dev = 0,386, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | else if ( complex(B, N), phenotype(B, P) )
%   | | | | | | | then return 0.28967508032598477;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | | else return 0.06004545069635534;  // std dev = 0,483, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0.19507382916502844;  // std dev = 0,481, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1731353081824156;  // std dev = 0,471, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.39700217762868784;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.02436066819472547;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.2736688442953553;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.1208065031566369;  // std dev = 5,983, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.21922668984370608;  // std dev = 9,727, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07675448710073948;  // std dev = 4,233, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.10800830131933374;  // std dev = 10,239, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1327071073351717;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.64141871720467;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.03169449478851011;  // std dev = 3,040, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.19091447296101724;  // std dev = 4,507, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.0955592103834063;  // std dev = 5,981, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.1691343308679722;  // std dev = 9,721, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.061009304743379594;  // std dev = 4,230, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.08494132053081994;  // std dev = 10,234, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10084130820728039;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.08090606272841705;  // std dev = 1,953, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.13725176915605314;  // std dev = 5,126, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.06986042026112922;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.10649534847040805;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.12934758184611697;  // std dev = 9,723, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.04816490247695352;  // std dev = 4,228, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06618484172994571;  // std dev = 10,230, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07628505691657704;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return -0.01246435379184191;  // std dev = 3,551, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.14541131899659104;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.05562787364388627;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08218583770301251;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.09857170735478564;  // std dev = 9,729, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.037828313279372694;  // std dev = 4,226, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05122559137069781;  // std dev = 10,228, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05759020434009337;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.01835411174622709;  // std dev = 3,188, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.0974058102824991;  // std dev = 4,433, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.04460523015420669;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06293510765372345;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.07506796751829099;  // std dev = 9,735, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.02959376270421661;  // std dev = 4,225, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03945681238147616;  // std dev = 10,226, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05349883478154204;  // std dev = 5,989, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03521577198067071;  // std dev = 5,939, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03448170952859968;  // std dev = 6,293, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.25130651509818586;  // std dev = 1,399, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.09442942659283796;  // std dev = 3,478, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then return 0.02081977653939883;  // std dev = 12,572, 640,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=301 */
%   | | | | | else if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return -0.37791366027467005;  // std dev = 1,05e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.16154598933067438;  // std dev = 4,407, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.708776
   AUC PR    = 0.747661
   CLL	      = -0.619872
   Precision = 0.77381 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.580357


Total learning time: 152.167 seconds
Total inference time: 0.71 seconds
AUC ROC: 0.708776


Best model AUC ROC so far: 0.708776


Refining iteration 3
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, G).;false;true', '0;false,true;enzyme(B, F).;false;false', '0;false,false,false,false,false;phenotype(A, N), location(A, P), location(B, P).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '0;false,false,false,false;complex(A, K), complex(L, K), enzyme(L, M).;false;true', '0;false,false,false;complex(B, I), location(B, J), location(A, J).;false;true', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false,false;enzyme(B, G).;true;true', '1;false,true;enzyme(B, F).;false;false', '1;false,false,true;location(A, H), location(B, H).;false;false', '1;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '1;false,false,false,false;complex(A, J), complex(K, J), enzyme(K, L).;false;false', '1;false,false,false;complex(B, I), complex(A, I).;false;true', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;true', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;false;true', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,true,false;enzyme(A, I).;false;false', '2;false,false,false;complex(B, J), complex(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,true;complex(B, F), phenotype(A, G), proteinclass(A, H).;false;true', '3;false,true,false;proteinclass(A, I).;false;true', '3;false,true,false,false;proteinclass(B, J).;false;true', '3;false,true,false,false,false;enzyme(B, K).;false;true', '3;false,true,false,false,false,false,false;complex(B, N), phenotype(B, P).;false;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,true,false,false,false,false;phenotype(A, L), function(A, M), function(B, M).;false;true', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, K), location(B, K).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;true;false', '5;false,false,false,false;enzyme(A, L).;false;false', '5;false,false,true,true,true;complex(B, H).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, G).;false;true', '9;false,false,false,false,false,false;complex(B, N), complex(P, N), proteinclass(P, Q).;false;false', '9;false,false,false,false,false;location(A, K), location(L, K), enzyme(L, M).;true;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, H), complex(I, H), enzyme(I, J).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,false,false,false,false', 0.5493716337522442), ('false,false,false,false,false,true', 0.5714285714285714), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.6649746192893401), ('false,false,false,false,true', 0.7901234567901234), ('true', 0.9655172413793104)]
Tree #2: [('false,false,false,false,false,false', 0.5152487961476726), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,false,false,false,true', 0.5843373493975904), ('false,false,true,false', 0.5933333333333334), ('false,false,false,false,true', 0.8172043010752689), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #3: [('false,false,false,false,false', 0.5297845373891001), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('false,false,false,false,true', 0.8172043010752689), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #4: [('false,false', 0.5147175815433572), ('false,true,false,false,false,false,false,true', 0.6), ('false,true,false,false,false,false,false,false', 0.6296296296296297), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.7272727272727273), ('false,true,false,false,false,false,true', 0.8181818181818182), ('false,true,true', 0.875), ('false,true,false,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true', 0.5296875), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.5569620253164557), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,false,true', 0.8026315789473685), ('false,false,false,true', 0.978021978021978)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.32268794219170716;  // std dev = 8,375, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else if ( complex(B, H), location(B, I), location(A, I) )
%   | | | then return 0.5231235543888494;  // std dev = 6,625, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return 0.06802547830938892;  // std dev = 3,665, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | | else if ( phenotype(A, M), location(A, N), location(B, N) )
%   | | | | | then return 0.42957750652808296;  // std dev = 5,855, 140,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | | | | else return 0.30877730134726444;  // std dev = 11,743, 557,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=251 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3444692698855149;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.22083290624915236;  // std dev = 6,016, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.7618691619730594;  // std dev = 1,404, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return 0.022262004750890147;  // std dev = 3,745, 93,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=17 */
%   | | | | else return 0.27913431679547884;  // std dev = 14,013, 789,000 (wgt'ed) examples reached here.  /* #neg=418 #pos=371 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.28666617420493085;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 6.416401593094596E-4;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22557388948180263;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), complex(A, J) )
%   | | | then return 0.606606679954101;  // std dev = 1,409, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else return 0.20983744057342762;  // std dev = 14,634, 882,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=388 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.559953278903063;  // std dev = 1,612, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.014423320163096378;  // std dev = 2,723, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else if ( proteinclass(B, J) )
%   | | | | then return -0.04017317499560905;  // std dev = 1,483, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.5502331606773416;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( phenotype(A, L), function(A, M), function(B, M) )
%   | | | | | | then return 0.5078568985078031;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | else if ( complex(B, N), phenotype(B, P) )
%   | | | | | | | then return 0.28967508032598477;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | | else return 0.06004545069635534;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0.19591789850097116;  // std dev = 0,482, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1731353081824156;  // std dev = 0,471, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.40706876118788804;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.034427251753926066;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.2837354278545539;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.11222312673909234;  // std dev = 5,982, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.2195172289312264;  // std dev = 9,762, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.0732650493401021;  // std dev = 4,245, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.11002592499712692;  // std dev = 10,271, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1327071073351717;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.6492698873491796;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.023539163090443106;  // std dev = 3,040, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.19905430801505947;  // std dev = 4,507, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.08842062306436604;  // std dev = 5,981, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.16927198600218726;  // std dev = 9,757, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.05803929056792295;  // std dev = 4,242, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.08651956748586039;  // std dev = 10,267, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10084130820728039;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.07464848491269668;  // std dev = 1,953, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.14361796320937759;  // std dev = 5,126, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.07526843858508779;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.10062818150367465;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.12936290267264303;  // std dev = 9,760, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.04567472580710054;  // std dev = 4,240, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06738312752703858;  // std dev = 10,264, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07628505691657704;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return -0.0076906511876136735;  // std dev = 3,551, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.15033752334294764;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.059781462132676835;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07750373141386063;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.09850306915247643;  // std dev = 9,766, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.035764402985767774;  // std dev = 4,239, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05211445717883521;  // std dev = 10,262, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05759020434009337;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.014717528810653146;  // std dev = 3,188, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.10108867057554954;  // std dev = 4,433, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.047836283284640235;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.059269573980868254;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.07494903076128819;  // std dev = 9,773, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.027898306175887667;  // std dev = 4,237, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.04010388326554609;  // std dev = 10,260, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.055505213801862935;  // std dev = 5,988, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03248957671580742;  // std dev = 5,939, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03384452192791047;  // std dev = 6,301, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.25108810760812283;  // std dev = 1,399, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.1353296970380804;  // std dev = 3,480, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return -0.16296457132966988;  // std dev = 0,457, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | | | | else return 0.046724882783528085;  // std dev = 0,497, 575,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=281 */
%   | | | | | else if ( complex(B, R), complex(S, R), proteinclass(S, T) )
%   | | | | | | then return -0.38931652422088636;  // std dev = 1,49e-08, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.16660711262230338;  // std dev = 4,408, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.70977
   AUC PR    = 0.746819
   CLL	      = -0.621924
   Precision = 0.782051 at threshold = 0.5
   Recall    = 0.435714
   F1        = 0.559633


Total learning time: 192.264 seconds
Total inference time: 0.984 seconds
AUC ROC: 0.70977


Best model AUC ROC so far: 0.70977


Refining iteration 4
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, G).;false;true', '0;false,false,false,false,false;phenotype(A, M), location(A, N), location(B, N).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '0;false,false,false,false;complex(A, J), complex(K, J), enzyme(K, L).;false;true', '0;false,false,false;complex(B, H), location(B, I), location(A, I).;false;true', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false,false;enzyme(B, G).;true;true', '1;false,true;enzyme(B, F).;false;false', '1;false,false,true;location(A, H), location(B, H).;false;false', '1;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '1;false,false,false;complex(B, I), complex(A, I).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;false', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;true;true', '2;false,false,true,false,false;complex(B, J), complex(A, J).;false;false', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,true,false;enzyme(A, I).;false;true', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,true;complex(B, F), phenotype(A, G), proteinclass(A, H).;false;true', '3;false,true,false;proteinclass(A, I).;false;true', '3;false,true,false,false;proteinclass(B, J).;false;true', '3;false,true,false,false,false;enzyme(B, K).;false;true', '3;false,true,false,false,false,false,false;complex(B, N), phenotype(B, P).;false;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,true,false,false,false,false;phenotype(A, L), function(A, M), function(B, M).;false;true', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, K), location(B, K).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;true;false', '5;false,false,false,false;enzyme(A, L).;false;false', '5;false,false,true,true,true;complex(B, H).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, G).;false;true', '9;false,false,false,false,false,false;complex(B, R), complex(S, R), proteinclass(S, T).;false;false', '9;false,false,false,false,false;location(A, K), location(L, K), enzyme(L, M).;false;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, H), complex(I, H), enzyme(I, J).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0.53125), ('false,false,true', 0.5354609929078015), ('false,false,false,false,false,false', 0.5493716337522442), ('false,false,false,false,false,true', 0.5714285714285714), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6649746192893401), ('false,false,false,false,true', 0.7901234567901234), ('true', 0.9655172413793104)]
Tree #2: [('false,false,false,false,false', 0.5297845373891001), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('false,false,false,false,true', 0.8172043010752689), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #3: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,true', 0.5528455284552846), ('false,false,true,false,false,false', 0.5600907029478458), ('false,true,true', 0.5833333333333334), ('true', 0.9655172413793104), ('false,false,true,false,false,true', 0.978494623655914)]
Tree #4: [('false,false', 0.5147175815433572), ('false,true,false,false,false,false,false,true', 0.6), ('false,true,false,false,false,false,false,false', 0.6296296296296297), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.7272727272727273), ('false,true,false,false,false,false,true', 0.8181818181818182), ('false,true,true', 0.875), ('false,true,false,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true,false', 0.5113043478260869), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.5569620253164557), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,false,false,true,true', 0.6923076923076923), ('false,false,false,false,true', 0.8026315789473685), ('false,false,false,true', 0.978021978021978)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.39981560176618003;  // std dev = 5,458, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.32268794219170716;  // std dev = 8,375, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else if ( complex(B, G), location(B, H), location(A, H) )
%   | | | then return 0.5231235543888494;  // std dev = 6,625, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( complex(A, I), complex(J, I), enzyme(J, K) )
%   | | | | then return 0.06802547830938892;  // std dev = 3,665, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | | else if ( phenotype(A, L), location(A, M), location(B, M) )
%   | | | | | then return 0.42957750652808296;  // std dev = 5,855, 140,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | | | | else return 0.30877730134726444;  // std dev = 11,743, 557,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=251 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.38554648147625703;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33346314814292444;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3444692698855149;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.22083290624915236;  // std dev = 6,016, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.7618691619730594;  // std dev = 1,404, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else return 0.2520491410356761;  // std dev = 14,692, 882,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=388 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.31726014886400056;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27522288836264863;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then if ( phenotype(B, I) )
%   | | | | then return 0.15987191583172514;  // std dev = 0,491, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.3830298105685673;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 6.416401593094596E-4;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else if ( complex(B, K), complex(A, K) )
%   | | | | | then return 0.7784194179370872;  // std dev = 4,21e-08, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | | | else return 0.18711507011100023;  // std dev = 5,272, 115,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=47 */
%   | | else return 0.2484067599945834;  // std dev = 15,194, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.5597284949943581;  // std dev = 1,614, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.01525998733429631;  // std dev = 2,719, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else if ( proteinclass(B, J) )
%   | | | | then return -0.0409876539487056;  // std dev = 1,481, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.5564950222569452;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( phenotype(A, L), function(A, M), function(B, M) )
%   | | | | | | then return 0.5063347855014362;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | else if ( complex(B, N), phenotype(B, P) )
%   | | | | | | | then return 0.2881529673196182;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | | else return 0.05852333768998839;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0.1975707186148924;  // std dev = 0,486, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17316363425805995;  // std dev = 0,471, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.43468789599367685;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.06204638655971422;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.2613223222070873;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.11126453345990775;  // std dev = 5,892, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.2312400150836842;  // std dev = 9,993, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06308996094640144;  // std dev = 4,301, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.10296695038841018;  // std dev = 10,311, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1327097020633365;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.6711417957424617;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.02514229264320002;  // std dev = 3,020, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.19736593253433526;  // std dev = 4,467, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.08773564615377465;  // std dev = 5,889, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.17726636059793843;  // std dev = 9,984, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.04964217025346987;  // std dev = 4,300, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.08066093798944783;  // std dev = 10,309, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10082751733439663;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.05237745051802621;  // std dev = 1,950, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.13881438868362445;  // std dev = 5,104, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.07527037173005582;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.10006214655094156;  // std dev = 5,413, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.13443708233755094;  // std dev = 9,983, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.03883941418707811;  // std dev = 4,299, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06262713868949542;  // std dev = 10,308, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07626241082885452;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.014320598750738147;  // std dev = 3,552, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.13311653424902556;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.059782943618973974;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07717936522006381;  // std dev = 5,412, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10152044510598855;  // std dev = 9,985, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.030257265215495807;  // std dev = 4,298, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.04831369856467692;  // std dev = 10,307, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05756389632973746;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.014638846484720802;  // std dev = 3,187, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.10090529277325591;  // std dev = 4,412, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.047837433579432834;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05911528957628637;  // std dev = 5,411, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.07660289638609852;  // std dev = 9,989, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.023495228411898196;  // std dev = 4,297, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.037099895367948436;  // std dev = 10,306, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05635899330975861;  // std dev = 5,971, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03245538552833715;  // std dev = 5,843, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03137472867085447;  // std dev = 6,342, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.3205526302207886;  // std dev = 1,399, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.19672574882249738;  // std dev = 3,480, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then return 0.021417637702010335;  // std dev = 12,591, 640,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=301 */
%   | | | | | else if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return -0.38662353097508534;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.1691315074673525;  // std dev = 4,407, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.710459
   AUC PR    = 0.752673
   CLL	      = -0.625821
   Precision = 0.776471 at threshold = 0.5
   Recall    = 0.471429
   F1        = 0.586667


Total learning time: 150.764 seconds
Total inference time: 0.688 seconds
AUC ROC: 0.710459


Best model AUC ROC so far: 0.710459


Refining iteration 5
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, F).;true;true', '0;false,false,false;complex(B, G), location(B, H), location(A, H).;false;true', '0;false,false,false,false,false;phenotype(A, L), location(A, M), location(B, M).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '0;false,false,false,false;complex(A, I), complex(J, I), enzyme(J, K).;false;true', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false,false;enzyme(B, G).;false;true', '1;false,true;enzyme(B, F).;false;false', '1;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '1;false,false,false;complex(B, I), complex(A, I).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;false', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;true;true', '2;false,false,true,false,true;complex(B, K), complex(A, K).;false;false', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,true,true;phenotype(B, I).;false;false', '2;false,false,true,false;enzyme(A, J).;true;true', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,true;complex(B, F), phenotype(A, G), proteinclass(A, H).;false;true', '3;false,true,false;proteinclass(A, I).;false;true', '3;false,true,false,false;proteinclass(B, J).;false;true', '3;false,true,false,false,false;enzyme(B, K).;false;true', '3;false,true,false,false,false,false,false;complex(B, N), phenotype(B, P).;false;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,true,false,false,false,false;phenotype(A, L), function(A, M), function(B, M).;false;true', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, K), location(B, K).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;true;false', '5;false,false,false,false;enzyme(A, L).;false;false', '5;false,false,true,true,true;complex(B, H).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, G).;false;true', '9;false,false,false,false,false,false;complex(B, N), complex(P, N), proteinclass(P, Q).;false;false', '9;false,false,false,false,false;location(A, K), location(L, K), enzyme(L, M).;true;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, H), complex(I, H), enzyme(I, J).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true', 0.5354609929078015), ('false,true', 0.5416666666666666), ('false,false,false,false,false,false', 0.5493716337522442), ('false,false,false,false,false,true', 0.5714285714285714), ('false,false,false,true', 0.6649746192893401), ('false,false,false,false,true', 0.7901234567901234), ('true', 0.9655172413793104)]
Tree #2: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,false,false', 0.5600907029478458), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #3: [('false,false,true,false,false', 0.5087179487179487), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true,false', 0.591304347826087), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('true', 0.9655172413793104)]
Tree #4: [('false,false', 0.5147175815433572), ('false,true,false,false,false,false,false,true', 0.6), ('false,true,false,false,false,false,false,false', 0.6296296296296297), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.7272727272727273), ('false,true,false,false,false,false,true', 0.8181818181818182), ('false,true,true', 0.875), ('false,true,false,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true', 0.5296875), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.5569620253164557), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,false,true', 0.8026315789473685), ('false,false,false,true', 0.978021978021978)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.39981560176618003;  // std dev = 5,458, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( phenotype(B, G) )
%   | | | then return 0.15566959625653568;  // std dev = 0,457, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else if ( enzyme(A, H), location(A, I) )
%   | | | | then return 0.088918165868743;  // std dev = 0,421, 13,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=3 */
%   | | | | else return 0.47977055672113167;  // std dev = 0,485, 148,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=92 */
%   | | else if ( complex(B, J), location(B, K), location(A, K) )
%   | | | then return 0.5231235543888494;  // std dev = 6,625, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( complex(A, L), complex(M, L), enzyme(M, N) )
%   | | | | then return 0.06802547830938892;  // std dev = 3,665, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | | else if ( phenotype(A, P), location(A, Q), location(B, Q) )
%   | | | | | then return 0.42957750652808296;  // std dev = 5,855, 140,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=80 */
%   | | | | | else return 0.30877730134726444;  // std dev = 11,743, 557,000 (wgt'ed) examples reached here.  /* #neg=306 #pos=251 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.38554648147625703;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33346314814292444;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then return 0.27740481614053053;  // std dev = 8,246, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else if ( complex(B, H), complex(A, H) )
%   | | | then return 0.7618691619730594;  // std dev = 1,404, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else return 0.2520491410356761;  // std dev = 14,692, 882,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=388 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.31726014886400056;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27522288836264863;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then if ( phenotype(B, I) )
%   | | | | then return 0.20039175376646692;  // std dev = 3,704, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.3660613186486062;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.019945991594375517;  // std dev = 0,413, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else if ( phenotype(B, K) )
%   | | | | | then return 0.008421443375104;  // std dev = 0,408, 52,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=11 */
%   | | | | | else return 0.3591129618410945;  // std dev = 0,485, 71,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=44 */
%   | | else return 0.2484067599945834;  // std dev = 15,194, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.5597284949943581;  // std dev = 1,614, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.01525998733429631;  // std dev = 2,719, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else if ( proteinclass(B, J) )
%   | | | | then return -0.0409876539487056;  // std dev = 1,481, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | else if ( enzyme(B, K) )
%   | | | | | then return 0.5564950222569452;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( phenotype(A, L), function(A, M), function(B, M) )
%   | | | | | | then return 0.5063347855014362;  // std dev = 1,279, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | else if ( complex(B, N), phenotype(B, P) )
%   | | | | | | | then return 0.2881529673196182;  // std dev = 1,095, 5,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=3 */
%   | | | | | | | else return 0.05852333768998839;  // std dev = 2,509, 27,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=10 */
%   | else return 0.19703278218610715;  // std dev = 0,485, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17316363425805995;  // std dev = 0,471, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.47502003563036477;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.10237852619640278;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.24435090712786794;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.10072944253714738;  // std dev = 5,709, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.23136224026857144;  // std dev = 9,993, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06320322967120343;  // std dev = 4,301, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.1030812642285423;  // std dev = 10,311, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1327097020633365;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.7041466028551171;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.01926060492151691;  // std dev = 3,003, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.20311055180624835;  // std dev = 4,430, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.07947450737507758;  // std dev = 5,700, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.1773656085961365;  // std dev = 9,984, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.04973375619132652;  // std dev = 4,300, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.0807543925048811;  // std dev = 10,309, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( phenotype(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.2924068530350942;  // std dev = 0,408, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | else return 0.028159493447925024;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=40 */
%   | else if ( enzyme(B, I) )
%   | | then if ( location(A, J), location(B, J) )
%   | | | then if ( phenotype(B, K), complex(B, L) )
%   | | | | then return -0.01974202384529891;  // std dev = 1,948, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.13938635864864668;  // std dev = 5,090, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else return 0.062197137500465016;  // std dev = 0,465, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, M), location(B, M) )
%   | | | then return 0.13451426615712428;  // std dev = 9,983, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, N) )
%   | | | | then return 0.03891252669489498;  // std dev = 4,299, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06270189945957612;  // std dev = 10,308, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07618072693677097;  // std dev = 0,463, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.04535997574254631;  // std dev = 3,554, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.11768423541704055;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.06402337539130852;  // std dev = 2,146, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07306369515378733;  // std dev = 5,229, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10157917640495026;  // std dev = 9,985, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.0303150788587651;  // std dev = 4,298, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.0483725936156957;  // std dev = 10,307, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( phenotype(B, F), phenotype(A, F), proteinclass(A, G) )
%   | | then return 0.33461231058234064;  // std dev = 0,297, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else return 0.008750632954135036;  // std dev = 0,470, 102,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=49 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then if ( complex(A, J), complex(K, J), phenotype(K, L) )
%   | | | | then return -0.010678486389820857;  // std dev = 3,191, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.10464553158115207;  // std dev = 4,392, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.03690962907432153;  // std dev = 0,463, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, M), location(B, M) )
%   | | | then return 0.07664717348557547;  // std dev = 9,989, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, N) )
%   | | | | then return 0.023540623414295768;  // std dev = 4,297, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03714579392633698;  // std dev = 10,306, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05907282408703619;  // std dev = 5,943, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.03099516847883385;  // std dev = 5,673, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03125617064465025;  // std dev = 6,246, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.32058331957865954;  // std dev = 1,399, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.19669231773335225;  // std dev = 3,480, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return -0.1682191434278737;  // std dev = 0,457, 65,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=20 */
%   | | | | | | else return 0.042893630647418454;  // std dev = 0,498, 575,000 (wgt'ed) examples reached here.  /* #neg=294 #pos=281 */
%   | | | | | else if ( complex(B, R), complex(S, R), proteinclass(S, T) )
%   | | | | | | then return -0.3865878141837374;  // std dev = 0,000, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.16916720282338196;  // std dev = 4,407, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.735485
   AUC PR    = 0.757637
   CLL	      = -0.61947
   Precision = 0.780488 at threshold = 0.5
   Recall    = 0.457143
   F1        = 0.576577


Total learning time: 20.358 seconds
Total inference time: 0.814 seconds
AUC ROC: 0.735485


Best model AUC ROC so far: 0.735485


Refining iteration 6
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, F).;true;true', '0;false,false,false;complex(B, J), location(B, K), location(A, K).;false;true', '0;false,false,true;phenotype(B, G).;false;true', '0;false,false,false,false,false;phenotype(A, P), location(A, Q), location(B, Q).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '0;false,false,false,false;complex(A, L), complex(M, L), enzyme(M, N).;false;true', '0;false,false,true,false;enzyme(A, H), location(A, I).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '1;false,false,false;complex(B, H), complex(A, H).;false;false', '1;false,false;enzyme(B, G).;false;true', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;true', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;true;true', '2;false,false,true,false,false;phenotype(B, K).;false;false', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,true,true;phenotype(B, I).;false;false', '2;false,false,true,false;enzyme(A, J).;false;true', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,true;complex(B, F), phenotype(A, G), proteinclass(A, H).;false;true', '3;false,true,false;proteinclass(A, I).;false;true', '3;false,true,false,false;proteinclass(B, J).;false;true', '3;false,true,false,false,false;enzyme(B, K).;false;true', '3;false,true,false,false,false,false,false;complex(B, N), phenotype(B, P).;false;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,true,false,false,false,false;phenotype(A, L), function(A, M), function(B, M).;false;true', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, K), location(B, K).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;true;false', '5;false,false,false,false;enzyme(A, L).;false;false', '5;false,false,true,true,true;complex(B, H).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, I).;true;true', '6;false,false,true;location(A, J), location(B, J).;true;false', '6;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '6;false,false,true,true;phenotype(B, K), complex(B, L).;false;false', '6;false,false,false;location(A, M), location(B, M).;false;true', '6;false,false,false,false;enzyme(A, N).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, H).;true;true', '8;false,false,true;location(A, I), location(B, I).;true;false', '8;false;enzyme(A, D), location(B, E), location(A, E).;false;true', '8;false,false,true,true;complex(A, J), complex(K, J), phenotype(K, L).;false;false', '8;false,false,false;location(A, M), location(B, M).;false;true', '8;false,false,false,false;enzyme(A, N).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), complex(A, G).;false;true', '9;false,false,false,false,false,false;complex(B, R), complex(S, R), proteinclass(S, T).;false;false', '9;false,false,false,false,false;location(A, K), location(L, K), enzyme(L, M).;false;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, H), complex(I, H), enzyme(I, J).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true', 0.5416666666666666), ('false,false,false,false,false,false', 0.5493716337522442), ('false,false,false,false,false,true', 0.5714285714285714), ('false,false,true,false,false', 0.6216216216216216), ('false,false,false,true', 0.6649746192893401), ('false,false,true,true', 0.7024793388429752), ('false,false,true,false,true', 0.7692307692307693), ('false,false,false,false,true', 0.7901234567901234), ('true', 0.9655172413793104)]
Tree #2: [('false,true,false', 0.53125), ('false,false,true', 0.5354609929078015), ('false,false,false,false', 0.5600907029478458), ('false,true,true', 0.5833333333333334), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #3: [('false,false,false', 0.5087179487179487), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,false,false,false', 0.6197183098591549), ('false,false,true,true,false', 0.6266666666666667), ('false,false,true,false,true', 0.7777777777777778), ('false,false,true,false,false,true', 0.7884615384615384), ('true', 0.9655172413793104)]
Tree #4: [('false,false', 0.5147175815433572), ('false,true,false,false,false,false,false,true', 0.6), ('false,true,false,false,false,false,false,false', 0.6296296296296297), ('false,true,false,true', 0.6666666666666666), ('false,true,false,false,true', 0.7272727272727273), ('false,true,false,false,false,false,true', 0.8181818181818182), ('false,true,true', 0.875), ('false,true,false,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true,false', 0.5402298850574713), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,true,true', 0.7575757575757576), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true,false', 0.5196078431372549), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,true,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true,false', 0.5113043478260869), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.5569620253164557), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,false,false,true,true', 0.6923076923076923), ('false,false,false,false,true', 0.8026315789473685), ('false,false,false,true', 0.978021978021978)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.733148935099512;  // std dev = 0,331, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.1914822684328457;  // std dev = 0,471, 33,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=11 */
%   | | | else if ( enzyme(B, J), function(A, K), function(B, K) )
%   | | | | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else return 0.3211118980624742;  // std dev = 0,499, 54,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=25 */
%   | else if ( enzyme(B, L) )
%   | | then if ( phenotype(B, M) )
%   | | | then return 0.15566959625653568;  // std dev = 5,029, 121,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=36 */
%   | | | else return 0.448211046900752;  // std dev = 0,492, 161,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=95 */
%   | | else if ( complex(B, N), location(B, P), location(A, P) )
%   | | | then return 0.5231235543888494;  // std dev = 6,625, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else return 0.30544970630773477;  // std dev = 0,497, 778,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=348 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.34168050740685707;  // std dev = 5,301, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.27771224996609434;  // std dev = 8,277, 282,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=131 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.7611615373643018;  // std dev = 1,401, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else return 0.2524821224420603;  // std dev = 14,756, 882,000 (wgt'ed) examples reached here.  /* #neg=494 #pos=388 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.28199710327238675;  // std dev = 0,481, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.2003419878334142;  // std dev = 3,704, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.3720380853368033;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.17399511882307656;  // std dev = 0,483, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(B, I), location(A, I) )
%   | | | then return 0.33075667639301737;  // std dev = 0,474, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return -0.07742204021284295;  // std dev = 0,349, 60,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=9 */
%   | | | | else if ( proteinclass(A, M), location(A, N) )
%   | | | | | then return 0.1330666613753942;  // std dev = 0,479, 98,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=35 */
%   | | | | | else return 0.23244554336296916;  // std dev = 0,498, 368,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=168 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.22486249944381093;  // std dev = 0,480, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(A, F), location(A, G) )
%   | | then return 0.0614362267148381;  // std dev = 0,461, 101,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=32 */
%   | | else if ( phenotype(B, H), enzyme(B, I) )
%   | | | then return 0.07665848155813265;  // std dev = 0,463, 109,000 (wgt'ed) examples reached here.  /* #neg=75 #pos=34 */
%   | | | else if ( function(B, J), function(A, J) )
%   | | | | then return 0.2724203470435515;  // std dev = 0,470, 502,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=296 */
%   | | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | | then return -0.11288980338332522;  // std dev = 0,341, 37,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=5 */
%   | | | | | else if ( enzyme(B, N), location(B, P), function(A, Q) )
%   | | | | | | then return 0.33501969347007043;  // std dev = 0,477, 74,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=48 */
%   | | | | | | else if ( phenotype(A, R), location(A, S), location(B, S) )
%   | | | | | | | then return 0.25846343951409834;  // std dev = 0,497, 88,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=49 */
%   | | | | | | | else return 0.15278247801078237;  // std dev = 0,495, 346,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=146 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17488539359027008;  // std dev = 0,479, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.4983097222478777;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.1256682128139157;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.22731896446604427;  // std dev = 4,146, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.10670457655986752;  // std dev = 5,794, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.20731796871099498;  // std dev = 9,952, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.09814022226092095;  // std dev = 4,288, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.11520285119705247;  // std dev = 10,270, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.1338786566600199;  // std dev = 0,478, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then if ( complex(B, H) )
%   | | | | | then return 0.723911857899677;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | else return -0.011984300886849354;  // std dev = 2,958, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | else return 0.20031233170613177;  // std dev = 4,406, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.08412134173121459;  // std dev = 5,787, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.15825912949571716;  // std dev = 9,947, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.07854302805280078;  // std dev = 4,285, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09080890863418874;  // std dev = 10,266, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10156718032504071;  // std dev = 5,235, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return 6.974588587568117E-4;  // std dev = 1,949, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.1370132861833259;  // std dev = 5,054, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else return 0.06571555820290481;  // std dev = 5,781, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.11989528054330252;  // std dev = 9,947, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06226000783981544;  // std dev = 4,283, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07085159781698992;  // std dev = 10,263, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( phenotype(B, F), phenotype(A, F), proteinclass(A, G) )
%   | | then return 0.4007596408458536;  // std dev = 0,294, 18,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=16 */
%   | | else if ( proteinclass(A, H), complex(B, I), complex(A, I) )
%   | | | then return 0.45214189192368204;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | else if ( proteinclass(A, J), phenotype(A, K), complex(A, L) )
%   | | | | then return -0.19982235960796868;  // std dev = 0,409, 19,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=5 */
%   | | | | else if ( proteinclass(B, M), complex(A, N), phenotype(A, P) )
%   | | | | | then return -0.44521662488333447;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | else if ( phenotype(A, Q), complex(A, R), phenotype(B, Q) )
%   | | | | | | then return 0.5547833751166655;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | else if ( phenotype(B, S), phenotype(T, S), proteinclass(T, U) )
%   | | | | | | | then return -0.06008131233740101;  // std dev = 0,484, 26,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=10 */
%   | | | | | | | else return 0.1034619141994898;  // std dev = 0,477, 46,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=26 */
%   | else return 0.07024318087689568;  // std dev = 0,477, 1.257,000 (wgt'ed) examples reached here.  /* #neg=647 #pos=610 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05780569588317001;  // std dev = 4,981, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -2.803950845166566E-4;  // std dev = 3,152, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.10801628713017247;  // std dev = 4,383, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.034961308458378006;  // std dev = 5,773, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.07342902154287201;  // std dev = 9,954, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.03365862022001508;  // std dev = 4,279, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03870402952801639;  // std dev = 10,259, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.0630925454038041;  // std dev = 5,913, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.029368574706214116;  // std dev = 5,776, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.034053703249901084;  // std dev = 6,208, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), complex(A, G) )
%   | | | then return 0.30616262674667605;  // std dev = 1,399, 91,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=89 */
%   | | | else if ( complex(A, H), complex(I, H), enzyme(I, J) )
%   | | | | then return -0.1920746656886061;  // std dev = 3,403, 76,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=15 */
%   | | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | | then return 0.022724153374036587;  // std dev = 12,582, 640,000 (wgt'ed) examples reached here.  /* #neg=339 #pos=301 */
%   | | | | | else if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return -0.3925646960016146;  // std dev = 0,034, 7,000 (wgt'ed) examples reached here.  /* #neg=7 */
%   | | | | | | else return 0.16515799595900285;  // std dev = 4,407, 79,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=44 */
Results
   AUC ROC   = 0.728954
   AUC PR    = 0.746822
   CLL	      = -0.62132
   Precision = 0.716049 at threshold = 0.5
   Recall    = 0.414286
   F1        = 0.524887


Total learning time: 426.582 seconds
Total inference time: 0.697 seconds
AUC ROC: 0.728954


Best model AUC ROC so far: 0.735485


******************************************
Best model found
******************************************
Total revision time: 1174.498
Best validation AUC ROC: 0.735485


Results
   AUC ROC   = 0.577851
   AUC PR    = 0.601063
   CLL	      = -0.682834
   Precision = 0.577099 at threshold = 0.5
   Recall    = 0.300716
   F1        = 0.395397


Total inference time: 5.478 seconds
AUC ROC: 0.577851
Dataset: twitter->yeast, Fold: 4, Type: transfer, Time: 02:37:02
{'Parameter Learning results': {'F1': 0.564328, 'Learning time': 196.59199999999998, 'Recall': 0.544948, 'AUC PR': 0.587618, 'AUC ROC': 0.586946, 'CLL': -0.680042, 'Inference time': 2.466, 'Precision': [0.585137, 0.5]}, 'F1': 0.395397, 'Learning time': 1174.498, 'Recall': 0.300716, 'AUC PR': 0.601063, 'AUC ROC': 0.577851, 'Mapping results': {'Finding best mapping': 0.013070106506347656, 'Knowledge compiling time': 0.05708003044128418, 'Total time': 3.505293846130371, 'Generating mappings time': 0.04615020751953125, 'Possible mappings': 98, 'Generating paths time': 3.3889877796173096}, 'CLL': -0.682834, 'Inference time': 5.478, 'Precision': [0.577099, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), location(B, D), location(A, D) )
%   then return 0.5060362590431705;  // std dev = 0,478, 284,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=184 */
%   else if ( complex(A, E), complex(F, E), proteinclass(F, G) )
%   | then return 0.17739776139059352;  // std dev = 0,466, 213,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=68 */
%   | else if ( location(B, H), location(A, H) )
%   | | then return 0.4463842292171553;  // std dev = 0,492, 357,000 (wgt'ed) examples reached here.  /* #neg=147 #pos=210 */
%   | | else if ( complex(B, I), proteinclass(B, J) )
%   | | | then return -0.021851064900487778;  // std dev = 0,325, 25,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=3 */
%   | | | else if ( location(A, K), location(L, K), proteinclass(L, M) )
%   | | | | then if ( phenotype(A, N) )
%   | | | | | then if ( enzyme(B, P), phenotype(B, Q) )
%   | | | | | | then return 0.13592671287729013;  // std dev = 0,448, 18,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=5 */
%   | | | | | | else return 0.3401309170814917;  // std dev = 0,500, 222,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=107 */
%   | | | | | else return 0.2464468074399392;  // std dev = 0,487, 188,000 (wgt'ed) examples reached here.  /* #neg=115 #pos=73 */
%   | | | | else if ( phenotype(B, R), enzyme(B, S) )
%   | | | | | then return -0.1418510649004878;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | else return 0.42804140821779146;  // std dev = 0,495, 93,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=53 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.7741377558885987;  // std dev = 0,127, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return 0.09732509711495371;  // std dev = 0,443, 186,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( complex(B, G), complex(H, G), proteinclass(H, I) )
%   | | then return 0.08092916752885985;  // std dev = 0,439, 118,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then if ( enzyme(B, K) )
%   | | | | then return 0.4328993064645239;  // std dev = 0,481, 129,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=82 */
%   | | | | else if ( proteinclass(A, L), phenotype(B, M), phenotype(A, N) )
%   | | | | | then return 0.4773887023405618;  // std dev = 0,466, 38,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=26 */
%   | | | | | else if ( phenotype(B, P), phenotype(A, Q) )
%   | | | | | | then return 0.17122501025083992;  // std dev = 0,485, 37,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=14 */
%   | | | | | | else return 0.3470592391695896;  // std dev = 0,497, 239,000 (wgt'ed) examples reached here.  /* #neg=107 #pos=132 */
%   | | | else if ( complex(B, R), phenotype(B, S) )
%   | | | | then return 0.45043732556480415;  // std dev = 0,480, 41,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=26 */
%   | | | | else return 0.2560673962234426;  // std dev = 0,494, 492,000 (wgt'ed) examples reached here.  /* #neg=276 #pos=216 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.31483658946220155;  // std dev = 0,470, 730,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=418 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return -0.0736403739829308;  // std dev = 0,313, 64,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=7 */
%   | else if ( complex(B, G), complex(H, G), proteinclass(H, I) )
%   | | then return -0.05285870072092151;  // std dev = 0,341, 43,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=6 */
%   | | else if ( phenotype(A, J), complex(B, K), phenotype(B, L) )
%   | | | then return 0.7109822986848346;  // std dev = 0,066, 8,000 (wgt'ed) examples reached here.  /* #pos=8 */
%   | | | else if ( phenotype(B, M), location(B, N), location(A, N) )
%   | | | | then return 0.0832828668371259;  // std dev = 0,480, 51,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=18 */
%   | | | | else if ( enzyme(B, P), location(B, Q), function(A, R) )
%   | | | | | then return 0.3220060146836362;  // std dev = 0,489, 95,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=54 */
%   | | | | | else if ( phenotype(A, S) )
%   | | | | | | then if ( proteinclass(A, T), phenotype(U, S), enzyme(U, W) )
%   | | | | | | | then return 0.16869034470457714;  // std dev = 0,484, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | | | | | else return 0.276336775090981;  // std dev = 0,499, 158,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=82 */
%   | | | | | | else return 0.1942261257780755;  // std dev = 0,492, 223,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=96 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(B, C), function(B, D), function(A, D) )
%   then return 0.28357642281498496;  // std dev = 0,439, 328,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=207 */
%   else if ( complex(A, E), complex(F, E), proteinclass(F, G) )
%   | then return 0.06890868353325015;  // std dev = 0,444, 184,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=53 */
%   | else if ( complex(B, H), complex(I, H), proteinclass(I, J) )
%   | | then return -0.08210067283712662;  // std dev = 0,293, 39,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=4 */
%   | | else if ( phenotype(B, K), enzyme(B, L) )
%   | | | then return 0.07636748799836145;  // std dev = 0,467, 68,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=25 */
%   | | | else if ( enzyme(B, M), location(B, N) )
%   | | | | then return 0.34333558591436875;  // std dev = 0,467, 139,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=93 */
%   | | | | else if ( enzyme(A, P), phenotype(B, Q) )
%   | | | | | then return 9.731798546015561E-4;  // std dev = 0,452, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | | | else if ( phenotype(A, R) )
%   | | | | | | then return 0.2331430425780464;  // std dev = 0,492, 321,000 (wgt'ed) examples reached here.  /* #neg=148 #pos=173 */
%   | | | | | | else if ( location(B, S) )
%   | | | | | | | then return 0.20641024210961328;  // std dev = 0,495, 256,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=127 */
%   | | | | | | | else return 0.037636842867634517;  // std dev = 0,453, 47,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=14 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.4729326791083988;  // std dev = 0,128, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), phenotype(E, F) )
%   | then return 0.0628249498781466;  // std dev = 0,467, 428,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=155 */
%   | else if ( location(B, G), location(A, G) )
%   | | then if ( complex(B, H), location(I, G), enzyme(I, J) )
%   | | | then if ( complex(I, K) )
%   | | | | then if ( proteinclass(B, L), phenotype(A, M) )
%   | | | | | then if ( enzyme(B, J) )
%   | | | | | | then return 0.1489943204743145;  // std dev = 1,225, 6,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=3 */
%   | | | | | | else return 0.5064621786561229;  // std dev = 0,948, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else return 0.08067018129656395;  // std dev = 0,479, 80,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=36 */
%   | | | | else return 0.607165921036964;  // std dev = 0,051, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | else if ( proteinclass(B, N), proteinclass(P, N), phenotype(P, Q) )
%   | | | | then return 0.11615598001391089;  // std dev = 0,495, 52,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=25 */
%   | | | | else return 0.25549289655942803;  // std dev = 0,473, 248,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=157 */
%   | | else return 0.11765242067177968;  // std dev = 0,480, 457,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=195 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( location(A, C), location(B, C) )
%   then return 0.15916207309227362;  // std dev = 0,453, 727,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=427 */
%   else if ( location(A, D), phenotype(B, E), phenotype(A, E) )
%   | then return -0.10516560810651736;  // std dev = 0,375, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | else if ( enzyme(A, F), enzyme(B, G), location(B, H) )
%   | | then return -0.10776390088081618;  // std dev = 0,394, 25,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=5 */
%   | | else if ( complex(A, I), complex(B, I) )
%   | | | then return 0.44450922135099263;  // std dev = 0,000, 11,000 (wgt'ed) examples reached here.  /* #pos=11 */
%   | | | else if ( complex(A, J), complex(K, J), enzyme(K, L) )
%   | | | | then return -0.08677578297059872;  // std dev = 0,347, 64,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=9 */
%   | | | | else if ( function(B, M), function(N, M), phenotype(N, P) )
%   | | | | | then if ( proteinclass(A, Q), proteinclass(R, Q), phenotype(R, P) )
%   | | | | | | then return 0.061232852298921885;  // std dev = 0,472, 65,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=26 */
%   | | | | | | else if ( phenotype(B, S), location(B, T), proteinclass(N, U) )
%   | | | | | | | then return 0.09170602831591368;  // std dev = 0,467, 146,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=60 */
%   | | | | | | | else return 0.17362695031450304;  // std dev = 0,492, 225,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=116 */
%   | | | | | else return 0.04217757103107086;  // std dev = 0,479, 116,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=43 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(A, C), enzyme(B, C) )
%   then return 0.4059980047747318;  // std dev = 0,157, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( function(B, D), function(A, D) )
%   | then return 0.11393934974135235;  // std dev = 0,452, 701,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=390 */
%   | else if ( location(A, E), location(F, E), complex(F, G) )
%   | | then if ( enzyme(A, H), enzyme(I, H), proteinclass(I, J) )
%   | | | then return -0.2246806114548738;  // std dev = 0,189, 27,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=1 */
%   | | | else if ( phenotype(A, K), enzyme(F, L) )
%   | | | | then if ( complex(A, M), proteinclass(F, N) )
%   | | | | | then return 0.049327871473294906;  // std dev = 0,463, 99,000 (wgt'ed) examples reached here.  /* #neg=60 #pos=39 */
%   | | | | | else if ( location(B, P), location(Q, P), phenotype(Q, K) )
%   | | | | | | then return 0.07304910697405938;  // std dev = 0,476, 120,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=59 */
%   | | | | | | else if ( enzyme(A, R) )
%   | | | | | | | then return 0.6097890087485299;  // std dev = 0,025, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.14441776722787342;  // std dev = 0,482, 60,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=30 */
%   | | | | else return 0.03755370815258963;  // std dev = 0,474, 286,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=113 */
%   | | else return 0.12961798386667034;  // std dev = 0,466, 81,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=40 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( location(A, C), location(B, C) )
%   then return 0.09922900389344179;  // std dev = 0,449, 727,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=427 */
%   else if ( phenotype(B, D), enzyme(B, E) )
%   | then return -0.082073677791267;  // std dev = 0,395, 67,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=16 */
%   | else if ( enzyme(B, F), enzyme(G, F), location(G, H) )
%   | | then return 0.14181232935171922;  // std dev = 0,460, 83,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=47 */
%   | | else if ( proteinclass(A, I), phenotype(A, J), complex(A, K) )
%   | | | then return -0.13139717687282654;  // std dev = 0,312, 18,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=2 */
%   | | | else if ( function(B, L), function(M, L), enzyme(M, N) )
%   | | | | then if ( location(A, P), location(Q, P), enzyme(Q, N) )
%   | | | | | then return 0.03733164587161952;  // std dev = 0,469, 302,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=120 */
%   | | | | | else if ( phenotype(A, R), location(M, S), location(B, S) )
%   | | | | | | then return 0.3432628144563329;  // std dev = 0,447, 8,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=6 */
%   | | | | | | else if ( complex(B, T), complex(U, T), proteinclass(U, W) )
%   | | | | | | | then return -0.06136608554655698;  // std dev = 0,322, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | | | | else return 0.14995395475538148;  // std dev = 0,488, 72,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=41 */
%   | | | | else return 0.0017465779580673596;  // std dev = 0,463, 118,000 (wgt'ed) examples reached here.  /* #neg=77 #pos=41 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( phenotype(A, C), phenotype(B, C), proteinclass(A, D) )
%   then return 0.27085583211106395;  // std dev = 0,368, 50,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=37 */
%   else if ( phenotype(B, E), enzyme(B, F) )
%   | then return -0.059719725940821644;  // std dev = 0,421, 128,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=43 */
%   | else if ( enzyme(B, G), function(A, H) )
%   | | then return 0.12034800993195037;  // std dev = 0,450, 186,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=117 */
%   | | else if ( function(B, I), function(A, I), location(B, J) )
%   | | | then return 0.07216796070006166;  // std dev = 0,450, 494,000 (wgt'ed) examples reached here.  /* #neg=212 #pos=282 */
%   | | | else if ( location(A, K), location(L, K), enzyme(L, M) )
%   | | | | then return 0.01181206765603643;  // std dev = 0,463, 475,000 (wgt'ed) examples reached here.  /* #neg=289 #pos=186 */
%   | | | | else if ( proteinclass(B, N), function(A, P) )
%   | | | | | then return 0.27640605053749856;  // std dev = 0,400, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | | else if ( location(A, Q) )
%   | | | | | | then return 0.33066894186615503;  // std dev = 0,843, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | | else if ( proteinclass(B, R) )
%   | | | | | | | then return -0.37319250282432687;  // std dev = 0,198, 3,000 (wgt'ed) examples reached here.  /* #neg=3 */
%   | | | | | | | else return 0.06423157984337147;  // std dev = 0,484, 54,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=27 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C), enzyme(A, D) )
%   then return 0.11257200035603591;  // std dev = 0,418, 172,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=105 */
%   else if ( phenotype(B, E), enzyme(B, F) )
%   | then return -0.0551625155164272;  // std dev = 0,435, 113,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( enzyme(B, G), enzyme(H, G), location(H, I) )
%   | | then if ( phenotype(A, J), location(B, I) )
%   | | | then if ( proteinclass(A, K) )
%   | | | | then return 0.1112038260711569;  // std dev = 0,456, 25,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=16 */
%   | | | | else if ( proteinclass(H, L), complex(A, M) )
%   | | | | | then return 0.33438572510240655;  // std dev = 0,932, 6,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=5 */
%   | | | | | else if ( complex(A, N) )
%   | | | | | | then if ( location(A, I) )
%   | | | | | | | then return -0.11490638830779232;  // std dev = 0,496, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | | | | else return 0.011175088735850824;  // std dev = 0,439, 9,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=4 */
%   | | | | | | else return -0.27972981194583124;  // std dev = 0,405, 14,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=3 */
%   | | | else return 0.15443855203693388;  // std dev = 0,439, 86,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=59 */
%   | | else return 0.033483312689963206;  // std dev = 0,457, 970,000 (wgt'ed) examples reached here.  /* #neg=499 #pos=471 */
Results
   AUC ROC   = 0.616431
   AUC PR    = 0.634594
   CLL	      = -0.679306
   Precision = 0.633842 at threshold = 0.5
   Recall    = 0.363564
   F1        = 0.462083


Total learning time: 598.1659999999999 seconds
Total inference time: 16.267 seconds
AUC ROC: 0.616431


Dataset: twitter->yeast, Fold: 4, Type: scratch, Time: 02:47:17
{'F1': 0.462083, 'Learning time': 598.1659999999999, 'Recall': 0.363564, 'AUC PR': 0.634594, 'AUC ROC': 0.616431, 'CLL': -0.679306, 'Inference time': 16.267, 'Precision': [0.633842, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( location(B, C), function(B, D), function(A, D) )
%   then return 0.49634696419382907;  // std dev = 0,481, 4.262,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=2.720 */
%   else if ( complex(B, E), complex(A, E) )
%   | then return 0.8581489350995123;  // std dev = 0,000, 12,000 (wgt'ed) examples reached here.  /* #pos=12 */
%   | else if ( complex(B, F), complex(G, F), proteinclass(G, H) )
%   | | then return 0.12917697248268667;  // std dev = 0,444, 428,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=116 */
%   | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | then return 0.19048724355721897;  // std dev = 0,471, 1.005,000 (wgt'ed) examples reached here.  /* #neg=671 #pos=334 */
%   | | | else if ( phenotype(B, L), location(B, M), location(A, N) )
%   | | | | then return 0.21066692071101847;  // std dev = 0,478, 695,000 (wgt'ed) examples reached here.  /* #neg=450 #pos=245 */
%   | | | | else if ( phenotype(A, P), phenotype(Q, P), complex(Q, R) )
%   | | | | | then return 0.23035496036675726;  // std dev = 0,483, 1.029,000 (wgt'ed) examples reached here.  /* #neg=646 #pos=383 */
%   | | | | | else if ( enzyme(A, S), location(B, T), location(A, U) )
%   | | | | | | then if ( location(A, T) )
%   | | | | | | | then return 0.3692600462106225;  // std dev = 0,500, 45,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=23 */
%   | | | | | | | else return 0.4490580260086023;  // std dev = 0,492, 44,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=26 */
%   | | | | | | else return 0.2888212040070706;  // std dev = 0,495, 1.428,000 (wgt'ed) examples reached here.  /* #neg=813 #pos=615 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(B, D), function(A, D) )
%   then return 0.4688181240590263;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.16004522471102778;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(B, H), location(A, I) )
%   | | then return 0.23667169719540074;  // std dev = 0,490, 2.775,000 (wgt'ed) examples reached here.  /* #neg=1.600 #pos=1.175 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then return 0.3735879023378559;  // std dev = 0,490, 1.299,000 (wgt'ed) examples reached here.  /* #neg=561 #pos=738 */
%   | | | else if ( location(A, K), complex(B, L), location(B, M) )
%   | | | | then return 0.10057527864631172;  // std dev = 0,453, 116,000 (wgt'ed) examples reached here.  /* #neg=83 #pos=33 */
%   | | | | else if ( complex(A, N), complex(P, N), phenotype(P, Q) )
%   | | | | | then return 0.1772187911146016;  // std dev = 0,477, 197,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=71 */
%   | | | | | else if ( location(A, R), location(B, S), proteinclass(B, T) )
%   | | | | | | then return 0.16372126479459054;  // std dev = 0,481, 67,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=24 */
%   | | | | | | else if ( location(A, U), location(W, U), enzyme(W, X) )
%   | | | | | | | then return 0.25803911954142583;  // std dev = 0,497, 684,000 (wgt'ed) examples reached here.  /* #neg=380 #pos=304 */
%   | | | | | | | else return 0.30736923645131387;  // std dev = 0,499, 232,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=115 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.37995291038388457;  // std dev = 0,465, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.13371317356423806;  // std dev = 0,468, 1.132,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=367 */
%   | else if ( phenotype(A, G), function(A, H), function(B, H) )
%   | | then if ( enzyme(A, I), enzyme(J, I), complex(J, K) )
%   | | | then return 0.14279086442978192;  // std dev = 0,490, 132,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | | else if ( complex(B, L), complex(M, L), phenotype(M, G) )
%   | | | | then return 0.49411899868886744;  // std dev = 0,430, 153,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=115 */
%   | | | | else if ( location(B, N), location(A, N) )
%   | | | | | then return 0.31433492615972025;  // std dev = 0,495, 512,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=292 */
%   | | | | | else if ( complex(B, P) )
%   | | | | | | then return -0.00709880642583098;  // std dev = 0,428, 53,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=13 */
%   | | | | | | else if ( location(B, Q) )
%   | | | | | | | then return 0.1975076842159717;  // std dev = 0,498, 249,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=113 */
%   | | | | | | | else return 0.38866972585613013;  // std dev = 0,491, 47,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=28 */
%   | | else return 0.20880401166350496;  // std dev = 0,489, 4.292,000 (wgt'ed) examples reached here.  /* #neg=2.419 #pos=1.873 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.3987258239161369;  // std dev = 0,412, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), function(B, E) )
%   | then if ( function(A, E), location(B, F), location(A, F) )
%   | | then if ( complex(B, G), complex(H, G), phenotype(H, D) )
%   | | | then return 0.4177755124207465;  // std dev = 0,409, 296,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=233 */
%   | | | else if ( complex(B, I), phenotype(B, J) )
%   | | | | then if ( proteinclass(A, K), complex(A, L) )
%   | | | | | then return 0.3451326779216085;  // std dev = 0,442, 15,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=11 */
%   | | | | | else return 0.013585058873989324;  // std dev = 0,490, 112,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=45 */
%   | | | | else if ( complex(A, M), phenotype(N, D), proteinclass(N, P) )
%   | | | | | then return 0.19771413642358285;  // std dev = 0,497, 492,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=264 */
%   | | | | | else return 0.274857813727086;  // std dev = 0,484, 347,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=213 */
%   | | else return 0.1145232418797345;  // std dev = 0,479, 2.872,000 (wgt'ed) examples reached here.  /* #neg=1.793 #pos=1.079 */
%   | else if ( location(B, Q), function(B, R), function(A, R) )
%   | | then return 0.31042781572289;  // std dev = 0,471, 1.586,000 (wgt'ed) examples reached here.  /* #neg=538 #pos=1.048 */
%   | | else return 0.14141827030405593;  // std dev = 0,486, 2.396,000 (wgt'ed) examples reached here.  /* #neg=1.454 #pos=942 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.22311942683372463;  // std dev = 0,459, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(A, E), enzyme(B, F) )
%   | then return 0.058653516181166966;  // std dev = 0,465, 556,000 (wgt'ed) examples reached here.  /* #neg=363 #pos=193 */
%   | else if ( phenotype(B, G), function(A, H) )
%   | | then return 0.08935262268162482;  // std dev = 0,468, 1.085,000 (wgt'ed) examples reached here.  /* #neg=728 #pos=357 */
%   | | else if ( phenotype(A, I), enzyme(A, J), location(B, K) )
%   | | | then return 0.056942617392006685;  // std dev = 0,472, 279,000 (wgt'ed) examples reached here.  /* #neg=180 #pos=99 */
%   | | | else if ( location(B, L), location(A, L) )
%   | | | | then return 0.2076865509070479;  // std dev = 0,484, 2.313,000 (wgt'ed) examples reached here.  /* #neg=1.043 #pos=1.270 */
%   | | | | else if ( location(A, M), location(B, N) )
%   | | | | | then return 0.08592675984166291;  // std dev = 0,483, 1.335,000 (wgt'ed) examples reached here.  /* #neg=829 #pos=506 */
%   | | | | | else if ( location(A, P), function(A, Q), function(B, Q) )
%   | | | | | | then return 0.3001945636511874;  // std dev = 0,487, 129,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=76 */
%   | | | | | | else if ( location(A, R), function(B, S) )
%   | | | | | | | then return 0.09521080874456748;  // std dev = 0,482, 584,000 (wgt'ed) examples reached here.  /* #neg=370 #pos=214 */
%   | | | | | | | else return 0.16789396888968444;  // std dev = 0,497, 289,000 (wgt'ed) examples reached here.  /* #neg=151 #pos=138 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.2518473853153441;  // std dev = 0,410, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), phenotype(E, D), complex(E, F) )
%   | then return 0.0913527372874287;  // std dev = 0,480, 4.110,000 (wgt'ed) examples reached here.  /* #neg=2.278 #pos=1.832 */
%   | else if ( enzyme(B, G), complex(B, H), location(B, I) )
%   | | then return 0.005641371579172794;  // std dev = 0,458, 178,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=66 */
%   | | else if ( proteinclass(B, J), location(B, K) )
%   | | | then return 0.09434019644950827;  // std dev = 0,477, 653,000 (wgt'ed) examples reached here.  /* #neg=338 #pos=315 */
%   | | | else if ( proteinclass(A, L), proteinclass(M, L), complex(M, N) )
%   | | | | then return 0.08128815108593053;  // std dev = 0,476, 319,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=146 */
%   | | | | else if ( location(B, P), location(A, P) )
%   | | | | | then return 0.1866021925311242;  // std dev = 0,472, 1.475,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=867 */
%   | | | | | else if ( complex(A, Q), location(B, R), location(A, S) )
%   | | | | | | then return -0.011499489187287916;  // std dev = 0,466, 150,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=48 */
%   | | | | | | else if ( enzyme(A, T), location(A, U) )
%   | | | | | | | then return 0.013645945149455175;  // std dev = 0,475, 99,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=37 */
%   | | | | | | | else return 0.12537368967010842;  // std dev = 0,492, 1.132,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=524 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(A, D), location(B, E) )
%   then return 0.05390007420870252;  // std dev = 0,466, 693,000 (wgt'ed) examples reached here.  /* #neg=376 #pos=317 */
%   else if ( phenotype(B, F), location(A, G), location(B, G) )
%   | then return 0.143037621373247;  // std dev = 0,448, 1.924,000 (wgt'ed) examples reached here.  /* #neg=719 #pos=1.205 */
%   | else if ( phenotype(B, H), location(A, I) )
%   | | then return 0.054415293285592914;  // std dev = 0,476, 1.166,000 (wgt'ed) examples reached here.  /* #neg=608 #pos=558 */
%   | | else if ( phenotype(A, J), function(B, K), enzyme(A, L) )
%   | | | then return 0.02509820060618271;  // std dev = 0,471, 386,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=136 */
%   | | | else if ( phenotype(A, M), function(A, N), function(B, N) )
%   | | | | then return 0.13134925883927465;  // std dev = 0,484, 894,000 (wgt'ed) examples reached here.  /* #neg=395 #pos=499 */
%   | | | | else if ( phenotype(A, P), phenotype(Q, P), complex(Q, R) )
%   | | | | | then return 0.05440032499302022;  // std dev = 0,480, 1.291,000 (wgt'ed) examples reached here.  /* #neg=821 #pos=470 */
%   | | | | | else if ( function(B, S), function(A, S) )
%   | | | | | | then return 0.1788240406961495;  // std dev = 0,469, 967,000 (wgt'ed) examples reached here.  /* #neg=346 #pos=621 */
%   | | | | | | else if ( complex(A, T), complex(U, T), phenotype(U, W) )
%   | | | | | | | then return -0.043350753523943596;  // std dev = 0,449, 224,000 (wgt'ed) examples reached here.  /* #neg=160 #pos=64 */
%   | | | | | | | else return 0.0731427646879428;  // std dev = 0,495, 1.403,000 (wgt'ed) examples reached here.  /* #neg=799 #pos=604 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(A, D), phenotype(A, E) )
%   then return 0.02974814987730759;  // std dev = 0,460, 551,000 (wgt'ed) examples reached here.  /* #neg=303 #pos=248 */
%   else if ( proteinclass(B, F), proteinclass(A, G) )
%   | then return 0.12135806294748192;  // std dev = 0,453, 450,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=271 */
%   | else if ( proteinclass(B, H) )
%   | | then return 0.035278182896140355;  // std dev = 0,474, 1.174,000 (wgt'ed) examples reached here.  /* #neg=612 #pos=562 */
%   | | else if ( phenotype(B, I), location(A, J), location(B, J) )
%   | | | then return 0.127831791997043;  // std dev = 0,444, 1.354,000 (wgt'ed) examples reached here.  /* #neg=482 #pos=872 */
%   | | | else if ( proteinclass(A, K), location(A, L), location(B, M) )
%   | | | | then return 0.0217296438524108;  // std dev = 0,479, 889,000 (wgt'ed) examples reached here.  /* #neg=524 #pos=365 */
%   | | | | else if ( function(A, N), function(B, N) )
%   | | | | | then return 0.11153532410300468;  // std dev = 0,477, 1.792,000 (wgt'ed) examples reached here.  /* #neg=705 #pos=1.087 */
%   | | | | | else if ( function(A, P), function(Q, P), complex(Q, R) )
%   | | | | | | then return 0.03980200718685437;  // std dev = 0,482, 2.491,000 (wgt'ed) examples reached here.  /* #neg=1.549 #pos=942 */
%   | | | | | | else if ( complex(B, S), complex(T, S), enzyme(T, U) )
%   | | | | | | | then return -0.09467406182036618;  // std dev = 0,401, 19,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=4 */
%   | | | | | | | else return 0.17631197542255392;  // std dev = 0,497, 228,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=123 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(A, D), location(B, E) )
%   then return 0.09496378348857275;  // std dev = 0,453, 491,000 (wgt'ed) examples reached here.  /* #neg=194 #pos=297 */
%   else if ( proteinclass(B, F), location(A, G) )
%   | then return 0.022746731310699674;  // std dev = 0,472, 1.285,000 (wgt'ed) examples reached here.  /* #neg=675 #pos=610 */
%   | else if ( enzyme(B, H), function(A, I) )
%   | | then if ( enzyme(A, H) )
%   | | | then return 0.3783006049365233;  // std dev = 0,202, 85,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=82 */
%   | | | else if ( phenotype(B, J), function(B, I), complex(B, K) )
%   | | | | then return -0.20048375678901809;  // std dev = 0,467, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | | else if ( location(B, L), location(A, L) )
%   | | | | | then if ( function(B, I), complex(A, M) )
%   | | | | | | then return 0.19400781452053792;  // std dev = 0,463, 68,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=46 */
%   | | | | | | else if ( complex(A, N), complex(P, N), phenotype(P, Q) )
%   | | | | | | | then return -0.03292788366104825;  // std dev = 0,453, 118,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=34 */
%   | | | | | | | else return 0.06938432956588725;  // std dev = 0,488, 294,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=149 */
%   | | | | | else return -0.031519831915912844;  // std dev = 0,470, 403,000 (wgt'ed) examples reached here.  /* #neg=270 #pos=133 */
%   | | else return 0.06176778647563091;  // std dev = 0,474, 6.140,000 (wgt'ed) examples reached here.  /* #neg=3.040 #pos=3.100 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(B, C), proteinclass(A, D) )
%   then return 0.07961673348367833;  // std dev = 0,451, 621,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=371 */
%   else if ( proteinclass(A, E), complex(A, F), location(B, G) )
%   | then return -0.024214878004137158;  // std dev = 0,458, 530,000 (wgt'ed) examples reached here.  /* #neg=313 #pos=217 */
%   | else if ( enzyme(B, H), function(A, I) )
%   | | then return 0.024085553116098897;  // std dev = 0,464, 1.383,000 (wgt'ed) examples reached here.  /* #neg=743 #pos=640 */
%   | | else if ( enzyme(A, J), enzyme(K, J), complex(K, L) )
%   | | | then if ( proteinclass(K, M), location(B, N), complex(A, P) )
%   | | | | then return -0.19589337413519578;  // std dev = 0,408, 78,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=22 */
%   | | | | else if ( function(B, Q), proteinclass(K, R) )
%   | | | | | then return -0.01262069175058186;  // std dev = 0,473, 172,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=72 */
%   | | | | | else if ( complex(B, S), phenotype(A, T) )
%   | | | | | | then return -0.1607133992015757;  // std dev = 0,441, 29,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=7 */
%   | | | | | | else if ( phenotype(A, U), complex(W, L), phenotype(W, U) )
%   | | | | | | | then return 0.21235425421222803;  // std dev = 0,473, 84,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=52 */
%   | | | | | | | else return -0.15275491559680393;  // std dev = 0,491, 14,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=4 */
%   | | | else return 0.051896410319204146;  // std dev = 0,475, 6.037,000 (wgt'ed) examples reached here.  /* #neg=2.948 #pos=3.089 */


Predicates from source: ['interaction(protein,protein).', 'location(protein,loc).', 'enzyme(protein,enz).', 'function(protein,fun).', 'proteinclass(protein,class).', 'phenotype(protein,phe).', 'complex(protein,com).'] 

Source structured tree: [['interaction(A, B)', {'': 'location(B, C), function(B, D), function(A, D)', 'false,false': 'complex(B, F), complex(G, F), proteinclass(G, H)', 'false,false,false': 'complex(A, I), complex(J, I), proteinclass(J, K)', 'false,false,false,false,false,false,true': 'location(A, T)', 'false,false,false,false,false,false': 'enzyme(A, S), location(B, T), location(A, U)', 'false,false,false,false,false': 'phenotype(A, P), phenotype(Q, P), complex(Q, R)', 'false': 'complex(B, E), complex(A, E)', 'false,false,false,false': 'phenotype(B, L), location(B, M), location(A, N)'}, {'false,false,false,false,false,false,false': [0.495, 813, 615], 'false,true': [0.0, 0, 12], 'false,false,true': [0.444, 312, 116], 'false,false,false,false,false,false,true,true': [0.5, 22, 23], 'true': [0.481, 1542, 2720], 'false,false,false,false,false,true': [0.483, 646, 383], 'false,false,false,false,false,false,true,false': [0.492, 18, 26], 'false,false,false,true': [0.471, 671, 334], 'false,false,false,false,true': [0.478, 450, 245]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(B, D), function(A, D)', 'false,false': 'phenotype(A, G), function(B, H), location(A, I)', 'false,false,false': 'location(B, J), location(A, J)', 'false,false,false,false,false,false': 'location(A, R), location(B, S), proteinclass(B, T)', 'false,false,false,false,false': 'complex(A, N), complex(P, N), phenotype(P, Q)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,false,false': 'location(A, K), complex(B, L), location(B, M)', 'false,false,false,false,false,false,false': 'location(A, U), location(W, U), enzyme(W, X)'}, {'false,true': [0.469, 807, 393], 'false,false,true': [0.49, 1600, 1175], 'false,false,false,false,false,false,true': [0.481, 43, 24], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.477, 126, 71], 'false,false,false,false,false,false,false,true': [0.497, 380, 304], 'false,false,false,false,false,false,false,false': [0.499, 117, 115], 'false,false,false,true': [0.49, 561, 738], 'false,false,false,false,true': [0.453, 83, 33]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(A, H), function(B, H)', 'false,false,true': 'enzyme(A, I), enzyme(J, I), complex(J, K)', 'false,false,true,false,false': 'location(B, N), location(A, N)', 'false,false,true,false,false,false,false': 'location(B, Q)', 'false': 'phenotype(B, E), location(A, F)', 'false,false,true,false': 'complex(B, L), complex(M, L), phenotype(M, G)', 'false,false,true,false,false,false': 'complex(B, P)'}, {'false,true': [0.468, 765, 367], 'true': [0.465, 757, 1621], 'false,false,true,false,true': [0.43, 38, 115], 'false,false,true,false,false,false,false,false': [0.491, 19, 28], 'false,false,true,true': [0.49, 80, 52], 'false,false,false': [0.489, 2419, 1873], 'false,false,true,false,false,true': [0.495, 220, 292], 'false,false,true,false,false,false,true': [0.428, 40, 13], 'false,false,true,false,false,false,false,true': [0.498, 136, 113]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,true,true': 'complex(B, G), complex(H, G), phenotype(H, D)', 'false,true': 'function(A, E), location(B, F), location(A, F)', 'false,true,true,false,true': 'proteinclass(A, K), complex(A, L)', 'false,true,true,false': 'complex(B, I), phenotype(B, J)', 'false,true,true,false,false': 'complex(A, M), phenotype(N, D), proteinclass(N, P)', 'false': 'phenotype(A, D), function(B, E)', 'false,false': 'location(B, Q), function(B, R), function(A, R)'}, {'false,true,true,false,true,false': [0.49, 67, 45], 'false,false,true': [0.471, 538, 1048], 'true': [0.412, 193, 639], 'false,true,true,false,true,true': [0.442, 4, 11], 'false,false,false': [0.486, 1454, 942], 'false,true,true,false,false,true': [0.497, 228, 264], 'false,true,true,false,false,false': [0.484, 134, 213], 'false,true,true,true': [0.409, 63, 233], 'false,true,false': [0.479, 1793, 1079]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(B, G), function(A, H)', 'false,false,false': 'phenotype(A, I), enzyme(A, J), location(B, K)', 'false,false,false,false,false,false': 'location(A, P), function(A, Q), function(B, Q)', 'false,false,false,false,false': 'location(A, M), location(B, N)', 'false': 'phenotype(A, E), enzyme(B, F)', 'false,false,false,false': 'location(B, L), location(A, L)', 'false,false,false,false,false,false,false': 'location(A, R), function(B, S)'}, {'false,true': [0.465, 363, 193], 'false,false,true': [0.468, 728, 357], 'false,false,false,false,false,false,true': [0.487, 53, 76], 'true': [0.459, 757, 1621], 'false,false,false,false,false,true': [0.483, 829, 506], 'false,false,false,false,false,false,false,true': [0.482, 370, 214], 'false,false,false,false,false,false,false,false': [0.497, 151, 138], 'false,false,false,true': [0.472, 180, 99], 'false,false,false,false,true': [0.484, 1043, 1270]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,false': 'enzyme(B, G), complex(B, H), location(B, I)', 'false,false,false': 'proteinclass(B, J), location(B, K)', 'false,false,false,false,false,false': 'complex(A, Q), location(B, R), location(A, S)', 'false,false,false,false,false': 'location(B, P), location(A, P)', 'false': 'phenotype(A, D), phenotype(E, D), complex(E, F)', 'false,false,false,false': 'proteinclass(A, L), proteinclass(M, L), complex(M, N)', 'false,false,false,false,false,false,false': 'enzyme(A, T), location(A, U)'}, {'false,true': [0.48, 2278, 1832], 'false,false,true': [0.458, 112, 66], 'false,false,false,false,false,false,true': [0.466, 102, 48], 'true': [0.41, 193, 639], 'false,false,false,false,false,true': [0.472, 608, 867], 'false,false,false,false,false,false,false,true': [0.475, 62, 37], 'false,false,false,false,false,false,false,false': [0.492, 608, 524], 'false,false,false,true': [0.477, 338, 315], 'false,false,false,false,true': [0.476, 173, 146]}], ['interaction(A, B)', {'': 'enzyme(B, C), complex(A, D), location(B, E)', 'false,false': 'phenotype(B, H), location(A, I)', 'false,false,false': 'phenotype(A, J), function(B, K), enzyme(A, L)', 'false,false,false,false,false,false': 'function(B, S), function(A, S)', 'false,false,false,false,false': 'phenotype(A, P), phenotype(Q, P), complex(Q, R)', 'false': 'phenotype(B, F), location(A, G), location(B, G)', 'false,false,false,false': 'phenotype(A, M), function(A, N), function(B, N)', 'false,false,false,false,false,false,false': 'complex(A, T), complex(U, T), phenotype(U, W)'}, {'false,true': [0.448, 719, 1205], 'false,false,true': [0.476, 608, 558], 'false,false,false,false,false,false,true': [0.469, 346, 621], 'true': [0.466, 376, 317], 'false,false,false,false,false,true': [0.48, 821, 470], 'false,false,false,false,false,false,false,true': [0.449, 160, 64], 'false,false,false,false,false,false,false,false': [0.495, 799, 604], 'false,false,false,true': [0.471, 250, 136], 'false,false,false,false,true': [0.484, 395, 499]}], ['interaction(A, B)', {'': 'enzyme(B, C), complex(A, D), phenotype(A, E)', 'false,false': 'proteinclass(B, H)', 'false,false,false': 'phenotype(B, I), location(A, J), location(B, J)', 'false,false,false,false,false,false': 'function(A, P), function(Q, P), complex(Q, R)', 'false,false,false,false,false': 'function(A, N), function(B, N)', 'false': 'proteinclass(B, F), proteinclass(A, G)', 'false,false,false,false': 'proteinclass(A, K), location(A, L), location(B, M)', 'false,false,false,false,false,false,false': 'complex(B, S), complex(T, S), enzyme(T, U)'}, {'false,true': [0.453, 179, 271], 'false,false,true': [0.474, 612, 562], 'false,false,false,false,false,false,true': [0.482, 1549, 942], 'true': [0.46, 303, 248], 'false,false,false,false,false,true': [0.477, 705, 1087], 'false,false,false,false,false,false,false,true': [0.401, 15, 4], 'false,false,false,false,false,false,false,false': [0.497, 105, 123], 'false,false,false,true': [0.444, 482, 872], 'false,false,false,false,true': [0.479, 524, 365]}], ['interaction(A, B)', {'': 'proteinclass(B, C), proteinclass(A, D), location(B, E)', 'false,false': 'enzyme(B, H), function(A, I)', 'false,false,true,false,false,true': 'function(B, I), complex(A, M)', 'false,false,true': 'enzyme(A, H)', 'false,false,true,false,false': 'location(B, L), location(A, L)', 'false,false,true,false,false,true,false': 'complex(A, N), complex(P, N), phenotype(P, Q)', 'false': 'proteinclass(B, F), location(A, G)', 'false,false,true,false': 'phenotype(B, J), function(B, I), complex(B, K)'}, {'false,false,true,false,false,true,true': [0.463, 22, 46], 'false,false,true,false,false,true,false,true': [0.453, 84, 34], 'true': [0.453, 194, 297], 'false,false,true,false,true': [0.467, 41, 23], 'false,false,true,false,false,true,false,false': [0.488, 145, 149], 'false,false,true,true': [0.202, 3, 82], 'false,false,false': [0.474, 3040, 3100], 'false,false,true,false,false,false': [0.47, 270, 133], 'false,true': [0.472, 675, 610]}], ['interaction(A, B)', {'': 'complex(B, C), proteinclass(A, D)', 'false,false': 'enzyme(B, H), function(A, I)', 'false,false,false': 'enzyme(A, J), enzyme(K, J), complex(K, L)', 'false,false,false,true,false,false,false': 'phenotype(A, U), complex(W, L), phenotype(W, U)', 'false,false,false,true,false,false': 'complex(B, S), phenotype(A, T)', 'false': 'proteinclass(A, E), complex(A, F), location(B, G)', 'false,false,false,true,false': 'function(B, Q), proteinclass(K, R)', 'false,false,false,true': 'proteinclass(K, M), location(B, N), complex(A, P)'}, {'false,true': [0.458, 313, 217], 'false,false,true': [0.464, 743, 640], 'false,false,false,true,false,false,true': [0.441, 22, 7], 'true': [0.451, 250, 371], 'false,false,false,false': [0.475, 2948, 3089], 'false,false,false,true,false,false,false,false': [0.491, 10, 4], 'false,false,false,true,false,false,false,true': [0.473, 32, 52], 'false,false,false,true,true': [0.408, 56, 22], 'false,false,false,true,false,true': [0.473, 100, 72]}]] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'accounttype(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(B, F), tweets(G, F), tweets(G, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,false,false,false,true': 'accounttype(A, T)', 'false,false,false,false,false,false': 'tweets(A, S), accounttype(B, T), accounttype(A, U)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, E), tweets(A, E)', 'false,false,false,false': 'tweets(B, L), accounttype(B, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [0.495, 813, 615], 'false,false,true': [0.444, 312, 116], 'true': [0.481, 1542, 2720], 'false,false,false,false,false,true': [0.483, 646, 383], 'false,false,false,false,false,false,true,false': [0.492, 18, 26], 'false,false,false,false,true': [0.478, 450, 245], 'false,true': [0.0, 0, 12], 'false,false,false,false,false,false,true,true': [0.5, 22, 23], 'false,false,false,true': [0.471, 671, 334]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(A, G), tweets(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,false,false,false': 'accounttype(A, R), accounttype(B, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(A, N), tweets(P, N), tweets(P, Q)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,false,false': 'accounttype(A, K), tweets(B, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'accounttype(A, U), accounttype(W, U), tweets(W, X)'}, {'false,true': [0.469, 807, 393], 'false,false,true': [0.49, 1600, 1175], 'false,false,false,false,false,false,true': [0.481, 43, 24], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.477, 126, 71], 'false,false,false,false,false,false,false,true': [0.497, 380, 304], 'false,false,false,false,false,false,false,false': [0.499, 117, 115], 'false,false,false,true': [0.49, 561, 738], 'false,false,false,false,true': [0.453, 83, 33]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'accounttype(B, N), accounttype(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(M, L), tweets(M, G)', 'false,false,true,false,false,false,false': 'accounttype(B, Q)', 'false,false,true,false,false,false': 'tweets(B, P)'}, {'false,true': [0.468, 765, 367], 'false,false,true,false,false,true': [0.495, 220, 292], 'true': [0.465, 757, 1621], 'false,false,true,false,true': [0.43, 38, 115], 'false,false,false': [0.489, 2419, 1873], 'false,false,true,true': [0.49, 80, 52], 'false,false,true,false,false,false,false,false': [0.491, 19, 28], 'false,false,true,false,false,false,true': [0.428, 40, 13], 'false,false,true,false,false,false,false,true': [0.498, 136, 113]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,true,true': 'tweets(B, G), tweets(H, G), tweets(H, D)', 'false,true': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,true,true,false,true': 'tweets(A, K), tweets(A, L)', 'false,true,true,false': 'tweets(B, I), tweets(B, J)', 'false,true,true,false,false': 'tweets(A, M), tweets(N, D), tweets(N, P)', 'false': 'tweets(A, D), tweets(B, E)', 'false,false': 'accounttype(B, Q), tweets(B, R), tweets(A, R)'}, {'false,false,false': [0.486, 1454, 942], 'false,false,true': [0.471, 538, 1048], 'true': [0.412, 193, 639], 'false,true,true,false,true,true': [0.442, 4, 11], 'false,true,true,false,false,false': [0.484, 134, 213], 'false,true,true,false,false,true': [0.497, 228, 264], 'false,true,true,false,true,false': [0.49, 67, 45], 'false,true,true,true': [0.409, 63, 233], 'false,true,false': [0.479, 1793, 1079]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(A, J), accounttype(B, K)', 'false,false,false,false,false,false': 'accounttype(A, P), tweets(A, Q), tweets(B, Q)', 'false,false,false,false,false': 'accounttype(A, M), accounttype(B, N)', 'false': 'tweets(A, E), tweets(B, F)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, L)', 'false,false,false,false,false,false,false': 'accounttype(A, R), tweets(B, S)'}, {'false,true': [0.465, 363, 193], 'false,false,true': [0.468, 728, 357], 'false,false,false,false,false,false,true': [0.487, 53, 76], 'true': [0.459, 757, 1621], 'false,false,false,false,false,true': [0.483, 829, 506], 'false,false,false,false,false,false,false,true': [0.482, 370, 214], 'false,false,false,false,false,false,false,false': [0.497, 151, 138], 'false,false,false,true': [0.472, 180, 99], 'false,false,false,false,true': [0.484, 1043, 1270]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K)', 'false,false,false,false,false,false': 'tweets(A, Q), accounttype(B, R), accounttype(A, S)', 'false,false,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), accounttype(A, U)'}, {'false,true': [0.48, 2278, 1832], 'false,false,true': [0.458, 112, 66], 'false,false,false,false,false,false,true': [0.466, 102, 48], 'true': [0.41, 193, 639], 'false,false,false,false,false,true': [0.472, 608, 867], 'false,false,false,false,false,false,false,true': [0.475, 62, 37], 'false,false,false,false,false,false,false,false': [0.492, 608, 524], 'false,false,false,true': [0.477, 338, 315], 'false,false,false,false,true': [0.476, 173, 146]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), tweets(B, K), tweets(A, L)', 'false,false,false,false,false,false': 'tweets(B, S), tweets(A, S)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, F), accounttype(A, G), accounttype(B, G)', 'false,false,false,false': 'tweets(A, M), tweets(A, N), tweets(B, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), tweets(U, T), tweets(U, W)'}, {'false,true': [0.448, 719, 1205], 'false,false,true': [0.476, 608, 558], 'false,false,false,false,false,false,true': [0.469, 346, 621], 'true': [0.466, 376, 317], 'false,false,false,false,false,true': [0.48, 821, 470], 'false,false,false,false,false,false,false,true': [0.449, 160, 64], 'false,false,false,false,false,false,false,false': [0.495, 799, 604], 'false,false,false,true': [0.471, 250, 136], 'false,false,false,false,true': [0.484, 395, 499]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, H)', 'false,false,false': 'tweets(B, I), accounttype(A, J), accounttype(B, J)', 'false,false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'tweets(A, N), tweets(B, N)', 'false': 'tweets(B, F), tweets(A, G)', 'false,false,false,false': 'tweets(A, K), accounttype(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [0.453, 179, 271], 'false,false,true': [0.474, 612, 562], 'false,false,false,false,false,false,true': [0.482, 1549, 942], 'true': [0.46, 303, 248], 'false,false,false,false,false,true': [0.477, 705, 1087], 'false,false,false,false,false,false,false,true': [0.401, 15, 4], 'false,false,false,false,false,false,false,false': [0.497, 105, 123], 'false,false,false,true': [0.444, 482, 872], 'false,false,false,false,true': [0.479, 524, 365]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), tweets(A, I)', 'false,false,true,false,false,true': 'tweets(B, I), tweets(A, M)', 'false,false,true': 'tweets(A, H)', 'false,false,true,false,false': 'accounttype(B, L), accounttype(A, L)', 'false,false,true,false,false,true,false': 'tweets(A, N), tweets(P, N), tweets(P, Q)', 'false': 'tweets(B, F), accounttype(A, G)', 'false,false,true,false': 'tweets(B, J), tweets(B, I), tweets(B, K)'}, {'false,true': [0.472, 675, 610], 'false,false,true,false,false,true,false,false': [0.488, 145, 149], 'false,false,true,false,false,true,false,true': [0.453, 84, 34], 'true': [0.453, 194, 297], 'false,false,true,false,true': [0.467, 41, 23], 'false,false,false': [0.474, 3040, 3100], 'false,false,true,true': [0.202, 3, 82], 'false,false,true,false,false,false': [0.47, 270, 133], 'false,false,true,false,false,true,true': [0.463, 22, 46]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,false': 'tweets(B, H), tweets(A, I)', 'false,false,false': 'tweets(A, J), tweets(K, J), tweets(K, L)', 'false,false,false,true,false,false,false': 'tweets(A, U), tweets(W, L), tweets(W, U)', 'false,false,false,true,false,false': 'tweets(B, S), tweets(A, T)', 'false': 'tweets(A, E), tweets(A, F), accounttype(B, G)', 'false,false,false,true,false': 'tweets(B, Q), tweets(K, R)', 'false,false,false,true': 'tweets(K, M), accounttype(B, N), tweets(A, P)'}, {'false,true': [0.458, 313, 217], 'false,false,true': [0.464, 743, 640], 'false,false,false,true,false,false,true': [0.441, 22, 7], 'true': [0.451, 250, 371], 'false,false,false,true,false,true': [0.473, 100, 72], 'false,false,false,false': [0.475, 2948, 3089], 'false,false,false,true,false,false,false,false': [0.491, 10, 4], 'false,false,false,true,true': [0.408, 56, 22], 'false,false,false,true,false,false,false,true': [0.473, 32, 52]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- accounttype(B, C), tweets(B, D), tweets(A, D).;false;true', '0;false,false;tweets(B, F), tweets(G, F), tweets(G, H).;false;true', '0;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '0;false,false,false,false,false,false,true;accounttype(A, T).;false;false', '0;false,false,false,false,false,false;tweets(A, S), accounttype(B, T), accounttype(A, U).;true;false', '0;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '0;false;tweets(B, E), tweets(A, E).;false;true', '0;false,false,false,false;tweets(B, L), accounttype(B, M), accounttype(A, N).;false;true', '1;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, D).;false;true', '1;false,false;tweets(A, G), tweets(B, H), accounttype(A, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;false;true', '1;false,false,false,false,false,false;accounttype(A, R), accounttype(B, S), tweets(B, T).;false;true', '1;false,false,false,false,false;tweets(A, N), tweets(P, N), tweets(P, Q).;false;true', '1;false;tweets(B, E), tweets(A, F).;false;true', '1;false,false,false,false;accounttype(A, K), tweets(B, L), accounttype(B, M).;false;true', '1;false,false,false,false,false,false,false;accounttype(A, U), accounttype(W, U), tweets(W, X).;false;false', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false,false;tweets(A, G), tweets(A, H), tweets(B, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;accounttype(B, N), accounttype(A, N).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false,true,false;tweets(B, L), tweets(M, L), tweets(M, G).;false;true', '2;false,false,true,false,false,false,false;accounttype(B, Q).;false;false', '2;false,false,true,false,false,false;tweets(B, P).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,true,true;tweets(B, G), tweets(H, G), tweets(H, D).;false;true', '3;false,true;tweets(A, E), accounttype(B, F), accounttype(A, F).;true;false', '3;false,true,true,false,true;tweets(A, K), tweets(A, L).;false;false', '3;false,true,true,false;tweets(B, I), tweets(B, J).;true;true', '3;false,true,true,false,false;tweets(A, M), tweets(N, D), tweets(N, P).;false;false', '3;false;tweets(A, D), tweets(B, E).;true;true', '3;false,false;accounttype(B, Q), tweets(B, R), tweets(A, R).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '4;false,false;tweets(B, G), tweets(A, H).;false;true', '4;false,false,false;tweets(A, I), tweets(A, J), accounttype(B, K).;false;true', '4;false,false,false,false,false,false;accounttype(A, P), tweets(A, Q), tweets(B, Q).;false;true', '4;false,false,false,false,false;accounttype(A, M), accounttype(B, N).;false;true', '4;false;tweets(A, E), tweets(B, F).;false;true', '4;false,false,false,false;accounttype(B, L), accounttype(A, L).;false;true', '4;false,false,false,false,false,false,false;accounttype(A, R), tweets(B, S).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '5;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(B, K).;false;true', '5;false,false,false,false,false,false;tweets(A, Q), accounttype(B, R), accounttype(A, S).;false;true', '5;false,false,false,false,false;accounttype(B, P), accounttype(A, P).;false;true', '5;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '5;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '5;false,false,false,false,false,false,false;tweets(A, T), accounttype(A, U).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '6;false,false;tweets(B, H), accounttype(A, I).;false;true', '6;false,false,false;tweets(A, J), tweets(B, K), tweets(A, L).;false;true', '6;false,false,false,false,false,false;tweets(B, S), tweets(A, S).;false;true', '6;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '6;false;tweets(B, F), accounttype(A, G), accounttype(B, G).;false;true', '6;false,false,false,false;tweets(A, M), tweets(A, N), tweets(B, N).;false;true', '6;false,false,false,false,false,false,false;tweets(A, T), tweets(U, T), tweets(U, W).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '7;false,false;tweets(B, H).;false;true', '7;false,false,false;tweets(B, I), accounttype(A, J), accounttype(B, J).;false;true', '7;false,false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '7;false,false,false,false,false;tweets(A, N), tweets(B, N).;false;true', '7;false;tweets(B, F), tweets(A, G).;false;true', '7;false,false,false,false;tweets(A, K), accounttype(A, L), accounttype(B, M).;false;true', '7;false,false,false,false,false,false,false;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '8;false,false;tweets(B, H), tweets(A, I).;true;false', '8;false,false,true,false,false,true;tweets(B, I), tweets(A, M).;false;true', '8;false,false,true;tweets(A, H).;false;true', '8;false,false,true,false,false;accounttype(B, L), accounttype(A, L).;true;false', '8;false,false,true,false,false,true,false;tweets(A, N), tweets(P, N), tweets(P, Q).;false;false', '8;false;tweets(B, F), accounttype(A, G).;false;true', '8;false,false,true,false;tweets(B, J), tweets(B, I), tweets(B, K).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,false;tweets(B, H), tweets(A, I).;false;true', '9;false,false,false;tweets(A, J), tweets(K, J), tweets(K, L).;true;false', '9;false,false,false,true,false,false,false;tweets(A, U), tweets(W, L), tweets(W, U).;false;false', '9;false,false,false,true,false,false;tweets(B, S), tweets(A, T).;false;true', '9;false;tweets(A, E), tweets(A, F), accounttype(B, G).;false;true', '9;false,false,false,true,false;tweets(B, Q), tweets(K, R).;false;true', '9;false,false,false,true;tweets(K, M), accounttype(B, N), tweets(A, P).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, F), tweets(G, F), tweets(G, H) )
%   | | then return 0.30622585817643094;  // std dev = 11,340, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.11835301673216558;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | else if ( tweets(B, L), accounttype(B, M), accounttype(A, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, S), accounttype(B, T), accounttype(A, U) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.1951929708751096;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(B, H), accounttype(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then return 0.1473963106472085;  // std dev = 7,499, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | | | else if ( accounttype(A, K), tweets(B, L), accounttype(B, M) )
%   | | | | then return 0.518771734550529;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | | | else if ( tweets(A, N), tweets(P, N), tweets(P, Q) )
%   | | | | | then return 0.1388971435864832;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | | | else if ( accounttype(A, R), accounttype(B, S), tweets(B, T) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( accounttype(A, U), accounttype(W, U), tweets(W, X) )
%   | | | | | | | then return 0.07249255142479445;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.22458524974092509;  // std dev = 11,226, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(A, H), tweets(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.07576877051250398;  // std dev = 6,646, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(B, E) )
%   | then if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.12390498243203289;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( accounttype(B, G), tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16264972922799997;  // std dev = 9,868, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F) )
%   | then return 0.0996823620765302;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(B, G), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, I), tweets(A, J), accounttype(B, K) )
%   | | | then return 0.04585491996960971;  // std dev = 6,143, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | else if ( accounttype(B, L), accounttype(A, L) )
%   | | | | then return 0.11963962893963158;  // std dev = 5,669, 139,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=53 */
%   | | | | else if ( accounttype(A, M), accounttype(B, N) )
%   | | | | | then return 0.3173241499358914;  // std dev = 4,694, 103,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=68 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.14693358879218898;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.0634720585919967;  // std dev = 10,607, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.19427716907428824;  // std dev = 6,883, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( tweets(B, J), accounttype(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(B, P), accounttype(A, P) )
%   | | | | | then return -0.025959499594867687;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | | | else if ( tweets(A, Q), accounttype(B, R), accounttype(A, S) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, T), accounttype(A, U) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.025930721005321313;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.09769852658342398;  // std dev = 16,346, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), accounttype(A, G), accounttype(B, G) )
%   | then return 0.08712652051376313;  // std dev = 5,170, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.22115998680519616;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | else if ( tweets(A, J), tweets(B, K), tweets(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, M), tweets(A, N), tweets(B, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0.026869935553451317;  // std dev = 6,143, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | | else if ( tweets(B, S), tweets(A, S) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(A, T), tweets(U, T), tweets(U, W) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.02137598518626744;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.07414340905508486;  // std dev = 16,344, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, H) )
%   | | then return 0.11292603246687144;  // std dev = 6,847, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( tweets(B, I), accounttype(A, J), accounttype(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, K), accounttype(A, L), accounttype(B, M) )
%   | | | | then return 0.0220288086971347;  // std dev = 6,143, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | else if ( tweets(A, N), tweets(B, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, S), tweets(T, S), tweets(T, U) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.01765460772117762;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.056175605055899046;  // std dev = 16,343, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), accounttype(A, G) )
%   | then return 0.08574772381307212;  // std dev = 6,846, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(B, H), tweets(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.012594715696289777;  // std dev = 6,643, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.04254006862558875;  // std dev = 16,343, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(A, E), tweets(A, F), accounttype(B, G) )
%   | then return 0.015689632045069114;  // std dev = 6,143, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else if ( tweets(B, H), tweets(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(A, J), tweets(K, J), tweets(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05181074830908113;  // std dev = 7,310, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
Results
   AUC ROC   = 0.615302
   AUC PR    = 0.608261
   CLL	      = -0.678969
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 172.644 seconds
Total inference time: 0.81 seconds
AUC ROC: 0.615302


Results in test set
   AUC ROC   = 0.615302
   AUC PR    = 0.608261
   CLL	      = -0.678969
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total inference time: 0.81 seconds
AUC ROC: 0.615302
Structure after Parameter Learning
[['follows(A, B)', {'': 'accounttype(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(B, F), tweets(G, F), tweets(G, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,false,false,false': 'tweets(A, S), accounttype(B, T), accounttype(A, U)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, E), tweets(A, E)', 'false,false,false,false': 'tweets(B, L), accounttype(B, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [2.522, 31, 8], 'false,true': [0.0, 0, 0], 'false,false,true': [11.34, 287, 233], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [6.142, 145, 51], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(A, G), tweets(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,false,false,false': 'accounttype(A, R), accounttype(B, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(A, N), tweets(P, N), tweets(P, Q)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,false,false': 'accounttype(A, K), tweets(B, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'accounttype(A, U), accounttype(W, U), tweets(W, X)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [3.846, 50, 21], 'false,false,false,false,false,false,false,true': [1.247, 7, 2], 'false,false,false,false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [7.499, 181, 83], 'false,false,false,false,true': [4.434, 28, 66]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)'}, {'false,true': [11.226, 287, 233], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.646, 176, 59], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(A, D), tweets(B, E)', 'false,true': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false': 'accounttype(B, G), tweets(B, H), tweets(A, H)'}, {'false,true,true': [0.0, 0, 0], 'false,false,false': [9.868, 266, 172], 'false,false,true': [0.0, 0, 0], 'false,true,false': [8.636, 197, 120], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false': 'tweets(A, I), tweets(A, J), accounttype(B, K)', 'false,false,false,false,false': 'accounttype(A, M), accounttype(B, N)', 'false': 'tweets(A, E), tweets(B, F)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, L)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [4.694, 35, 68], 'false,false,false,true': [6.143, 145, 51], 'false,false,false,false,true': [5.669, 86, 53]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K)', 'false,false,false,false,false,false': 'tweets(A, Q), accounttype(B, R), accounttype(A, S)', 'false,false,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), accounttype(A, U)'}, {'false,true': [10.607, 342, 171], 'false,false,true': [6.883, 90, 113], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [2.191, 24, 6], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [1.247, 7, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), tweets(B, K), tweets(A, L)', 'false,false,false,false,false,false': 'tweets(B, S), tweets(A, S)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, F), accounttype(A, G), accounttype(B, G)', 'false,false,false,false': 'tweets(A, M), tweets(A, N), tweets(B, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), tweets(U, T), tweets(U, W)'}, {'false,true': [5.17, 62, 47], 'false,false,true': [4.434, 28, 66], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [16.346, 514, 608], 'false,false,false,false,false,true': [6.143, 145, 51], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.521, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, H)', 'false,false,false': 'tweets(B, I), accounttype(A, J), accounttype(B, J)', 'false,false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'tweets(A, N), tweets(B, N)', 'false': 'tweets(B, F), tweets(A, G)', 'false,false,false,false': 'tweets(A, K), accounttype(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [6.847, 90, 113], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [16.344, 514, 608], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.521, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [6.143, 145, 51]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false': 'tweets(B, F), accounttype(A, G)', 'false,false': 'tweets(B, H), tweets(A, I)'}, {'false,true': [6.846, 90, 113], 'false,false,true': [0.0, 0, 0], 'false,false,false': [6.643, 176, 59], 'true': [16.343, 514, 608]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false': 'tweets(A, E), tweets(A, F), accounttype(B, G)', 'false,false': 'tweets(B, H), tweets(A, I)', 'false,false,false': 'tweets(A, J), tweets(K, J), tweets(K, L)'}, {'false,false,false,false': [7.31, 121, 121], 'false,true': [6.143, 145, 51], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'true': [16.343, 514, 608]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- accounttype(B, C), tweets(B, D), tweets(A, D).;false;true', '0;false,false;tweets(B, F), tweets(G, F), tweets(G, H).;false;true', '0;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '0;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;false', '0;false;tweets(B, E), tweets(A, E).;false;true', '0;false,false,false,false;tweets(B, L), accounttype(B, M), accounttype(A, N).;false;true', '1;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, D).;false;true', '1;false;tweets(B, E), tweets(A, F).;false;false', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false;tweets(A, D), tweets(B, E).;false;true', '3;false,false;accounttype(B, G), tweets(B, H), tweets(A, H).;false;false', '4;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '4;false;tweets(A, E), tweets(B, F).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '5;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(B, K).;false;true', '5;false,false,false,false,false;accounttype(B, P), accounttype(A, P).;false;false', '5;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '5;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '6;false,false;tweets(B, H), accounttype(A, I).;false;true', '6;false,false,false;tweets(A, J), tweets(B, K), tweets(A, L).;false;true', '6;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;false', '6;false;tweets(B, F), accounttype(A, G), accounttype(B, G).;false;true', '6;false,false,false,false;tweets(A, M), tweets(A, N), tweets(B, N).;false;true', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '8;false;tweets(B, F), accounttype(A, G).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false;tweets(A, E), tweets(A, F), accounttype(B, G).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,true', 0), ('false,false,false,false,true', 0), ('false,false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #2: [('false,false,true', 0), ('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,false', 0), ('true', 0.6062111801242236), ('false,true', 0.6214511041009464), ('false,false,false,true', 0.6856060606060606), ('false,false,false,false,true', 0.7021276595744681), ('false,false,false,false,false,true', 0.704225352112676), ('false,false,false,false,false,false,false,true', 0.7777777777777778)]
Tree #3: [('false,false,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,false', 0.7489361702127659)]
Tree #4: [('false,true,true', 0), ('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true,false', 0.6214511041009464)]
Tree #5: [('false,false,true', 0), ('false,false,false,false,false,false', 0), ('true', 0.6062111801242236), ('false,false,false,false,true', 0.6187050359712231), ('false,true', 0.6214511041009464), ('false,false,false,false,false,true', 0.6601941747572816), ('false,false,false,true', 0.7397959183673469)]
Tree #6: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,true', 0.5566502463054187), ('true', 0.6062111801242236), ('false,true', 0.6666666666666666), ('false,false,false,false,false,false,false,false', 0.7777777777777778), ('false,false,false,false,false,true', 0.8)]
Tree #7: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5688073394495413), ('false,false,true', 0.7021276595744681), ('false,false,false,false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #8: [('false,true', 0), ('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('true', 0.5418894830659536), ('false,false,true', 0.5566502463054187), ('false,false,false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #9: [('false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5566502463054187), ('false,false,false', 0.7489361702127659)]
Tree #10: [('false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false', 0.5), ('true', 0.5418894830659536), ('false,true', 0.7397959183673469)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, E) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, F), tweets(G, F), tweets(G, H) )
%   | | then return 0.30622585817643094;  // std dev = 11,340, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.11835301673216558;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | else if ( tweets(B, L), accounttype(B, M), accounttype(A, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.06327714022771751;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.1951929708751096;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.22418104843852846;  // std dev = 10,133, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.23175115322230605;  // std dev = 11,331, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else return 0.06358487307981188;  // std dev = 6,645, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(B, E) )
%   | then return 0.12254250146977527;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( accounttype(B, F), tweets(B, G), tweets(A, G) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.16557769971976374;  // std dev = 10,030, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(B, F) )
%   | then return 0.09851379748982914;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.13540442597695274;  // std dev = 10,015, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.14693358879218898;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return 0.0518289308132045;  // std dev = 10,625, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.232959049127184;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | else if ( tweets(B, J), accounttype(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(B, P), accounttype(A, P) )
%   | | | | | then return -0.04085918619241018;  // std dev = 2,191, 30,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=6 */
%   | | | | | else return -0.018636963970187867;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.09812361211382825;  // std dev = 16,345, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), accounttype(A, G), accounttype(B, G) )
%   | then return 0.05456824724394724;  // std dev = 5,170, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.3255032462679577;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | else if ( tweets(A, J), tweets(B, K), tweets(A, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, M), tweets(A, N), tweets(B, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return -7.395068211961355E-4;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | | else return -0.029262509706834063;  // std dev = 2,521, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.07448069754593725;  // std dev = 16,343, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else return 0.0608872185924914;  // std dev = 9,736, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.05644124667215084;  // std dev = 16,342, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), accounttype(A, G) )
%   | then return 0.12173562681844173;  // std dev = 6,964, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else return -0.01623552383452569;  // std dev = 6,641, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.042748475461080945;  // std dev = 16,342, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(A, E), tweets(A, F), accounttype(B, G) )
%   | then return -0.009296513611109291;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.07180324879158333;  // std dev = 7,439, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
Results
   AUC ROC   = 0.586333
   AUC PR    = 0.554322
   CLL	      = -0.682489
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 179.276 seconds
Total inference time: 0.708 seconds
AUC ROC: 0.586333


Best model AUC ROC so far: 0.615302


******************************************
Best model found
******************************************
Total revision time: 353.438
Best validation AUC ROC: 0.615302


Results
   AUC ROC   = 0.689433
   AUC PR    = 0.654107
   CLL	      = -0.636633
   Precision = 0.638487 at threshold = 0.5
   Recall    = 0.810734
   F1        = 0.714375


Total inference time: 0.996 seconds
AUC ROC: 0.689433
Dataset: yeast->twitter, Fold: 1, Type: transfer, Time: 02:59:46
{'Parameter Learning results': {'F1': 0.714375, 'Learning time': 172.644, 'Recall': 0.810734, 'AUC PR': 0.654107, 'AUC ROC': 0.689433, 'CLL': -0.636633, 'Inference time': 1.316, 'Precision': [0.638487, 0.5]}, 'F1': 0.714375, 'Learning time': 353.438, 'Recall': 0.810734, 'AUC PR': 0.654107, 'AUC ROC': 0.689433, 'Mapping results': {'Finding best mapping': 0.8251674175262451, 'Knowledge compiling time': 0.16846752166748047, 'Total time': 5.532972097396851, 'Generating mappings time': 0.0980234146118164, 'Possible mappings': 1458, 'Generating paths time': 4.4413065910339355}, 'CLL': -0.636633, 'Inference time': 0.996, 'Precision': [0.638487, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2953217099686181;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.6170141833264585;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.12481560176617795;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.28934159564997186;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.3138451376311591;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.5602765946739812;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.09040699961564004;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.1456489350995117;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.25544396504018674;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.5243494850117562;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then if ( tweets(A, G) )
%   | | | then if ( accounttype(H, F), tweets(H, E), tweets(H, G) )
%   | | | | then return 0.10893247925776796;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.25035142239059655;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.27119663943451633;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else return 0.4776435248675061;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, J), accounttype(B, J) )
%   | | then return 0.07904155157974005;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.12697824250829925;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21434006589346677;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.4178192410070285;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.09391529972732618;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21027160903852193;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22687127601954168;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.3839327874961612;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.09115193712242843;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.03799870373894804;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1750364240763374;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.3187802468060836;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.08007894754641993;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17197435224648763;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.18440609551807563;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2955537862431351;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.057105970757237993;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.09628175221440763;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.13980372601974603;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.23938432568879928;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.06761908965919006;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, H) )
%   | | | then return 0.14645750237908162;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | | then return 0.13761291641748175;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.2227642562770938;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.0669944884018586;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.02291857739175187;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.10979170699664419;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.1801875707461082;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.05661907716341858;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.10828649707955408;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.11433257931207602;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.16714218601195022;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.03972978884506359;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.0705646110501786;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.0851734320706171;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.13698536343358944;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.04707019797674135;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.08417209890999892;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.08818083037033851;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.1258983666871707;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.04785769983713238;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.012215218966472511;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.06550974051695709;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.10535150322458203;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.03889723332668014;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.06486167644453979;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.06745468144626868;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.09548737537629778;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.02681539844407904;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.05046507171832119;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05008712778509982;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.08189740035811596;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.03198323809501064;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.11243535096764834;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05131798679728922;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.04967885473545552;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.07294806483386942;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.033523512445940075;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.0051254355304122265;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.03813886296629491;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.06425345980304739;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then if ( tweets(A, G) )
%   | | | then if ( accounttype(H, F), tweets(H, E), tweets(H, G) )
%   | | | | then return 0.026190156472953672;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | | else return 0.09352720014861136;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0378896114214694;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03889950372719807;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else return 0.05609464931900332;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, J) )
%   | | then return 0.02760290361140207;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.004305059141106619;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.748983
   AUC PR    = 0.72186
   CLL	      = -0.59057
   Precision = 0.789474 at threshold = 0.5
   Recall    = 0.529661
   F1        = 0.633981


Total learning time: 632.229 seconds
Total inference time: 1.644 seconds
AUC ROC: 0.748983


Dataset: yeast->twitter, Fold: 1, Type: scratch, Time: 03:10:21
{'F1': 0.633981, 'Learning time': 632.229, 'Recall': 0.529661, 'AUC PR': 0.72186, 'AUC ROC': 0.748983, 'CLL': -0.59057, 'Inference time': 1.644, 'Precision': [0.789474, 0.5]}


Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'accounttype(B, C), accounttype(B, D), accounttype(A, D)', 'false,false': 'tweets(B, F), tweets(G, F), tweets(G, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,false,false,false,false,true': 'accounttype(A, T)', 'false,false,false,false,false,false': 'tweets(A, S), accounttype(B, T), accounttype(A, U)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, E), tweets(A, E)', 'false,false,false,false': 'tweets(B, L), accounttype(B, M), accounttype(A, N)'}, {'false,false,false,false,false,false,false': [0.495, 813, 615], 'false,false,true': [0.444, 312, 116], 'true': [0.481, 1542, 2720], 'false,false,false,false,false,true': [0.483, 646, 383], 'false,false,false,false,false,false,true,false': [0.492, 18, 26], 'false,false,false,false,true': [0.478, 450, 245], 'false,true': [0.0, 0, 12], 'false,false,false,false,false,false,true,true': [0.5, 22, 23], 'false,false,false,true': [0.471, 671, 334]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), accounttype(A, D)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)', 'false,false,false,false,false,false': 'accounttype(A, R), accounttype(B, S), tweets(B, T)', 'false,false,false,false,false': 'tweets(A, N), tweets(P, N), tweets(P, Q)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'accounttype(A, K), tweets(B, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'accounttype(A, U), accounttype(W, U), tweets(W, X)'}, {'false,true': [0.469, 807, 393], 'false,false,true': [0.49, 1600, 1175], 'false,false,false,false,false,false,true': [0.481, 43, 24], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.477, 126, 71], 'false,false,false,false,false,false,false,true': [0.497, 380, 304], 'false,false,false,false,false,false,false,false': [0.499, 117, 115], 'false,false,false,true': [0.49, 561, 738], 'false,false,false,false,true': [0.453, 83, 33]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'accounttype(B, N), accounttype(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, L), tweets(M, L), tweets(M, G)', 'false,false,true,false,false,false,false': 'accounttype(B, Q)', 'false,false,true,false,false,false': 'tweets(B, P)'}, {'false,true': [0.468, 765, 367], 'false,false,true,false,false,true': [0.495, 220, 292], 'true': [0.465, 757, 1621], 'false,false,true,false,true': [0.43, 38, 115], 'false,false,false': [0.489, 2419, 1873], 'false,false,true,true': [0.49, 80, 52], 'false,false,true,false,false,false,false,false': [0.491, 19, 28], 'false,false,true,false,false,false,true': [0.428, 40, 13], 'false,false,true,false,false,false,false,true': [0.498, 136, 113]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,true,true': 'tweets(B, G), tweets(H, G), tweets(H, D)', 'false,true': 'accounttype(A, E), accounttype(B, F), accounttype(A, F)', 'false,true,true,false,true': 'tweets(A, K), tweets(A, L)', 'false,true,true,false': 'tweets(B, I), tweets(B, J)', 'false,true,true,false,false': 'tweets(A, M), tweets(N, D), tweets(N, P)', 'false': 'tweets(A, D), accounttype(B, E)', 'false,false': 'accounttype(B, Q), accounttype(B, R), accounttype(A, R)'}, {'false,false,false': [0.486, 1454, 942], 'false,false,true': [0.471, 538, 1048], 'true': [0.412, 193, 639], 'false,true,true,false,true,true': [0.442, 4, 11], 'false,true,true,false,false,false': [0.484, 134, 213], 'false,true,true,false,false,true': [0.497, 228, 264], 'false,true,true,false,true,false': [0.49, 67, 45], 'false,true,true,true': [0.409, 63, 233], 'false,true,false': [0.479, 1793, 1079]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(B, G), accounttype(A, H)', 'false,false,false': 'tweets(A, I), tweets(A, J), accounttype(B, K)', 'false,false,false,false,false,false': 'accounttype(A, P), accounttype(A, Q), accounttype(B, Q)', 'false,false,false,false,false': 'accounttype(A, M), accounttype(B, N)', 'false': 'tweets(A, E), tweets(B, F)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, L)', 'false,false,false,false,false,false,false': 'accounttype(A, R), accounttype(B, S)'}, {'false,true': [0.465, 363, 193], 'false,false,true': [0.468, 728, 357], 'false,false,false,false,false,false,true': [0.487, 53, 76], 'true': [0.459, 757, 1621], 'false,false,false,false,false,true': [0.483, 829, 506], 'false,false,false,false,false,false,false,true': [0.482, 370, 214], 'false,false,false,false,false,false,false,false': [0.497, 151, 138], 'false,false,false,true': [0.472, 180, 99], 'false,false,false,false,true': [0.484, 1043, 1270]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K)', 'false,false,false,false,false,false': 'tweets(A, Q), accounttype(B, R), accounttype(A, S)', 'false,false,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), accounttype(A, U)'}, {'false,true': [0.48, 2278, 1832], 'false,false,true': [0.458, 112, 66], 'false,false,false,false,false,false,true': [0.466, 102, 48], 'true': [0.41, 193, 639], 'false,false,false,false,false,true': [0.472, 608, 867], 'false,false,false,false,false,false,false,true': [0.475, 62, 37], 'false,false,false,false,false,false,false,false': [0.492, 608, 524], 'false,false,false,true': [0.477, 338, 315], 'false,false,false,false,true': [0.476, 173, 146]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), accounttype(B, K), tweets(A, L)', 'false,false,false,false,false,false': 'accounttype(B, S), accounttype(A, S)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, F), accounttype(A, G), accounttype(B, G)', 'false,false,false,false': 'tweets(A, M), accounttype(A, N), accounttype(B, N)', 'false,false,false,false,false,false,false': 'tweets(A, T), tweets(U, T), tweets(U, W)'}, {'false,true': [0.448, 719, 1205], 'false,false,true': [0.476, 608, 558], 'false,false,false,false,false,false,true': [0.469, 346, 621], 'true': [0.466, 376, 317], 'false,false,false,false,false,true': [0.48, 821, 470], 'false,false,false,false,false,false,false,true': [0.449, 160, 64], 'false,false,false,false,false,false,false,false': [0.495, 799, 604], 'false,false,false,true': [0.471, 250, 136], 'false,false,false,false,true': [0.484, 395, 499]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, H)', 'false,false,false': 'tweets(B, I), accounttype(A, J), accounttype(B, J)', 'false,false,false,false,false,false': 'accounttype(A, P), accounttype(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'accounttype(A, N), accounttype(B, N)', 'false': 'tweets(B, F), tweets(A, G)', 'false,false,false,false': 'tweets(A, K), accounttype(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [0.453, 179, 271], 'false,false,true': [0.474, 612, 562], 'false,false,false,false,false,false,true': [0.482, 1549, 942], 'true': [0.46, 303, 248], 'false,false,false,false,false,true': [0.477, 705, 1087], 'false,false,false,false,false,false,false,true': [0.401, 15, 4], 'false,false,false,false,false,false,false,false': [0.497, 105, 123], 'false,false,false,true': [0.444, 482, 872], 'false,false,false,false,true': [0.479, 524, 365]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,true,false,false,true': 'accounttype(B, I), tweets(A, M)', 'false,false,true': 'tweets(A, H)', 'false,false,true,false,false': 'accounttype(B, L), accounttype(A, L)', 'false,false,true,false,false,true,false': 'tweets(A, N), tweets(P, N), tweets(P, Q)', 'false': 'tweets(B, F), accounttype(A, G)', 'false,false,true,false': 'tweets(B, J), accounttype(B, I), tweets(B, K)'}, {'false,true': [0.472, 675, 610], 'false,false,true,false,false,true,false,false': [0.488, 145, 149], 'false,false,true,false,false,true,false,true': [0.453, 84, 34], 'true': [0.453, 194, 297], 'false,false,true,false,true': [0.467, 41, 23], 'false,false,false': [0.474, 3040, 3100], 'false,false,true,true': [0.202, 3, 82], 'false,false,true,false,false,false': [0.47, 270, 133], 'false,false,true,false,false,true,true': [0.463, 22, 46]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), tweets(K, J), tweets(K, L)', 'false,false,false,true,false,false,false': 'tweets(A, U), tweets(W, L), tweets(W, U)', 'false,false,false,true,false,false': 'tweets(B, S), tweets(A, T)', 'false': 'tweets(A, E), tweets(A, F), accounttype(B, G)', 'false,false,false,true,false': 'accounttype(B, Q), tweets(K, R)', 'false,false,false,true': 'tweets(K, M), accounttype(B, N), tweets(A, P)'}, {'false,true': [0.458, 313, 217], 'false,false,true': [0.464, 743, 640], 'false,false,false,true,false,false,true': [0.441, 22, 7], 'true': [0.451, 250, 371], 'false,false,false,true,false,true': [0.473, 100, 72], 'false,false,false,false': [0.475, 2948, 3089], 'false,false,false,true,false,false,false,false': [0.491, 10, 4], 'false,false,false,true,true': [0.408, 56, 22], 'false,false,false,true,false,false,false,true': [0.473, 32, 52]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- accounttype(B, C), accounttype(B, D), accounttype(A, D).;false;true', '0;false,false;tweets(B, F), tweets(G, F), tweets(G, H).;false;true', '0;false,false,false;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '0;false,false,false,false,false,false,true;accounttype(A, T).;false;false', '0;false,false,false,false,false,false;tweets(A, S), accounttype(B, T), accounttype(A, U).;true;false', '0;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '0;false;tweets(B, E), tweets(A, E).;false;true', '0;false,false,false,false;tweets(B, L), accounttype(B, M), accounttype(A, N).;false;true', '1;;follows(A, B) :- tweets(B, C), accounttype(B, D), accounttype(A, D).;false;true', '1;false,false;tweets(A, G), accounttype(B, H), accounttype(A, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(A, J).;false;true', '1;false,false,false,false,false,false;accounttype(A, R), accounttype(B, S), tweets(B, T).;false;true', '1;false,false,false,false,false;tweets(A, N), tweets(P, N), tweets(P, Q).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;accounttype(A, K), tweets(B, L), accounttype(B, M).;false;true', '1;false,false,false,false,false,false,false;accounttype(A, U), accounttype(W, U), tweets(W, X).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;accounttype(B, N), accounttype(A, N).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false,true,false;tweets(B, L), tweets(M, L), tweets(M, G).;false;true', '2;false,false,true,false,false,false,false;accounttype(B, Q).;false;false', '2;false,false,true,false,false,false;tweets(B, P).;false;true', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,true,true;tweets(B, G), tweets(H, G), tweets(H, D).;false;true', '3;false,true;accounttype(A, E), accounttype(B, F), accounttype(A, F).;true;false', '3;false,true,true,false,true;tweets(A, K), tweets(A, L).;false;false', '3;false,true,true,false;tweets(B, I), tweets(B, J).;true;true', '3;false,true,true,false,false;tweets(A, M), tweets(N, D), tweets(N, P).;false;false', '3;false;tweets(A, D), accounttype(B, E).;true;true', '3;false,false;accounttype(B, Q), accounttype(B, R), accounttype(A, R).;false;false', '4;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '4;false,false;tweets(B, G), accounttype(A, H).;false;true', '4;false,false,false;tweets(A, I), tweets(A, J), accounttype(B, K).;false;true', '4;false,false,false,false,false,false;accounttype(A, P), accounttype(A, Q), accounttype(B, Q).;false;true', '4;false,false,false,false,false;accounttype(A, M), accounttype(B, N).;false;true', '4;false;tweets(A, E), tweets(B, F).;false;true', '4;false,false,false,false;accounttype(B, L), accounttype(A, L).;false;true', '4;false,false,false,false,false,false,false;accounttype(A, R), accounttype(B, S).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '5;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(B, K).;false;true', '5;false,false,false,false,false,false;tweets(A, Q), accounttype(B, R), accounttype(A, S).;false;true', '5;false,false,false,false,false;accounttype(B, P), accounttype(A, P).;false;true', '5;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '5;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;true', '5;false,false,false,false,false,false,false;tweets(A, T), accounttype(A, U).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '6;false,false;tweets(B, H), accounttype(A, I).;false;true', '6;false,false,false;tweets(A, J), accounttype(B, K), tweets(A, L).;false;true', '6;false,false,false,false,false,false;accounttype(B, S), accounttype(A, S).;false;true', '6;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '6;false;tweets(B, F), accounttype(A, G), accounttype(B, G).;false;true', '6;false,false,false,false;tweets(A, M), accounttype(A, N), accounttype(B, N).;false;true', '6;false,false,false,false,false,false,false;tweets(A, T), tweets(U, T), tweets(U, W).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;true', '7;false,false;tweets(B, H).;false;true', '7;false,false,false;tweets(B, I), accounttype(A, J), accounttype(B, J).;false;true', '7;false,false,false,false,false,false;accounttype(A, P), accounttype(Q, P), tweets(Q, R).;false;true', '7;false,false,false,false,false;accounttype(A, N), accounttype(B, N).;false;true', '7;false;tweets(B, F), tweets(A, G).;false;true', '7;false,false,false,false;tweets(A, K), accounttype(A, L), accounttype(B, M).;false;true', '7;false,false,false,false,false,false,false;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '8;false,false;tweets(B, H), accounttype(A, I).;true;false', '8;false,false,true,false,false,true;accounttype(B, I), tweets(A, M).;false;true', '8;false,false,true;tweets(A, H).;false;true', '8;false,false,true,false,false;accounttype(B, L), accounttype(A, L).;true;false', '8;false,false,true,false,false,true,false;tweets(A, N), tweets(P, N), tweets(P, Q).;false;false', '8;false;tweets(B, F), accounttype(A, G).;false;true', '8;false,false,true,false;tweets(B, J), accounttype(B, I), tweets(B, K).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,false;tweets(B, H), accounttype(A, I).;false;true', '9;false,false,false;tweets(A, J), tweets(K, J), tweets(K, L).;true;false', '9;false,false,false,true,false,false,false;tweets(A, U), tweets(W, L), tweets(W, U).;false;false', '9;false,false,false,true,false,false;tweets(B, S), tweets(A, T).;false;true', '9;false;tweets(A, E), tweets(A, F), accounttype(B, G).;false;true', '9;false,false,false,true,false;accounttype(B, Q), tweets(K, R).;false;true', '9;false,false,false,true;tweets(K, M), accounttype(B, N), tweets(A, P).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.20513997223138983;  // std dev = 13,303, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( tweets(B, E), tweets(A, E) )
%   | then return 0.6472308209555876;  // std dev = 8,190, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   | else if ( tweets(B, F), tweets(G, F), tweets(G, H) )
%   | | then return 0.4219787223335519;  // std dev = 6,800, 188,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=106 */
%   | | else if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.15360348055405781;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.20396958410329;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4897413182281217;  // std dev = 10,852, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, I) )
%   | | then return 0.0895025576391871;  // std dev = 5,524, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( accounttype(B, J), accounttype(A, J) )
%   | | | then return -0.025844080492980117;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.1734051668150993;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.3928265790891058;  // std dev = 10,831, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.05975147510841893;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.074963899476521;  // std dev = 3,468, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2971288175582765;  // std dev = 13,245, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), accounttype(B, E) )
%   | then if ( accounttype(A, E), accounttype(B, F), accounttype(A, F) )
%   | | then if ( tweets(B, G), tweets(H, G), tweets(H, D) )
%   | | | then return -0.1394904089949273;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else if ( tweets(B, I), tweets(B, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, K), tweets(L, D), tweets(L, M) )
%   | | | | | then return 0.05070058139940365;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.062095522620418994;  // std dev = 6,132, 160,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=62 */
%   | else if ( accounttype(B, N), accounttype(B, P), accounttype(A, P) )
%   | | then return 0.08394349048020092;  // std dev = 4,694, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else return 0.4130569319840116;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.1100490735735206;  // std dev = 12,037, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), tweets(B, F) )
%   | then return 0.22574477615817823;  // std dev = 10,057, 519,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=367 */
%   | else if ( tweets(B, G), accounttype(A, H) )
%   | | then return 0.31225413241724986;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, I), tweets(A, J), accounttype(B, K) )
%   | | | then return 0.05870723311051011;  // std dev = 5,523, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | else if ( accounttype(B, L), accounttype(A, L) )
%   | | | | then return -0.04533553278208272;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.19305930268089389;  // std dev = 13,173, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.03226141714776423;  // std dev = 8,498, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.149115508341253;  // std dev = 5,652, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( tweets(B, J), accounttype(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(B, P), accounttype(A, P) )
%   | | | | | then return -0.03850703946408071;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.09581075918577996;  // std dev = 14,942, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), accounttype(A, G), accounttype(B, G) )
%   | then return 0.0468321567869881;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.19804124109360527;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, J), accounttype(B, K), tweets(A, L) )
%   | | | then return 0.05448158188803842;  // std dev = 5,523, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | else if ( tweets(A, M), accounttype(A, N), accounttype(B, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( accounttype(B, S), accounttype(A, S) )
%   | | | | | | then return -0.032859839856108346;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.07403400455060857;  // std dev = 14,932, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(A, G) )
%   | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( tweets(B, H) )
%   | | then return 0.08941818742634317;  // std dev = 5,612, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( tweets(B, I), accounttype(A, J), accounttype(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, K), accounttype(A, L), accounttype(B, M) )
%   | | | | then return 0.04556438893552298;  // std dev = 5,523, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | | else if ( accounttype(A, N), accounttype(B, N) )
%   | | | | | then return -0.028151003935064613;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.05711295556104116;  // std dev = 14,926, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), accounttype(A, G) )
%   | then return 0.06967604349682106;  // std dev = 5,611, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.030684269438301562;  // std dev = 5,758, 181,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=44 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.044027951380253685;  // std dev = 14,923, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(A, E), tweets(A, F), accounttype(B, G) )
%   | then return 0.032605121497989595;  // std dev = 5,524, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.0542412929150023;  // std dev = 5,611, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( tweets(A, J), tweets(K, J), tweets(K, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return -0.028510430061206026;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.757633
   AUC PR    = 0.720141
   CLL	      = -0.590459
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 54.278 seconds
Total inference time: 0.665 seconds
AUC ROC: 0.757633


Results in test set
   AUC ROC   = 0.757633
   AUC PR    = 0.720141
   CLL	      = -0.590459
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total inference time: 0.665 seconds
AUC ROC: 0.757633
Structure after Parameter Learning
[['follows(A, B)', {'': 'accounttype(B, C), accounttype(B, D), accounttype(A, D)', 'false': 'tweets(B, E), tweets(A, E)', 'false,false': 'tweets(B, F), tweets(G, F), tweets(G, H)', 'false,false,false': 'tweets(A, I), tweets(J, I), tweets(J, K)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [8.19, 85, 318], 'false,false,true': [6.8, 82, 106], 'false,false,false,true': [3.026, 31, 13], 'true': [13.303, 510, 271]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(B, D), accounttype(A, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, I)', 'false,false,false': 'accounttype(B, J), accounttype(A, J)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [10.852, 167, 424], 'false,false,true': [5.524, 119, 41], 'false,false,false,true': [1.604, 18, 3], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)'}, {'false,false,false': [3.468, 49, 16], 'false,true': [10.831, 167, 424], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [4.609, 88, 28], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,true,true': 'tweets(B, G), tweets(H, G), tweets(H, D)', 'false,true': 'accounttype(A, E), accounttype(B, F), accounttype(A, F)', 'false,true,true,false': 'tweets(B, I), tweets(B, J)', 'false,true,true,false,false': 'tweets(A, K), tweets(L, D), tweets(L, M)', 'false': 'tweets(A, D), accounttype(B, E)', 'false,false': 'accounttype(B, N), accounttype(B, P), accounttype(A, P)'}, {'false,true,true,false,false,false': [0.0, 0, 0], 'false,true,true,false,true': [0.0, 0, 0], 'false,true,false': [6.132, 98, 62], 'true': [13.245, 310, 517], 'false,false,true': [4.694, 74, 32], 'false,true,true,false,false,true': [4.609, 88, 28], 'false,false,false': [3.446, 15, 57], 'false,true,true,true': [3.307, 123, 12]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), tweets(B, F)', 'false,false': 'tweets(B, G), accounttype(A, H)', 'false,false,false': 'tweets(A, I), tweets(A, J), accounttype(B, K)', 'false,false,false,false': 'accounttype(B, L), accounttype(A, L)'}, {'false,true': [10.057, 152, 367], 'false,false,true': [3.446, 15, 57], 'true': [12.037, 404, 240], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [5.523, 119, 41], 'false,false,false,false,true': [1.604, 18, 3]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G), tweets(B, H), accounttype(B, I)', 'false,false,false': 'tweets(B, J), accounttype(B, K)', 'false,false,false,false,false': 'accounttype(B, P), accounttype(A, P)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,false,false,false': 'tweets(A, L), tweets(M, L), tweets(M, N)'}, {'false,true': [8.498, 309, 102], 'false,false,true': [5.652, 71, 86], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [13.173, 310, 517], 'false,false,false,false,false,true': [1.604, 18, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), accounttype(B, K), tweets(A, L)', 'false,false,false,false,false,false': 'accounttype(B, S), accounttype(A, S)', 'false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false': 'tweets(B, F), accounttype(A, G), accounttype(B, G)', 'false,false,false,false': 'tweets(A, M), accounttype(A, N), accounttype(B, N)'}, {'false,false,false,false,false,false,false': [0.0, 0, 0], 'false,true': [4.371, 56, 29], 'false,false,true': [3.446, 15, 57], 'false,false,false,false,false,false,true': [1.604, 18, 3], 'true': [14.942, 500, 578], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [5.523, 119, 41], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(A, E)', 'false,false': 'tweets(B, H)', 'false,false,false': 'tweets(B, I), accounttype(A, J), accounttype(B, J)', 'false,false,false,false,false': 'accounttype(A, N), accounttype(B, N)', 'false': 'tweets(B, F), tweets(A, G)', 'false,false,false,false': 'tweets(A, K), accounttype(A, L), accounttype(B, M)'}, {'false,true': [0.0, 0, 0], 'false,false,true': [5.612, 71, 86], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [14.932, 500, 578], 'false,false,false,false,false,true': [1.604, 18, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [5.523, 119, 41]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(B, E)', 'false': 'tweets(B, F), accounttype(A, G)', 'false,false': 'tweets(B, H), accounttype(A, I)'}, {'false,true': [5.611, 71, 86], 'false,false,true': [0.0, 0, 0], 'false,false,false': [5.758, 137, 44], 'true': [14.926, 500, 578]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false': 'tweets(A, E), tweets(A, F), accounttype(B, G)', 'false,false': 'tweets(B, H), accounttype(A, I)', 'false,false,false': 'tweets(A, J), tweets(K, J), tweets(K, L)'}, {'false,false,false,false': [1.604, 18, 3], 'false,true': [5.524, 119, 41], 'false,false,true': [5.611, 71, 86], 'false,false,false,true': [0.0, 0, 0], 'true': [14.923, 500, 578]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- accounttype(B, C), accounttype(B, D), accounttype(A, D).;false;true', '0;false;tweets(B, E), tweets(A, E).;false;true', '0;false,false;tweets(B, F), tweets(G, F), tweets(G, H).;false;false', '1;;follows(A, B) :- tweets(B, C), accounttype(B, D), accounttype(A, D).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false;tweets(A, G), accounttype(B, H), accounttype(A, I).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;false;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,true,true;tweets(B, G), tweets(H, G), tweets(H, D).;false;true', '3;false,true;accounttype(A, E), accounttype(B, F), accounttype(A, F).;true;false', '3;false,true,true,false;tweets(B, I), tweets(B, J).;false;false', '3;false;tweets(A, D), accounttype(B, E).;true;true', '3;false,false;accounttype(B, N), accounttype(B, P), accounttype(A, P).;false;false', '4;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '4;false;tweets(A, E), tweets(B, F).;false;true', '4;false,false;tweets(B, G), accounttype(A, H).;false;true', '4;false,false,false;tweets(A, I), tweets(A, J), accounttype(B, K).;false;false', '5;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '5;false,false;tweets(B, G), tweets(B, H), accounttype(B, I).;false;true', '5;false,false,false;tweets(B, J), accounttype(B, K).;false;true', '5;false;tweets(A, D), tweets(E, D), tweets(E, F).;false;true', '5;false,false,false,false;tweets(A, L), tweets(M, L), tweets(M, N).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '6;false,false;tweets(B, H), accounttype(A, I).;false;true', '6;false,false,false;tweets(A, J), accounttype(B, K), tweets(A, L).;false;true', '6;false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;false', '6;false;tweets(B, F), accounttype(A, G), accounttype(B, G).;false;true', '6;false,false,false,false;tweets(A, M), accounttype(A, N), accounttype(B, N).;false;true', '7;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(A, E).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(B, E).;false;true', '8;false;tweets(B, F), accounttype(A, G).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false;tweets(A, E), tweets(A, F), accounttype(B, G).;false;true', '9;false,false;tweets(B, H), accounttype(A, I).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false', 0), ('false,false,true', 0.5638297872340425), ('true', 0.6530089628681178), ('false,false,false,true', 0.7045454545454546), ('false,true', 0.7890818858560794)]
Tree #2: [('false,false,false,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false,true', 0.8571428571428571)]
Tree #3: [('false,false,true,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,true', 0.7586206896551724)]
Tree #4: [('false,true,true,false,false,false', 0), ('false,true,true,false,true', 0), ('false,true,false', 0.6125), ('true', 0.6251511487303507), ('false,false,true', 0.6981132075471698), ('false,true,true,false,false,true', 0.7586206896551724), ('false,false,false', 0.7916666666666666), ('false,true,true,true', 0.9111111111111111)]
Tree #5: [('false,false,false,false,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7071290944123314), ('false,false,false,true', 0.74375), ('false,false,true', 0.7916666666666666), ('false,false,false,false,true', 0.8571428571428571)]
Tree #6: [('false,false,false,false,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,true', 0.5477707006369427), ('true', 0.6251511487303507), ('false,true', 0.7518248175182481), ('false,false,false,false,false,true', 0.8571428571428571)]
Tree #7: [('false,false,false,false,false,false,false', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,true', 0), ('true', 0.536178107606679), ('false,true', 0.6588235294117647), ('false,false,false,true', 0.74375), ('false,false,true', 0.7916666666666666), ('false,false,false,false,false,false,true', 0.8571428571428571)]
Tree #8: [('false,true', 0), ('false,false,false,false,false,false', 0), ('false,false,false,true', 0), ('true', 0.536178107606679), ('false,false,true', 0.5477707006369427), ('false,false,false,false,true', 0.74375), ('false,false,false,false,false,true', 0.8571428571428571)]
Tree #9: [('false,false,true', 0), ('true', 0.536178107606679), ('false,true', 0.5477707006369427), ('false,false,false', 0.7569060773480663)]
Tree #10: [('false,false,false,true', 0), ('true', 0.536178107606679), ('false,false,true', 0.5477707006369427), ('false,true', 0.74375), ('false,false,false,false', 0.8571428571428571)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.20513997223138983;  // std dev = 13,303, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( tweets(B, E), tweets(A, E) )
%   | then return 0.6472308209555876;  // std dev = 8,190, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   | else if ( tweets(B, F), tweets(G, F), tweets(G, H) )
%   | | then return 0.4219787223335519;  // std dev = 6,800, 188,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=106 */
%   | | else return 0.15360348055405781;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.20396958410329;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4897413182281217;  // std dev = 10,852, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, I) )
%   | | then return 0.0895025576391871;  // std dev = 5,524, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.025844080492980117;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.1734051668150993;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.3928265790891058;  // std dev = 10,831, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then return 0.05975147510841893;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.074963899476521;  // std dev = 3,468, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2971288175582765;  // std dev = 13,245, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), accounttype(B, E) )
%   | then if ( accounttype(A, E), accounttype(B, F), accounttype(A, F) )
%   | | then if ( tweets(B, G), tweets(H, G), tweets(H, D) )
%   | | | then return -0.1394904089949273;  // std dev = 3,307, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | | else if ( tweets(B, I), tweets(B, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.05070058139940365;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.062095522620418994;  // std dev = 6,132, 160,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=62 */
%   | else if ( accounttype(B, K), accounttype(B, L), accounttype(A, L) )
%   | | then return 0.08394349048020092;  // std dev = 4,694, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else return 0.4130569319840116;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.1100490735735206;  // std dev = 12,037, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(A, E), tweets(B, F) )
%   | then return 0.22574477615817823;  // std dev = 10,057, 519,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=367 */
%   | else if ( tweets(B, G), accounttype(A, H) )
%   | | then return 0.31225413241724986;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, I), tweets(A, J), accounttype(B, K) )
%   | | | then return 0.05870723311051011;  // std dev = 5,523, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | else return -0.04533553278208272;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.19305930268089389;  // std dev = 13,173, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then return -0.03226141714776423;  // std dev = 8,498, 411,000 (wgt'ed) examples reached here.  /* #neg=309 #pos=102 */
%   | else if ( tweets(B, G), tweets(B, H), accounttype(B, I) )
%   | | then return 0.149115508341253;  // std dev = 5,652, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else if ( tweets(B, J), accounttype(B, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), tweets(M, L), tweets(M, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.03850703946408071;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.09581075918577996;  // std dev = 14,942, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), accounttype(A, G), accounttype(B, G) )
%   | then return 0.0468321567869881;  // std dev = 4,371, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.19804124109360527;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, J), accounttype(B, K), tweets(A, L) )
%   | | | then return 0.05448158188803842;  // std dev = 5,523, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | else if ( tweets(A, M), accounttype(A, N), accounttype(B, N) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.032859839856108346;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(A, E) )
%   then return 0.07403400455060857;  // std dev = 14,932, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else return 0.061354398144920594;  // std dev = 8,056, 338,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=130 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(B, E) )
%   then return 0.05711295556104116;  // std dev = 14,926, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), accounttype(A, G) )
%   | then return 0.07588209983313171;  // std dev = 5,611, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else return 0.026803021088000728;  // std dev = 5,760, 181,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=44 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.044027951380253685;  // std dev = 14,923, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(A, E), tweets(A, F), accounttype(B, G) )
%   | then return 0.03053067089064484;  // std dev = 5,524, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | else if ( tweets(B, H), accounttype(A, I) )
%   | | then return 0.05908636086439931;  // std dev = 5,611, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | | else return -0.04101330112526765;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.757633
   AUC PR    = 0.720141
   CLL	      = -0.590006
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 53.427 seconds
Total inference time: 0.803 seconds
AUC ROC: 0.757633


Best model AUC ROC so far: 0.757633


******************************************
Best model found
******************************************
Total revision time: 109.173
Best validation AUC ROC: 0.757633


Results
   AUC ROC   = 0.701401
   AUC PR    = 0.672377
   CLL	      = -0.626437
   Precision = 0.68 at threshold = 0.5
   Recall    = 0.588462
   F1        = 0.630928


Total inference time: 1.026 seconds
AUC ROC: 0.701401
Dataset: yeast->twitter, Fold: 2, Type: transfer, Time: 03:12:18
{'Parameter Learning results': {'F1': 0.630928, 'Learning time': 54.278, 'Recall': 0.588462, 'AUC PR': 0.672377, 'AUC ROC': 0.701401, 'CLL': -0.626437, 'Inference time': 1.259, 'Precision': [0.68, 0.5]}, 'F1': 0.630928, 'Learning time': 109.173, 'Recall': 0.588462, 'AUC PR': 0.672377, 'AUC ROC': 0.701401, 'Mapping results': {'Finding best mapping': 0.8251090049743652, 'Knowledge compiling time': 0.1448671817779541, 'Total time': 5.61717414855957, 'Generating mappings time': 0.12151551246643066, 'Possible mappings': 1458, 'Generating paths time': 4.525674819946289}, 'CLL': -0.626437, 'Inference time': 1.026, 'Precision': [0.68, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.6472308209555876;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.05296217601159877;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.09952824544433897;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1993254056877463;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.2805627282029616;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.6498156017661795;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.15360348055405781;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.0010060779566550774;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.549098241119697;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.046636589713539955;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.08697564907438803;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.24286939416089628;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.17328911846492726;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | | else return 0.5512112630944944;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13385798024736764;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 8.835646163368844E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.43557759505931615;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.04126500401346218;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.07527551940942277;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.14767008630297346;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.20427878004648498;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.43708800727225394;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11489165900800301;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 7.758973011973755E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.19119830646834776;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.33100655161038145;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.036664104155083546;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.06458521224134921;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1235777961205822;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.16744578820253844;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.33204979443556765;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.09726476390236147;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 6.812936799187676E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.15123627082198027;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.24844342508210263;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.032693725873089184;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.05498862653883258;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.10180665778558536;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.13435757949895957;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.2492278555378379;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08135383101863741;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.981815657342233E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11756904775468155;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.1876687563199241;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02924500108552499;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.04650549175860373;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( tweets(A, I) )
%   | | | then return 0.1060397506011726;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.08278216065690562;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | | else return 0.1883287900606578;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.06734704593186719;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.251750232106048E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.09031645667960987;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.14364858664523228;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.026232168413492324;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03910519567603582;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.06660456442738766;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.08267220082015268;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.14424583915059108;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.055272413639729456;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.6105298554672245E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0688390908655739;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.11150158147353458;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02358680449047552;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03272170158921938;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.05314094933548588;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.06388924363144032;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.11205948623285547;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04504116859975111;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.0474016800404585E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05220345901691881;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.08763955896479636;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.021253687739216147;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.027267194615232963;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.04212175139001412;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.04906676000335172;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.08816541943154743;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.03649198584382003;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.552900687251765E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0394588085364301;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.06961572907167762;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.01918778417737564;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.022643236170139462;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03321810241282451;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.03751769451017392;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.07011086202405459;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.029427786683806866;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.118698576379438E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.697251
   AUC PR    = 0.670471
   CLL	      = -0.637301
   Precision = 0.748549 at threshold = 0.5
   Recall    = 0.496154
   F1        = 0.596762


Total learning time: 172.848 seconds
Total inference time: 1.47 seconds
AUC ROC: 0.697251


Dataset: yeast->twitter, Fold: 2, Type: scratch, Time: 03:15:13
{'F1': 0.596762, 'Learning time': 172.848, 'Recall': 0.496154, 'AUC PR': 0.670471, 'AUC ROC': 0.697251, 'CLL': -0.637301, 'Inference time': 1.47, 'Precision': [0.748549, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3029765213064041;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.6057006217153944;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.02771415249081582;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.09881283551445066;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.2499015124191009;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.26146385222658547;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5991127905211964;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.1538011090125544;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.041482268432845706;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.26195770509987254;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.5150608092227671;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.024306925639779996;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.08635362224095879;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21668053336674278;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22656674054116943;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.5096464309523057;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13402883159591558;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.036357252670662456;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21953155930279844;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.4111204193418097;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return 0.021262920970161307;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.07474527956991832;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.18315801979572102;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.19115743949407257;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.40720674267139145;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11503476080236148;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | else return 0.03174024374368541;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.17892939244519368;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.3141825418796683;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.04188157746962599;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.15131096914906783;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.15745421419149033;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.3114987982673407;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.020750005128064426;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.09738108407343211;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.06650163911499253;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1425772569838136;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.23603762450509483;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.03606366665942301;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.12260445980204351;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.12710849653552952;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.2340980963909117;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.01800243753968006;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.08144578875500447;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.05755706555929886;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11168986511459747;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1774902008011571;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.030923627820140676;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.09781671784146916;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.10098959576200428;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1759434171915245;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.015586918195983929;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.06741790070294855;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.049486519118003613;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.08643271964998046;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.1346342522853809;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.02641938592742567;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.07711530908204077;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.07927332329813633;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.1332991893384412;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.013471543878489367;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.05532571130835863;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.04230007132502209;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.06632409104376542;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.10321738118856012;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.022500001229099988;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.060253439733887366;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.061673116590251875;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.10201484413152792;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.011625262298408061;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.04508033714379663;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.03597398089443983;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05060117037502902;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else return 0.07993088904146513;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then return 0.01911009127483825;  // std dev = 0,403, 471,000 (wgt'ed) examples reached here.  /* #neg=374 #pos=97 */
%   | else if ( tweets(B, G) )
%   | | then if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.046767993217629915;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.0476691029643235;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | | else return 0.07882946968212366;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | then return 0.010018554751275404;  // std dev = 0,381, 51,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=9 */
%   | | | else if ( tweets(A, K) )
%   | | | | then return 0.03652009504854331;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | | | else return 0.0304601306719722;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then if ( tweets(A, C) )
%   | then return 0.03845458614271817;  // std dev = 0,497, 870,000 (wgt'ed) examples reached here.  /* #neg=483 #pos=387 */
%   | else if ( tweets(A, E) )
%   | | then return -0.005547389263289258;  // std dev = 0,375, 230,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=39 */
%   | | else return 0.03612459730283215;  // std dev = 0,488, 194,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=76 */
%   else if ( tweets(B, F) )
%   | then if ( tweets(A, F) )
%   | | then return 0.06243765193281927;  // std dev = 0,434, 919,000 (wgt'ed) examples reached here.  /* #neg=232 #pos=687 */
%   | | else if ( tweets(A, G) )
%   | | | then return 0.036671568052569055;  // std dev = 0,491, 181,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=73 */
%   | | | else return 0.06142578394326317;  // std dev = 0,438, 166,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=123 */
%   | else if ( tweets(A, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03694155335542689;  // std dev = 0,427, 241,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=58 */
%   | | | else return 0.029447441950451732;  // std dev = 0,456, 115,000 (wgt'ed) examples reached here.  /* #neg=81 #pos=34 */
%   | | else return 0.011184506846444247;  // std dev = 0,387, 60,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=11 */


Predicates from source: ['follows(account,account).', 'accounttype(account,type).', 'tweets(account,word).'] 

Source structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, H)', 'false,true': 'tweets(B, G)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,true,false': 'tweets(A, J)', 'false,false,false': 'tweets(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(B, G)', 'false,false,false': 'accounttype(A, J), accounttype(B, J)', 'false,false,true': 'accounttype(A, H), accounttype(B, H)', 'true': 'accounttype(A, D), accounttype(B, D)', 'false': 'tweets(A, E), accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'tweets(A, K)', 'false,false,true,false': 'tweets(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, H)', 'false,true': 'tweets(A, F)', 'false,false,true': 'accounttype(A, I), accounttype(B, I)', 'false,true,false': 'tweets(A, G)', 'true': 'tweets(A, C)', 'true,false': 'tweets(A, E)', 'false': 'tweets(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,false,true,true': [0.427, 183, 58], 'false,true,false,false': [0.438, 43, 123], 'false,true,false,true': [0.491, 108, 73], 'false,false,true,false': [0.456, 81, 34], 'true,false,true': [0.375, 191, 39], 'true,false,false': [0.488, 118, 76]}]] 



Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.156660115303962;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.12185408003996846;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.1690588431090709;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12652833005489178;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.10048838272215738;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10058245297325914;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.0818069789519704;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.10684292618038639;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0789974449301268;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06590519832557229;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06149224389390623;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.052654433946546925;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.047554622437177986;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04179415130489351;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.04928605546308811;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03660221690565094;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03300589385532892;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03765074919083744;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 39.557 seconds
Total inference time: 1.023 seconds
AUC ROC: 0.652806


Results in test set
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total inference time: 1.023 seconds
AUC ROC: 0.652806
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [15.449, 594, 399], 'true,true': [14.835, 312, 747], 'false,false,true,false,true': [15.797, 738, 377], 'true,false': [12.139, 244, 372], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.39, 27, 20]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [12.139, 244, 372], 'false,false,false': [0.0, 0, 0], 'true,true': [14.835, 312, 747], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [15.797, 738, 377], 'false,false,true,false': [3.39, 27, 20], 'true,false,true': [15.449, 594, 399], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;false', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('false,false,false,true', 0.574468085106383), ('false,true,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #4: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0.574468085106383), ('false,true', 0.5981873111782477), ('true,false', 0.6038961038961039), ('false,false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false', 0.574468085106383), ('true,false,true', 0.5981873111782477), ('false,true,true', 0.6038961038961039), ('false,true,false,true', 0.6618834080717488), ('true,true', 0.7053824362606232)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5635313713601308;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.46204503899561244;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.2599616239212598;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1962655270277586;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.28368084999312904;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.480331166125798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.39604953825625766;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.22528299272588073;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.17065627419634577;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.24552773196596844;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.385896984562256;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.3233804870978209;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.19012050442430634;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1454970736691817;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.2064101104219833;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2968995213664186;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.2537790978207538;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.156660115303962;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.12185408003996846;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.16905884310907088;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.22370946121335972;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.19408488405227958;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12652833005489178;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.10048838272215738;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.13551923488362477;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16786098229700358;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.14645809039088656;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10058245297325914;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.0818069789519704;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.10684292618038635;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1264897322116235;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.10994652439501655;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0789974449301268;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.06590519832557229;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.08320916477447754;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09599948635600865;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.08247331202256157;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06149224389390623;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.052654433946546925;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06423766460686303;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07340284515388798;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else return 0.061940748061434577;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.047554622437177986;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04179415130489351;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04928605546308813;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05650202700929892;  // std dev = 14,835, 1.059,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=747 */
%   | else if ( function(A, E) )
%   | | then return 0.03660221690565094;  // std dev = 15,449, 993,000 (wgt'ed) examples reached here.  /* #neg=594 #pos=399 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.04660933627782394;  // std dev = 12,139, 616,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=372 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03300589385532892;  // std dev = 15,797, 1.115,000 (wgt'ed) examples reached here.  /* #neg=738 #pos=377 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03765074919083752;  // std dev = 3,390, 47,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=20 */
Results
   AUC ROC   = 0.652806
   AUC PR    = 0.630053
   CLL	      = -0.653976
   Precision = 0.656805 at threshold = 0.5
   Recall    = 0.579634
   F1        = 0.615811


Total learning time: 29.311 seconds
Total inference time: 1.161 seconds
AUC ROC: 0.652806


Best model AUC ROC so far: 0.652806


******************************************
Best model found
******************************************
Total revision time: 71.052
Best validation AUC ROC: 0.652806


Results
   AUC ROC   = 0.657726
   AUC PR    = 0.639384
   CLL	      = -0.654507
   Precision = 0.616571 at threshold = 0.5
   Recall    = 0.671747
   F1        = 0.642977


Total inference time: 2.278 seconds
AUC ROC: 0.657726
Dataset: twitter->yeast, Fold: 1, Type: transfer, Time: 03:28:25
{'Parameter Learning results': {'F1': 0.642977, 'Learning time': 39.557, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'CLL': -0.654507, 'Inference time': 2.023, 'Precision': [0.616571, 0.5]}, 'F1': 0.642977, 'Learning time': 71.052, 'Recall': 0.671747, 'AUC PR': 0.639384, 'AUC ROC': 0.657726, 'Mapping results': {'Finding best mapping': 0.009942770004272461, 'Knowledge compiling time': 0.06465816497802734, 'Total time': 3.0496110916137695, 'Generating mappings time': 0.036870718002319336, 'Possible mappings': 98, 'Generating paths time': 2.938133955001831}, 'CLL': -0.654507, 'Inference time': 2.278, 'Precision': [0.616571, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5914052861387685;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( enzyme(B, E), phenotype(A, F) )
%   | then return 0.15406730244645048;  // std dev = 0,456, 294,000 (wgt'ed) examples reached here.  /* #neg=207 #pos=87 */
%   | else if ( phenotype(B, G) )
%   | | then return 0.2242203636709364;  // std dev = 0,482, 560,000 (wgt'ed) examples reached here.  /* #neg=355 #pos=205 */
%   | | else if ( phenotype(A, H), function(B, I), function(A, I) )
%   | | | then return 0.441932718883292;  // std dev = 0,493, 370,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=216 */
%   | | | else if ( phenotype(A, J), function(B, K), location(A, L) )
%   | | | | then return 0.21013449466629486;  // std dev = 0,478, 554,000 (wgt'ed) examples reached here.  /* #neg=359 #pos=195 */
%   | | | | else if ( enzyme(B, M), enzyme(A, M) )
%   | | | | | then return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | | else if ( location(A, N), location(B, N) )
%   | | | | | | then if ( enzyme(B, P) )
%   | | | | | | | then return 0.2713720755953811;  // std dev = 0,492, 121,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=50 */
%   | | | | | | | else return 0.40937844329622924;  // std dev = 0,497, 488,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=269 */
%   | | | | | | else return 0.2982897801699312;  // std dev = 0,496, 568,000 (wgt'ed) examples reached here.  /* #neg=318 #pos=250 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), function(A, D), function(B, D) )
%   then return 0.4753784475452395;  // std dev = 0,457, 540,000 (wgt'ed) examples reached here.  /* #neg=163 #pos=377 */
%   else if ( phenotype(B, E), phenotype(F, E), complex(F, G) )
%   | then return 0.33617162330820693;  // std dev = 0,489, 965,000 (wgt'ed) examples reached here.  /* #neg=452 #pos=513 */
%   | else if ( enzyme(B, H), phenotype(A, I) )
%   | | then return 0.1052831244546711;  // std dev = 0,443, 224,000 (wgt'ed) examples reached here.  /* #neg=164 #pos=60 */
%   | | else if ( phenotype(A, J), function(B, K), function(A, K) )
%   | | | then return 0.3769767326143242;  // std dev = 0,493, 340,000 (wgt'ed) examples reached here.  /* #neg=142 #pos=198 */
%   | | | else if ( phenotype(A, L), function(B, M), location(A, N) )
%   | | | | then return 0.17835054467733186;  // std dev = 0,476, 575,000 (wgt'ed) examples reached here.  /* #neg=375 #pos=200 */
%   | | | | else if ( enzyme(B, P), location(B, Q) )
%   | | | | | then return 0.22758709563135757;  // std dev = 0,490, 219,000 (wgt'ed) examples reached here.  /* #neg=129 #pos=90 */
%   | | | | | else if ( complex(B, R) )
%   | | | | | | then return 0.19059433661101677;  // std dev = 0,486, 60,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=23 */
%   | | | | | | else if ( proteinclass(A, S), function(A, T), function(B, T) )
%   | | | | | | | then return 0.43697353033357095;  // std dev = 0,481, 54,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=34 */
%   | | | | | | | else return 0.302350323985372;  // std dev = 0,499, 853,000 (wgt'ed) examples reached here.  /* #neg=433 #pos=420 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.42365074828099714;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( phenotype(B, E) )
%   | then return 0.13900772756728386;  // std dev = 0,479, 631,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=227 */
%   | else if ( enzyme(B, F) )
%   | | then return 0.15447393951701077;  // std dev = 0,474, 436,000 (wgt'ed) examples reached here.  /* #neg=281 #pos=155 */
%   | | else if ( location(B, G), location(A, G) )
%   | | | then if ( complex(B, H), function(A, I), function(B, I) )
%   | | | | then return 0.3933182842965574;  // std dev = 0,466, 63,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=43 */
%   | | | | else if ( proteinclass(A, J), complex(A, K) )
%   | | | | | then return 0.14587234657400064;  // std dev = 0,473, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | | else if ( complex(B, L) )
%   | | | | | | then return 0.12154380196640749;  // std dev = 0,471, 62,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=21 */
%   | | | | | | else if ( complex(A, M), function(A, N), function(B, N) )
%   | | | | | | | then return 0.35338248223307184;  // std dev = 0,485, 117,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=73 */
%   | | | | | | | else return 0.2998756716155659;  // std dev = 0,496, 663,000 (wgt'ed) examples reached here.  /* #neg=305 #pos=358 */
%   | | | else return 0.18198859114537846;  // std dev = 0,488, 939,000 (wgt'ed) examples reached here.  /* #neg=556 #pos=383 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.32684445748435054;  // std dev = 0,442, 866,000 (wgt'ed) examples reached here.  /* #neg=231 #pos=635 */
%   else if ( proteinclass(B, E), proteinclass(F, E), phenotype(F, G) )
%   | then return 0.0771295735582832;  // std dev = 0,463, 229,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=75 */
%   | else if ( enzyme(B, H) )
%   | | then return 0.12595945500179614;  // std dev = 0,475, 505,000 (wgt'ed) examples reached here.  /* #neg=326 #pos=179 */
%   | | else if ( phenotype(B, I), proteinclass(A, J), location(A, K) )
%   | | | then return -0.00993920275421269;  // std dev = 0,427, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | else if ( phenotype(A, L), phenotype(B, L) )
%   | | | | then return 0.4170392307771755;  // std dev = 0,471, 18,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=12 */
%   | | | | else if ( location(A, M), location(B, M) )
%   | | | | | then if ( phenotype(B, N), location(P, M), enzyme(P, Q) )
%   | | | | | | then return 0.15911578540776386;  // std dev = 0,491, 145,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=59 */
%   | | | | | | else if ( complex(B, R), phenotype(A, S) )
%   | | | | | | | then return 0.09331698169069276;  // std dev = 0,458, 53,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=21 */
%   | | | | | | | else return 0.24314955337082236;  // std dev = 0,493, 876,000 (wgt'ed) examples reached here.  /* #neg=397 #pos=479 */
%   | | | | | else return 0.15045344727299284;  // std dev = 0,489, 1.083,000 (wgt'ed) examples reached here.  /* #neg=641 #pos=442 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), location(B, D), location(A, D) )
%   then return 0.22038297591259004;  // std dev = 0,454, 859,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=540 */
%   else if ( phenotype(A, E), phenotype(B, E) )
%   | then return 0.331208297244019;  // std dev = 0,388, 107,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=84 */
%   | else if ( enzyme(B, F), phenotype(A, G), location(A, H) )
%   | | then return 0.043101638926049714;  // std dev = 0,449, 270,000 (wgt'ed) examples reached here.  /* #neg=192 #pos=78 */
%   | | else if ( phenotype(B, I), location(A, J) )
%   | | | then return 0.08963602079655962;  // std dev = 0,478, 413,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=185 */
%   | | | else if ( complex(B, K), phenotype(A, L) )
%   | | | | then return 0.032907441257526024;  // std dev = 0,446, 100,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=34 */
%   | | | | else if ( enzyme(A, M), location(B, N), location(A, P) )
%   | | | | | then return 0.20733774493366686;  // std dev = 0,491, 174,000 (wgt'ed) examples reached here.  /* #neg=82 #pos=92 */
%   | | | | | else if ( proteinclass(A, Q), location(B, R), location(A, S) )
%   | | | | | | then return 0.09440130236848933;  // std dev = 0,482, 163,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=67 */
%   | | | | | | else if ( complex(A, T), complex(B, T) )
%   | | | | | | | then return 0.5545328264334713;  // std dev = 0,066, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | | else return 0.15750853921999244;  // std dev = 0,492, 1.739,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=830 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( proteinclass(B, C) )
%   then return 0.08931622254260886;  // std dev = 0,473, 714,000 (wgt'ed) examples reached here.  /* #neg=369 #pos=345 */
%   else if ( phenotype(B, D), phenotype(A, D) )
%   | then return 0.32802322985195626;  // std dev = 0,341, 219,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=187 */
%   | else if ( enzyme(B, E), complex(A, F) )
%   | | then return 0.022197464845456635;  // std dev = 0,451, 169,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=50 */
%   | | else if ( phenotype(A, G), function(B, H), function(A, H) )
%   | | | then return 0.1677532732464484;  // std dev = 0,482, 539,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=330 */
%   | | | else if ( phenotype(A, I), location(A, J), function(B, K) )
%   | | | | then return 0.06518103305514765;  // std dev = 0,475, 699,000 (wgt'ed) examples reached here.  /* #neg=449 #pos=250 */
%   | | | | else if ( enzyme(B, L) )
%   | | | | | then return 0.09026559420115032;  // std dev = 0,483, 220,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=92 */
%   | | | | | else if ( enzyme(A, M) )
%   | | | | | | then return 0.0888887946368382;  // std dev = 0,485, 132,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=64 */
%   | | | | | | else if ( function(B, N), function(A, N) )
%   | | | | | | | then return 0.2766640624593137;  // std dev = 0,447, 400,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=291 */
%   | | | | | | | else return 0.06918410932715145;  // std dev = 0,493, 738,000 (wgt'ed) examples reached here.  /* #neg=432 #pos=306 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), function(A, D), function(B, D) )
%   then return 0.14884734364832947;  // std dev = 0,473, 265,000 (wgt'ed) examples reached here.  /* #neg=114 #pos=151 */
%   else if ( enzyme(B, E) )
%   | then return 0.028741373259439592;  // std dev = 0,458, 456,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=144 */
%   | else if ( proteinclass(B, F) )
%   | | then if ( proteinclass(A, F) )
%   | | | then return 0.33856146865516046;  // std dev = 0,309, 10,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=9 */
%   | | | else if ( location(B, G), proteinclass(H, F), enzyme(H, I) )
%   | | | | then return 0.2714437805069175;  // std dev = 0,375, 47,000 (wgt'ed) examples reached here.  /* #neg=11 #pos=36 */
%   | | | | else if ( location(B, J), location(A, K) )
%   | | | | | then if ( phenotype(B, L), proteinclass(M, F), complex(M, N) )
%   | | | | | | then return -0.009054867090708695;  // std dev = 0,468, 157,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=78 */
%   | | | | | | else if ( enzyme(A, P), phenotype(B, Q) )
%   | | | | | | | then return 0.4707859749853279;  // std dev = 0,052, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | | else return 0.07282913648167959;  // std dev = 0,497, 225,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=102 */
%   | | | | | else return -0.048998376127598206;  // std dev = 0,440, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | else return 0.10512664477392862;  // std dev = 0,474, 2.623,000 (wgt'ed) examples reached here.  /* #neg=1.246 #pos=1.377 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(B, C), phenotype(A, D) )
%   then return 0.0395504869286412;  // std dev = 0,463, 387,000 (wgt'ed) examples reached here.  /* #neg=202 #pos=185 */
%   else if ( phenotype(B, E), phenotype(A, E) )
%   | then return 0.22490418990453265;  // std dev = 0,341, 219,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=187 */
%   | else if ( phenotype(A, F), location(B, G), location(A, G) )
%   | | then if ( complex(B, H), location(I, G), enzyme(I, J) )
%   | | | then return 0.053418321241815836;  // std dev = 0,469, 141,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=68 */
%   | | | else if ( complex(A, K), complex(L, K), enzyme(L, M) )
%   | | | | then return 0.19874571588634254;  // std dev = 0,472, 122,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=76 */
%   | | | | else if ( complex(A, N), location(P, G), enzyme(P, Q) )
%   | | | | | then if ( phenotype(B, R), enzyme(B, S) )
%   | | | | | | then return -0.15419797462597434;  // std dev = 0,396, 16,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=4 */
%   | | | | | | else if ( enzyme(B, T) )
%   | | | | | | | then return 0.14970180453028203;  // std dev = 0,486, 28,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=11 */
%   | | | | | | | else return 0.043147060157788006;  // std dev = 0,487, 188,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=91 */
%   | | | | | else return 0.14285538639762357;  // std dev = 0,476, 199,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=114 */
%   | | else return 0.05587605072582351;  // std dev = 0,479, 2.530,000 (wgt'ed) examples reached here.  /* #neg=1.351 #pos=1.179 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), phenotype(A, D), phenotype(B, D) )
%   then return 0.16253723320692523;  // std dev = 0,407, 47,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=35 */
%   else if ( enzyme(B, E), phenotype(B, F), complex(A, G) )
%   | then return -0.05036043023733004;  // std dev = 0,437, 77,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=28 */
%   | else if ( phenotype(B, H), phenotype(A, I) )
%   | | then return 0.07864806402394893;  // std dev = 0,442, 734,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=461 */
%   | | else if ( phenotype(A, J), function(B, K), location(A, L) )
%   | | | then return 0.03492770556040254;  // std dev = 0,475, 1.145,000 (wgt'ed) examples reached here.  /* #neg=670 #pos=475 */
%   | | | else if ( complex(B, M), enzyme(B, N), phenotype(B, P) )
%   | | | | then return -0.12793811069688682;  // std dev = 0,391, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | | else if ( location(B, Q), function(A, R), function(B, R) )
%   | | | | | then return 0.13248312578355548;  // std dev = 0,459, 633,000 (wgt'ed) examples reached here.  /* #neg=208 #pos=425 */
%   | | | | | else if ( location(B, S), location(A, S) )
%   | | | | | | then return -0.002077125466534685;  // std dev = 0,489, 554,000 (wgt'ed) examples reached here.  /* #neg=330 #pos=224 */
%   | | | | | | else if ( enzyme(B, T), location(A, U) )
%   | | | | | | | then return 0.11697668685009523;  // std dev = 0,495, 75,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=34 */
%   | | | | | | | else return 0.043198107045328754;  // std dev = 0,490, 536,000 (wgt'ed) examples reached here.  /* #neg=311 #pos=225 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), complex(A, D) )
%   then return 0.012296953999252852;  // std dev = 0,447, 275,000 (wgt'ed) examples reached here.  /* #neg=175 #pos=100 */
%   else if ( proteinclass(B, E), phenotype(A, F), enzyme(B, G) )
%   | then return -0.05963966378535246;  // std dev = 0,416, 40,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=14 */
%   | else if ( proteinclass(B, H), phenotype(B, I), complex(B, J) )
%   | | then return 0.01258811342344023;  // std dev = 0,458, 197,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=109 */
%   | | else if ( phenotype(B, K), phenotype(A, K) )
%   | | | then return 0.16458237555187452;  // std dev = 0,340, 224,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=192 */
%   | | | else if ( phenotype(A, L), location(A, M), location(B, M) )
%   | | | | then if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | then return 0.3262587146149969;  // std dev = 0,399, 33,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=25 */
%   | | | | | else if ( enzyme(B, R), phenotype(B, S) )
%   | | | | | | then return 0.25954209284790314;  // std dev = 0,464, 21,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=15 */
%   | | | | | | else if ( complex(B, T), location(U, M), enzyme(U, W) )
%   | | | | | | | then return -0.06313162024984875;  // std dev = 0,458, 100,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=41 */
%   | | | | | | | else return 0.06771839094300641;  // std dev = 0,484, 532,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=288 */
%   | | | | else return 0.03186008209598168;  // std dev = 0,479, 2.408,000 (wgt'ed) examples reached here.  /* #neg=1.277 #pos=1.131 */
Results
   AUC ROC   = 0.657382
   AUC PR    = 0.651005
   CLL	      = -0.652513
   Precision = 0.657275 at threshold = 0.5
   Recall    = 0.556077
   F1        = 0.602456


Total learning time: 74.168 seconds
Total inference time: 3.031 seconds
AUC ROC: 0.657382


Dataset: twitter->yeast, Fold: 1, Type: scratch, Time: 03:29:43
{'F1': 0.602456, 'Learning time': 74.168, 'Recall': 0.556077, 'AUC PR': 0.651005, 'AUC ROC': 0.657382, 'CLL': -0.652513, 'Inference time': 3.031, 'Precision': [0.657275, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, K) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10398203009346133;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1341427763142289;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08664186252602446;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1098206895427749;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.07140027033864552;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08865263572839156;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05830247002796966;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07076815119389623;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04725203491755055;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05600174874763819;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03806542572442744;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04402136668006728;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, K) )
%   | | | | then return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.030517148453083637;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.034428390147791706;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 31.366 seconds
Total inference time: 1.017 seconds
AUC ROC: 0.68902


Results in test set
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total inference time: 1.017 seconds
AUC ROC: 0.68902
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [9.27, 280, 124], 'true,true': [13.487, 264, 585], 'false,false,true,false,true': [11.481, 366, 206], 'true,false': [11.225, 254, 250], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [1.651, 6, 5]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [11.225, 254, 250], 'false,false,false': [0.0, 0, 0], 'true,true': [13.487, 264, 585], 'false,false,true,true': [0.0, 0, 0], 'false,true,false,false': [0.0, 0, 0], 'false,true,false,true': [11.481, 366, 206], 'false,false,true,false': [1.651, 6, 5], 'true,false,true': [9.27, 280, 124], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;false;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;false;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;false;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;false', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;false', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;false', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;false', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;false', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;false', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,true;function(A, F).;false;true', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #2: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #3: [('false,true,false', 0), ('false,false,false,false', 0), ('false,false,true,false,false', 0), ('false,false,true,true', 0), ('true,false', 0.503968253968254), ('false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true,true', 0.693069306930693)]
Tree #4: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #5: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #6: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #7: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #8: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0), ('false,false,false,true', 0), ('true,false', 0.503968253968254), ('false,false,false,false,true', 0.5454545454545454), ('false,false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('false,true', 0.693069306930693)]
Tree #10: [('false,false,false', 0), ('false,true,false,false', 0), ('true,false,false', 0), ('false,false,true,true', 0), ('false,true,true', 0.503968253968254), ('false,false,true,false', 0.5454545454545454), ('false,true,false,true', 0.6398601398601399), ('true,true', 0.6890459363957597), ('true,false,true', 0.693069306930693)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5471948714952674;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.354180681131254;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.16507962816881505;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.21828879523936795;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.3126943896449669;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.46683100100340713;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.3053859351252005;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.14377325902224022;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1895865899340875;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.27021896952830904;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.37601218108989054;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.25379094592625834;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.12318107857953696;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1610710693393702;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( function(A, J) )
%   | | | then return 0.22609590054064999;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2901246906723592;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.20422854997701745;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10398203009346133;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1341427763142289;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.18382902223075037;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2189694480165213;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.16030898507329944;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08664186252602446;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.1098206895427749;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.14604980861094888;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1642831640479955;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.12367157713663395;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.07140027033864552;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08865263572839156;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.11405557378101809;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.123570260473517;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.09434293766248378;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05830247002796966;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07076815119389623;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.0879978236541454;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.09348909860654839;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.07147388640228722;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.04725203491755055;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05600174874763819;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.06733625981328885;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.0711859707639356;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else return 0.05392505386691566;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.03806542572442744;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04402136668006728;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.05124268215565502;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.05452513939656085;  // std dev = 13,487, 849,000 (wgt'ed) examples reached here.  /* #neg=264 #pos=585 */
%   | else if ( function(A, E) )
%   | | then return 0.030517148453083637;  // std dev = 9,270, 404,000 (wgt'ed) examples reached here.  /* #neg=280 #pos=124 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.040586116893111736;  // std dev = 11,225, 504,000 (wgt'ed) examples reached here.  /* #neg=254 #pos=250 */
%   | | else if ( function(A, G) )
%   | | | then return 0.034428390147791706;  // std dev = 11,481, 572,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=206 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.03885246607182053;  // std dev = 1,651, 11,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=5 */
Results
   AUC ROC   = 0.68902
   AUC PR    = 0.656939
   CLL	      = -0.633287
   Precision = 0.702128 at threshold = 0.5
   Recall    = 0.564103
   F1        = 0.625592


Total learning time: 32.412 seconds
Total inference time: 0.789 seconds
AUC ROC: 0.68902


Best model AUC ROC so far: 0.68902


******************************************
Best model found
******************************************
Total revision time: 65.584
Best validation AUC ROC: 0.68902


Results
   AUC ROC   = 0.645378
   AUC PR    = 0.636573
   CLL	      = -0.660701
   Precision = 0.704691 at threshold = 0.5
   Recall    = 0.431901
   F1        = 0.53556


Total inference time: 2.252 seconds
AUC ROC: 0.645378
Dataset: twitter->yeast, Fold: 2, Type: transfer, Time: 03:30:57
{'Parameter Learning results': {'F1': 0.53556, 'Learning time': 31.366, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'CLL': -0.660701, 'Inference time': 2.278, 'Precision': [0.704691, 0.5]}, 'F1': 0.53556, 'Learning time': 65.584, 'Recall': 0.431901, 'AUC PR': 0.636573, 'AUC ROC': 0.645378, 'Mapping results': {'Finding best mapping': 0.009912967681884766, 'Knowledge compiling time': 0.08820080757141113, 'Total time': 3.267223358154297, 'Generating mappings time': 0.035396575927734375, 'Possible mappings': 98, 'Generating paths time': 3.1337056159973145}, 'CLL': -0.660701, 'Inference time': 2.252, 'Precision': [0.704691, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5427455121166226;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( complex(B, E), complex(A, E) )
%   | then return 0.8116373071925351;  // std dev = 0,211, 43,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=41 */
%   | else if ( phenotype(B, F), phenotype(G, F), proteinclass(G, H) )
%   | | then return 0.11375431626543227;  // std dev = 0,436, 223,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | | else if ( proteinclass(A, I), function(B, J), enzyme(A, K) )
%   | | | then return 0.14538297765270278;  // std dev = 0,452, 94,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | else if ( proteinclass(A, L), proteinclass(M, L), enzyme(M, N) )
%   | | | | then return 0.4581489350995123;  // std dev = 0,490, 25,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=15 */
%   | | | | else if ( proteinclass(A, P), enzyme(B, Q) )
%   | | | | | then return 0.036720363670940885;  // std dev = 0,383, 28,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=5 */
%   | | | | | else if ( proteinclass(B, R), complex(B, S), location(B, T) )
%   | | | | | | then return 0.5010060779566541;  // std dev = 0,479, 56,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=36 */
%   | | | | | | else if ( proteinclass(A, U), complex(A, W) )
%   | | | | | | | then return 0.19148226843284663;  // std dev = 0,471, 159,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=53 */
%   | | | | | | | else return 0.2787305905804922;  // std dev = 0,494, 894,000 (wgt'ed) examples reached here.  /* #neg=518 #pos=376 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.4631496981317357;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), phenotype(F, E), proteinclass(F, G) )
%   | then return 0.09933517362881995;  // std dev = 0,436, 223,000 (wgt'ed) examples reached here.  /* #neg=166 #pos=57 */
%   | else if ( complex(B, H), location(B, I), location(A, I) )
%   | | then return 0.4485489560288985;  // std dev = 0,464, 209,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=136 */
%   | | else if ( complex(B, J), phenotype(A, K) )
%   | | | then return 0.06804920798794283;  // std dev = 0,430, 85,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=21 */
%   | | | else if ( proteinclass(A, L) )
%   | | | | then return 0.1553056243029329;  // std dev = 0,465, 290,000 (wgt'ed) examples reached here.  /* #neg=196 #pos=94 */
%   | | | | else if ( phenotype(A, M), complex(A, N), function(B, P) )
%   | | | | | then if ( proteinclass(B, Q), complex(R, N), proteinclass(R, S) )
%   | | | | | | then return 0.40693222807942026;  // std dev = 0,493, 29,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=17 */
%   | | | | | | else if ( enzyme(A, T) )
%   | | | | | | | then return 0.2989862010929139;  // std dev = 0,500, 46,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=22 */
%   | | | | | | | else return 0.25067702234895317;  // std dev = 0,495, 207,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=89 */
%   | | | | | else return 0.22208709062539356;  // std dev = 0,490, 433,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=174 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.37330860529496585;  // std dev = 0,465, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), proteinclass(A, F), complex(A, G) )
%   | then return -0.05255800474691375;  // std dev = 0,322, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else if ( proteinclass(B, H), function(A, I), function(B, I) )
%   | | then return 0.364261218796375;  // std dev = 0,467, 153,000 (wgt'ed) examples reached here.  /* #neg=59 #pos=94 */
%   | | else if ( proteinclass(A, J), enzyme(A, K), function(B, L) )
%   | | | then return -0.001678243146596208;  // std dev = 0,384, 82,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=15 */
%   | | | else if ( proteinclass(B, M), proteinclass(N, M), enzyme(N, P) )
%   | | | | then return 0.033093690600839006;  // std dev = 0,422, 44,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=10 */
%   | | | | else if ( phenotype(B, Q), complex(B, R) )
%   | | | | | then return 0.062213617036929285;  // std dev = 0,425, 55,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=13 */
%   | | | | | else if ( phenotype(A, S) )
%   | | | | | | then return 0.18549097962227298;  // std dev = 0,487, 774,000 (wgt'ed) examples reached here.  /* #neg=465 #pos=309 */
%   | | | | | | else if ( complex(A, T), complex(B, T) )
%   | | | | | | | then return 0.6317690870998727;  // std dev = 8,94e-08, 20,000 (wgt'ed) examples reached here.  /* #pos=20 */
%   | | | | | | | else return 0.20772023365950573;  // std dev = 0,491, 343,000 (wgt'ed) examples reached here.  /* #neg=200 #pos=143 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C), location(B, D) )
%   then return 0.36429828621941135;  // std dev = 0,428, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E), function(A, F), function(B, F) )
%   | then if ( proteinclass(A, G), location(B, H), location(A, H) )
%   | | then return 0.3485592970247056;  // std dev = 0,450, 137,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=92 */
%   | | else if ( proteinclass(A, I), complex(B, J) )
%   | | | then return 0.004897036707023273;  // std dev = 0,420, 34,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=9 */
%   | | | else if ( complex(A, K), phenotype(B, L), location(B, M) )
%   | | | | then if ( complex(B, N), enzyme(B, P) )
%   | | | | | then return -0.3963262458937236;  // std dev = 1,05e-08, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | else if ( enzyme(A, Q), phenotype(R, E), phenotype(R, L) )
%   | | | | | | then return 0.2878842804220661;  // std dev = 0,465, 19,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=13 */
%   | | | | | | else if ( complex(B, K) )
%   | | | | | | | then return 0.6036737541062764;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | | | | else return 0.10809853286733744;  // std dev = 0,500, 113,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=57 */
%   | | | | else return 0.21978040745152025;  // std dev = 0,487, 408,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=218 */
%   | else return 0.15013794504132125;  // std dev = 0,472, 1.294,000 (wgt'ed) examples reached here.  /* #neg=759 #pos=535 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.2274771993087758;  // std dev = 0,460, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), complex(A, F), proteinclass(A, G) )
%   | then return -0.07150041565632391;  // std dev = 0,320, 51,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=6 */
%   | else if ( proteinclass(B, H), complex(B, I), location(B, J) )
%   | | then return 0.26872244323498784;  // std dev = 0,435, 110,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=69 */
%   | | else if ( proteinclass(A, K), proteinclass(L, K), phenotype(L, M) )
%   | | | then return 0.0744031544244592;  // std dev = 0,457, 342,000 (wgt'ed) examples reached here.  /* #neg=228 #pos=114 */
%   | | | else if ( phenotype(B, N), complex(B, P) )
%   | | | | then return 0.008068037061056367;  // std dev = 0,413, 46,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=10 */
%   | | | | else if ( phenotype(A, Q) )
%   | | | | | then if ( complex(A, R), phenotype(S, Q), enzyme(S, T) )
%   | | | | | | then if ( complex(S, U) )
%   | | | | | | | then return 0.1740589147140144;  // std dev = 0,496, 354,000 (wgt'ed) examples reached here.  /* #neg=188 #pos=166 */
%   | | | | | | | else return -0.008992460340737847;  // std dev = 0,447, 29,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=8 */
%   | | | | | | else return 0.04739987806427486;  // std dev = 0,464, 247,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=80 */
%   | | | | | else return 0.16620542543241051;  // std dev = 0,484, 343,000 (wgt'ed) examples reached here.  /* #neg=186 #pos=157 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C), location(B, D) )
%   then return 0.22397518475285164;  // std dev = 0,426, 326,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=242 */
%   else if ( phenotype(A, E), phenotype(F, E), complex(F, G) )
%   | then if ( complex(A, G), function(B, H), function(A, H) )
%   | | then if ( proteinclass(A, I), location(B, J), location(F, J) )
%   | | | then return 0.2762415989557635;  // std dev = 0,400, 75,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=55 */
%   | | | else if ( phenotype(B, K), proteinclass(F, L), phenotype(F, K) )
%   | | | | then return 0.40290296707641654;  // std dev = 0,305, 19,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=17 */
%   | | | | else if ( phenotype(B, M), proteinclass(F, N) )
%   | | | | | then return -0.11813858902574698;  // std dev = 0,478, 72,000 (wgt'ed) examples reached here.  /* #neg=46 #pos=26 */
%   | | | | | else if ( enzyme(B, P), complex(B, Q), phenotype(B, R) )
%   | | | | | | then return -0.3567162589178535;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #neg=4 */
%   | | | | | | else if ( enzyme(A, S) )
%   | | | | | | | then return 0.03786634316453676;  // std dev = 0,469, 47,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=21 */
%   | | | | | | | else return 0.15621954472303093;  // std dev = 0,479, 197,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=107 */
%   | | else return 0.0709809133210207;  // std dev = 0,472, 899,000 (wgt'ed) examples reached here.  /* #neg=547 #pos=352 */
%   | else return 0.13611192401228198;  // std dev = 0,467, 701,000 (wgt'ed) examples reached here.  /* #neg=351 #pos=350 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.1357696431762506;  // std dev = 0,454, 818,000 (wgt'ed) examples reached here.  /* #neg=258 #pos=560 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.0083027439568037;  // std dev = 0,426, 226,000 (wgt'ed) examples reached here.  /* #neg=168 #pos=58 */
%   | else if ( complex(B, G), proteinclass(B, H) )
%   | | then return 0.1928040934496854;  // std dev = 0,418, 93,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=63 */
%   | | else if ( proteinclass(A, I) )
%   | | | then return 0.03966364156020996;  // std dev = 0,458, 353,000 (wgt'ed) examples reached here.  /* #neg=234 #pos=119 */
%   | | | else if ( proteinclass(B, J), location(A, K) )
%   | | | | then return 1.5153381048755964E-4;  // std dev = 0,472, 82,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=31 */
%   | | | | else if ( phenotype(A, L) )
%   | | | | | then if ( enzyme(B, M), complex(B, N) )
%   | | | | | | then return 0.6209291186323043;  // std dev = 0,076, 9,000 (wgt'ed) examples reached here.  /* #pos=9 */
%   | | | | | | else if ( complex(A, P), phenotype(Q, L), enzyme(Q, R) )
%   | | | | | | | then return 0.08901350654876804;  // std dev = 0,493, 314,000 (wgt'ed) examples reached here.  /* #neg=177 #pos=137 */
%   | | | | | | | else return 0.032931860001216035;  // std dev = 0,471, 194,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=66 */
%   | | | | | else return 0.13572160420671678;  // std dev = 0,485, 251,000 (wgt'ed) examples reached here.  /* #neg=124 #pos=127 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(B, C), function(A, D), function(B, D) )
%   then return 0.1284105614535026;  // std dev = 0,446, 482,000 (wgt'ed) examples reached here.  /* #neg=156 #pos=326 */
%   else if ( proteinclass(B, E), location(B, F), location(A, F) )
%   | then return -0.09235400293887892;  // std dev = 0,387, 81,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=15 */
%   | else if ( phenotype(B, G), phenotype(A, G) )
%   | | then return 0.1308027311213674;  // std dev = 0,436, 190,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=138 */
%   | | else if ( enzyme(B, H), enzyme(I, H), proteinclass(I, J) )
%   | | | then return -0.11337645731651996;  // std dev = 0,383, 33,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=8 */
%   | | | else if ( phenotype(A, K) )
%   | | | | then return 0.04802389146757259;  // std dev = 0,472, 1.064,000 (wgt'ed) examples reached here.  /* #neg=620 #pos=444 */
%   | | | | else if ( complex(A, L), complex(B, L) )
%   | | | | | then return 0.24650203213599198;  // std dev = 0,312, 31,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=27 */
%   | | | | | else if ( complex(A, M) )
%   | | | | | | then return 0.018173260197461148;  // std dev = 0,464, 191,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=78 */
%   | | | | | | else if ( proteinclass(B, N), complex(B, P), location(A, Q) )
%   | | | | | | | then return 0.5934492839166124;  // std dev = 0,160, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | | | | else return 0.10157934057127994;  // std dev = 0,489, 263,000 (wgt'ed) examples reached here.  /* #neg=134 #pos=129 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), enzyme(B, D), phenotype(B, E) )
%   then return 0.15352576412081526;  // std dev = 0,403, 128,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=89 */
%   else if ( enzyme(B, F) )
%   | then return -0.022496989889665437;  // std dev = 0,462, 199,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=81 */
%   | else if ( complex(B, G), complex(A, G) )
%   | | then return 0.24382662953016346;  // std dev = 0,277, 100,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=91 */
%   | | else if ( complex(A, H), location(B, I) )
%   | | | then return 0.031440829234276206;  // std dev = 0,467, 897,000 (wgt'ed) examples reached here.  /* #neg=474 #pos=423 */
%   | | | else if ( phenotype(A, J), phenotype(B, J) )
%   | | | | then return 0.1466085678659241;  // std dev = 0,388, 109,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=85 */
%   | | | | else if ( phenotype(B, K), proteinclass(B, L), phenotype(A, M) )
%   | | | | | then return -0.11956907909973545;  // std dev = 0,471, 47,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=17 */
%   | | | | | else if ( complex(B, N), complex(P, N), proteinclass(P, Q) )
%   | | | | | | then return 0.1320915967441989;  // std dev = 0,449, 97,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=61 */
%   | | | | | | else if ( complex(B, R), phenotype(B, S) )
%   | | | | | | | then return -0.18953759403769876;  // std dev = 0,427, 32,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=9 */
%   | | | | | | | else return 0.05973793233355252;  // std dev = 0,479, 731,000 (wgt'ed) examples reached here.  /* #neg=417 #pos=314 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( proteinclass(A, C), function(B, D), function(A, D) )
%   then return 0.10995240923305526;  // std dev = 0,435, 448,000 (wgt'ed) examples reached here.  /* #neg=153 #pos=295 */
%   else if ( complex(A, E), complex(B, E) )
%   | then return 0.1757075915252845;  // std dev = 0,297, 67,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=60 */
%   | else if ( proteinclass(A, F), location(B, G) )
%   | | then return -0.05826569916458555;  // std dev = 0,405, 218,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=49 */
%   | | else if ( complex(B, H), complex(A, I) )
%   | | | then return -0.03979485370859145;  // std dev = 0,458, 235,000 (wgt'ed) examples reached here.  /* #neg=132 #pos=103 */
%   | | | else if ( enzyme(A, J), complex(B, K), enzyme(B, L) )
%   | | | | then return 0.4758604766377055;  // std dev = 0,170, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( complex(B, M), location(A, N), proteinclass(B, P) )
%   | | | | | then return -0.0248904147692818;  // std dev = 0,466, 63,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=34 */
%   | | | | | else if ( phenotype(A, Q), proteinclass(B, R), enzyme(B, S) )
%   | | | | | | then return 0.11658395365511091;  // std dev = 0,415, 69,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=47 */
%   | | | | | | else if ( proteinclass(B, T), location(A, U) )
%   | | | | | | | then return 0.004021262572334972;  // std dev = 0,473, 174,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=83 */
%   | | | | | | | else return 0.04879596584197833;  // std dev = 0,479, 1.062,000 (wgt'ed) examples reached here.  /* #neg=567 #pos=495 */
Results
   AUC ROC   = 0.643932
   AUC PR    = 0.671542
   CLL	      = -0.664846
   Precision = 0.681765 at threshold = 0.5
   Recall    = 0.355327
   F1        = 0.467171


Total learning time: 91.064 seconds
Total inference time: 4.5 seconds
AUC ROC: 0.643932


Dataset: twitter->yeast, Fold: 2, Type: scratch, Time: 03:32:33
{'F1': 0.467171, 'Learning time': 91.064, 'Recall': 0.355327, 'AUC PR': 0.671542, 'AUC ROC': 0.643932, 'CLL': -0.664846, 'Inference time': 4.5, 'Precision': [0.681765, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> function(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)', 'false,false,false': 'function(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'function(A, K)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,false': 'function(A, H)', 'false,true': 'function(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,false;function(B, H).;true;true', '0;false,true;function(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;function(A, J).;false;false', '0;false,false,false;function(A, K).;false;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,false;function(B, H).;true;true', '1;false,true;function(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;function(A, J).;false;false', '1;false,false,false;function(A, K).;false;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,false;function(B, H).;true;true', '2;false,true;function(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;function(A, J).;false;false', '2;false,false,false;function(A, K).;false;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;function(A, K).;false;false', '3;false,false,true,false;function(A, I).;false;false', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;function(A, K).;false;false', '4;false,false,true,false;function(A, I).;false;false', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;function(A, K).;false;false', '5;false,false,true,false;function(A, I).;false;false', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;function(A, K).;false;false', '6;false,false,true,false;function(A, I).;false;false', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;function(A, K).;false;false', '7;false,false,true,false;function(A, I).;false;false', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;function(A, K).;false;false', '8;false,false,true,false;function(A, I).;false;false', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;true', '9;false,false;function(A, H).;true;false', '9;false,true;function(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;function(A, G).;false;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false', '9;false;function(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.16562815947624016;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.3581489350995122;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.14424688162459248;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.308741135785635;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( function(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, J) )
%   | | | | then return 0.12357625186313503;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.2564123687585864;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.104301197312694;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.20613740734453975;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.08689198580080103;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.16162857548414666;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.07159091160654964;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.12455597792081964;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.05844404016553731;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.09492800936730683;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.04735453305420465;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.0718608885005586;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( function(A, I) )
%   | | | | then return 0.038137714131827496;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | | else return 0.05418307375954945;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else if ( function(B, F) )
%   | then if ( function(A, F) )
%   | | then return 0.03930851827806131;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   | | else if ( function(A, G) )
%   | | | then return 0.03056665598230434;  // std dev = 8,768, 361,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=111 */
%   | | | else return 0.04076025323305622;  // std dev = 1,000, 4,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=2 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
Results
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 13.741 seconds
Total inference time: 0.642 seconds
AUC ROC: 0.666605


Results in test set
   AUC ROC   = 0.666605
   AUC PR    = 0.646235
   CLL	      = -0.646286
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total inference time: 0.642 seconds
AUC ROC: 0.666605
Structure after Parameter Learning
[['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, H)', 'false,true': 'function(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, J)'}, {'false,true,true': [8.312, 195, 107], 'false,false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false': [0.0, 0, 0], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), function(A, C)', 'false,false': 'function(B, G)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'function(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'function(A, I)'}, {'false,true': [8.312, 195, 107], 'true,true': [9.812, 130, 371], 'false,false,true,false,true': [8.768, 250, 111], 'true,false': [7.125, 109, 95], 'false,false,true,true': [0.0, 0, 0], 'false,false,true,false,false': [1.0, 2, 2], 'false,false,false': [0.0, 0, 0]}], ['interaction(A, B)', {'': 'function(B, C), location(A, D), location(B, D)', 'false,true': 'function(A, F)', 'false,true,false': 'function(A, G)', 'true': 'function(A, C)', 'true,false': 'function(A, E)', 'false': 'function(B, F)'}, {'false,true,true': [7.125, 109, 95], 'false,false': [0.0, 0, 0], 'true,true': [9.812, 130, 371], 'false,true,false,false': [1.0, 2, 2], 'false,true,false,true': [8.768, 250, 111], 'true,false,true': [8.312, 195, 107], 'true,false,false': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '0;false,true;function(B, G).;false;false', '0;true;location(A, D), location(B, D).;false;false', '0;false;function(A, E), location(B, F), location(A, F).;true;false', '1;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '1;false,true;function(B, G).;false;false', '1;true;location(A, D), location(B, D).;false;false', '1;false;function(A, E), location(B, F), location(A, F).;true;false', '2;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '2;false,true;function(B, G).;false;false', '2;true;location(A, D), location(B, D).;false;false', '2;false;function(A, E), location(B, F), location(A, F).;true;false', '3;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '3;false,false;function(B, G).;false;false', '3;true;location(A, D), location(B, D).;false;false', '3;false;function(A, E), location(B, F), location(A, F).;false;true', '4;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '4;false,false;function(B, G).;false;false', '4;true;location(A, D), location(B, D).;false;false', '4;false;function(A, E), location(B, F), location(A, F).;false;true', '5;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '5;false,false;function(B, G).;false;false', '5;true;location(A, D), location(B, D).;false;false', '5;false;function(A, E), location(B, F), location(A, F).;false;true', '6;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '6;false,false;function(B, G).;false;false', '6;true;location(A, D), location(B, D).;false;false', '6;false;function(A, E), location(B, F), location(A, F).;false;true', '7;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '7;false,false;function(B, G).;false;false', '7;true;location(A, D), location(B, D).;false;false', '7;false;function(A, E), location(B, F), location(A, F).;false;true', '8;;interaction(A, B) :- function(B, C), function(A, C).;true;true', '8;false,false;function(B, G).;false;false', '8;true;location(A, D), location(B, D).;false;false', '8;false;function(A, E), location(B, F), location(A, F).;false;true', '9;;interaction(A, B) :- function(B, C), location(A, D), location(B, D).;true;false', '9;true;function(A, C).;false;true', '9;true,false;function(A, E).;false;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #2: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #3: [('false,false,false', 0), ('false,true,false', 0), ('false,false,true,true', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #4: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #5: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #6: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #7: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #8: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #9: [('false,false,true,true', 0), ('false,false,false', 0), ('false,false,true,false,false', 0.5), ('true,false', 0.5343137254901961), ('false,true', 0.6456953642384106), ('false,false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]
Tree #10: [('false,false', 0), ('true,false,false', 0), ('false,true,false,false', 0.5), ('false,true,true', 0.5343137254901961), ('true,false,true', 0.6456953642384106), ('false,true,false,true', 0.6925207756232687), ('true,true', 0.7405189620758483)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5986678971753563;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.3238352096093171;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.2124535708610979;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.16773797619540226;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5092806344909192;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.27967887045305123;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.18457525852421253;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1460683188657648;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40694209268682263;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.23358533290043032;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then if ( function(B, G) )
%   | | then return 0.15695958094464024;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.1250953221598019;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.31131736985345054;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1893884494699426;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.13091332050070584;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.10552719680101035;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2339673385233592;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.1499664239719153;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.10738299992125233;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.08785181115459323;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.17583957009278156;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.11671081014514938;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.08687742153729996;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.07232157573593731;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1332099087987416;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.08975048386788576;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.06951742794574954;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.05898584007307785;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.1019346768336284;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.06847164152165199;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.05514869303869294;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.04774613917021104;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.07875622264841688;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else return 0.05196741534881687;  // std dev = 7,125, 204,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=95 */
%   else if ( function(A, E), location(B, F), location(A, F) )
%   | then return 0.0434596171148312;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | else if ( function(B, G) )
%   | | then return 0.03841335735279484;  // std dev = 8,833, 365,000 (wgt'ed) examples reached here.  /* #neg=252 #pos=113 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), location(A, D), location(B, D) )
%   then if ( function(A, C) )
%   | then return 0.06135862930640935;  // std dev = 9,812, 501,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=371 */
%   | else if ( function(A, E) )
%   | | then return 0.034074002645492756;  // std dev = 8,312, 302,000 (wgt'ed) examples reached here.  /* #neg=195 #pos=107 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   else return 0.033821631884821866;  // std dev = 11,348, 569,000 (wgt'ed) examples reached here.  /* #neg=361 #pos=208 */
Results
   AUC ROC   = 0.662049
   AUC PR    = 0.643905
   CLL	      = -0.64792
   Precision = 0.701031 at threshold = 0.5
   Recall    = 0.49635
   F1        = 0.581197


Total learning time: 15.459 seconds
Total inference time: 0.865 seconds
AUC ROC: 0.662049


Best model AUC ROC so far: 0.666605


******************************************
Best model found
******************************************
Total revision time: 30.706999999999997
Best validation AUC ROC: 0.666605


Results
   AUC ROC   = 0.652567
   AUC PR    = 0.633533
   CLL	      = -0.661881
   Precision = 0.69153 at threshold = 0.5
   Recall    = 0.43321
   F1        = 0.532706


Total inference time: 2.724 seconds
AUC ROC: 0.652567
Dataset: twitter->yeast, Fold: 3, Type: transfer, Time: 03:33:12
{'Parameter Learning results': {'F1': 0.532706, 'Learning time': 13.741, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'CLL': -0.661881, 'Inference time': 2.378, 'Precision': [0.69153, 0.5]}, 'F1': 0.532706, 'Learning time': 30.706999999999997, 'Recall': 0.43321, 'AUC PR': 0.633533, 'AUC ROC': 0.652567, 'Mapping results': {'Finding best mapping': 0.01372528076171875, 'Knowledge compiling time': 0.04536294937133789, 'Total time': 2.983049154281616, 'Generating mappings time': 0.045406341552734375, 'Possible mappings': 98, 'Generating paths time': 2.8785483837127686}, 'CLL': -0.661881, 'Inference time': 2.724, 'Precision': [0.69153, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.8581489350995105;  // std dev = 7,15e-07, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), complex(E, D), phenotype(E, F) )
%   | then return 0.21876274584119615;  // std dev = 0,480, 391,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=141 */
%   | else if ( complex(B, G), complex(H, G), phenotype(H, I) )
%   | | then return 0.24963829680163768;  // std dev = 0,488, 235,000 (wgt'ed) examples reached here.  /* #neg=143 #pos=92 */
%   | | else if ( location(B, J), function(A, K), function(B, K) )
%   | | | then return 0.5572639793472965;  // std dev = 0,459, 226,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=158 */
%   | | | else if ( location(A, L), phenotype(B, M), location(B, N) )
%   | | | | then return 0.13721870254137283;  // std dev = 0,449, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | | else if ( enzyme(A, P), complex(B, Q) )
%   | | | | | then return 0.7152917922423694;  // std dev = 0,350, 7,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=6 */
%   | | | | | else if ( proteinclass(B, R), location(A, S) )
%   | | | | | | then return 0.15544623239680966;  // std dev = 0,457, 37,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=11 */
%   | | | | | | else if ( enzyme(A, T) )
%   | | | | | | | then return 0.39148226843284467;  // std dev = 0,499, 45,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=24 */
%   | | | | | | | else return 0.30301585525159996;  // std dev = 0,497, 263,000 (wgt'ed) examples reached here.  /* #neg=146 #pos=117 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.7194734122109554;  // std dev = 0,000, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), enzyme(A, E), phenotype(A, F) )
%   | then return 0.023409522719390126;  // std dev = 0,395, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | else if ( complex(A, G), location(A, H) )
%   | | then if ( location(B, H), complex(B, I), phenotype(A, J) )
%   | | | then return 0.4263945973462561;  // std dev = 0,490, 67,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=40 */
%   | | | else return 0.19995104696680754;  // std dev = 0,483, 397,000 (wgt'ed) examples reached here.  /* #neg=247 #pos=150 */
%   | | else if ( phenotype(B, K), function(A, L), function(B, L) )
%   | | | then return 0.4319099248472372;  // std dev = 0,480, 114,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=71 */
%   | | | else if ( complex(B, M), complex(N, M), phenotype(N, P) )
%   | | | | then return 0.1449659668754352;  // std dev = 0,466, 125,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=40 */
%   | | | | else if ( location(B, Q), function(A, R), function(B, R) )
%   | | | | | then return 0.49578512210515036;  // std dev = 0,449, 157,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=113 */
%   | | | | | else if ( enzyme(B, S), location(A, T) )
%   | | | | | | then return 0.041402033097692;  // std dev = 0,413, 32,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=7 */
%   | | | | | | else return 0.26025237876411655;  // std dev = 0,494, 288,000 (wgt'ed) examples reached here.  /* #neg=161 #pos=127 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( location(B, C), function(B, D), function(A, D) )
%   then return 0.3758634911694674;  // std dev = 0,443, 660,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=440 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then return 0.02943755245131527;  // std dev = 0,418, 200,000 (wgt'ed) examples reached here.  /* #neg=154 #pos=46 */
%   | else if ( phenotype(B, H), location(B, I), function(A, J) )
%   | | then return 0.07617743079289951;  // std dev = 0,445, 135,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=37 */
%   | | else if ( location(A, K), proteinclass(B, L) )
%   | | | then return 0.08388455443086282;  // std dev = 0,449, 43,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=12 */
%   | | | else if ( location(A, M), enzyme(B, N) )
%   | | | | then return 0.10163693033625498;  // std dev = 0,455, 30,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=9 */
%   | | | | else if ( location(A, P), location(B, P) )
%   | | | | | then if ( phenotype(A, Q) )
%   | | | | | | then return 0.4600242596854428;  // std dev = 0,459, 16,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=11 */
%   | | | | | | else if ( proteinclass(A, R), complex(A, S) )
%   | | | | | | | then return -9.369833306390864E-4;  // std dev = 0,416, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | | | else return 0.3009041887057469;  // std dev = 0,498, 80,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=42 */
%   | | | | | else return 0.21135991489806868;  // std dev = 0,493, 199,000 (wgt'ed) examples reached here.  /* #neg=112 #pos=87 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.4623947506393826;  // std dev = 0,086, 125,000 (wgt'ed) examples reached here.  /* #pos=125 */
%   else if ( complex(A, D), phenotype(A, E), enzyme(A, F) )
%   | then return -0.0120130065569092;  // std dev = 0,389, 67,000 (wgt'ed) examples reached here.  /* #neg=54 #pos=13 */
%   | else if ( proteinclass(B, G), proteinclass(H, G), phenotype(H, I) )
%   | | then return 0.07649292696919929;  // std dev = 0,458, 138,000 (wgt'ed) examples reached here.  /* #neg=91 #pos=47 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then return 0.2723642267495179;  // std dev = 0,473, 559,000 (wgt'ed) examples reached here.  /* #neg=240 #pos=319 */
%   | | | else if ( location(A, K) )
%   | | | | then return 0.09832104829509553;  // std dev = 0,474, 416,000 (wgt'ed) examples reached here.  /* #neg=267 #pos=149 */
%   | | | | else if ( location(B, L), phenotype(A, M) )
%   | | | | | then return -0.05770040475800551;  // std dev = 0,420, 11,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=3 */
%   | | | | | else if ( function(A, N), function(B, N) )
%   | | | | | | then return 0.5438742013908098;  // std dev = 0,353, 17,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=15 */
%   | | | | | | else if ( location(B, P) )
%   | | | | | | | then return 0.15982982054073605;  // std dev = 0,485, 34,000 (wgt'ed) examples reached here.  /* #neg=20 #pos=14 */
%   | | | | | | | else return -0.06749105120424317;  // std dev = 0,898, 5,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=1 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( complex(B, C), function(B, D), function(A, D) )
%   then return 0.2562025373405398;  // std dev = 0,401, 363,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=255 */
%   else if ( complex(B, E), complex(F, E), phenotype(F, G) )
%   | then return -0.010996314801120462;  // std dev = 0,421, 143,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=34 */
%   | else if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | then return 0.052336933971116203;  // std dev = 0,450, 260,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=78 */
%   | | else if ( proteinclass(B, K), phenotype(A, L) )
%   | | | then if ( phenotype(B, M) )
%   | | | | then return 0.6079521383190393;  // std dev = 0,086, 5,000 (wgt'ed) examples reached here.  /* #pos=5 */
%   | | | | else if ( proteinclass(A, N) )
%   | | | | | then return 0.3766873455513884;  // std dev = 0,998, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else if ( proteinclass(P, K), phenotype(P, Q) )
%   | | | | | | then return 0.5400528995249431;  // std dev = 0,836, 5,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=4 */
%   | | | | | | else return -0.1786640445597876;  // std dev = 0,811, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | else if ( phenotype(A, R), location(B, S), enzyme(A, T) )
%   | | | | then return -0.10365893469058764;  // std dev = 0,455, 13,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=4 */
%   | | | | else return 0.18365782146228013;  // std dev = 0,472, 573,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=302 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( phenotype(B, C), complex(A, D), complex(B, D) )
%   then return 0.29653958885649834;  // std dev = 0,140, 82,000 (wgt'ed) examples reached here.  /* #pos=82 */
%   else if ( proteinclass(B, E), proteinclass(F, E), phenotype(F, G) )
%   | then return 0.031951154290433;  // std dev = 0,441, 150,000 (wgt'ed) examples reached here.  /* #neg=96 #pos=54 */
%   | else if ( enzyme(A, H), phenotype(A, I), complex(A, J) )
%   | | then return -0.020954770979760506;  // std dev = 0,377, 62,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=13 */
%   | | else if ( enzyme(B, K), phenotype(B, L), complex(B, M) )
%   | | | then return -0.08668953619739668;  // std dev = 0,437, 28,000 (wgt'ed) examples reached here.  /* #neg=22 #pos=6 */
%   | | | else if ( location(B, N), location(A, N) )
%   | | | | then return 0.19386963703559384;  // std dev = 0,451, 582,000 (wgt'ed) examples reached here.  /* #neg=229 #pos=353 */
%   | | | | else if ( complex(A, P), proteinclass(A, Q), enzyme(B, R) )
%   | | | | | then return 0.39610967181512685;  // std dev = 0,441, 7,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=5 */
%   | | | | | else if ( enzyme(A, S) )
%   | | | | | | then if ( phenotype(B, T), enzyme(U, S), location(U, W) )
%   | | | | | | | then return -0.03409736715217929;  // std dev = 0,408, 12,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=3 */
%   | | | | | | | else return 0.22561527792751013;  // std dev = 0,477, 42,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=24 */
%   | | | | | | else return 0.04225588002365483;  // std dev = 0,469, 407,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=146 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.17922100253873408;  // std dev = 0,406, 315,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=218 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return -0.016897805507687016;  // std dev = 0,427, 157,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | else if ( complex(A, G), complex(H, G), phenotype(H, I) )
%   | | then return 0.042190115974243575;  // std dev = 0,431, 288,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=109 */
%   | | else if ( phenotype(A, J) )
%   | | | then if ( location(B, K), location(A, K), complex(B, L) )
%   | | | | then return 0.28597623868224437;  // std dev = 0,388, 14,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=10 */
%   | | | | else if ( location(B, M), enzyme(B, N), location(A, P) )
%   | | | | | then return -0.1446829217687014;  // std dev = 0,346, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | else if ( complex(B, Q), complex(R, Q), phenotype(R, S) )
%   | | | | | | then return -0.1062515986182317;  // std dev = 0,972, 6,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=1 */
%   | | | | | | else if ( location(B, T), phenotype(U, J), proteinclass(U, W) )
%   | | | | | | | then return 0.08340741898402824;  // std dev = 0,478, 47,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=24 */
%   | | | | | | | else return 0.25724161140640106;  // std dev = 0,458, 28,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=19 */
%   | | | else return 0.09955543088080389;  // std dev = 0,465, 508,000 (wgt'ed) examples reached here.  /* #neg=244 #pos=264 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(B, D), function(A, D) )
%   then return 0.13934936362513659;  // std dev = 0,406, 315,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=218 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return -0.01366095498701079;  // std dev = 0,427, 157,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=39 */
%   | else if ( complex(A, G), complex(H, G), phenotype(H, I) )
%   | | then return 0.033676918327229306;  // std dev = 0,431, 288,000 (wgt'ed) examples reached here.  /* #neg=179 #pos=109 */
%   | | else if ( location(B, J), location(A, J) )
%   | | | then return 0.1307908509019257;  // std dev = 0,445, 302,000 (wgt'ed) examples reached here.  /* #neg=109 #pos=193 */
%   | | | else if ( location(A, K), complex(B, L) )
%   | | | | then return -0.09762959127023323;  // std dev = 0,421, 43,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=11 */
%   | | | | else if ( location(A, M), proteinclass(B, N) )
%   | | | | | then return -0.07252853278692084;  // std dev = 0,433, 24,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=7 */
%   | | | | | else if ( enzyme(A, P), complex(A, Q) )
%   | | | | | | then return 0.2617372267886854;  // std dev = 0,473, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | | | else if ( enzyme(B, R), enzyme(A, R) )
%   | | | | | | | then return 0.5336836425724303;  // std dev = 0,153, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | | | | | | else return 0.04624786907645681;  // std dev = 0,483, 228,000 (wgt'ed) examples reached here.  /* #neg=130 #pos=98 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(A, D), location(B, E) )
%   then return 0.15423337099930393;  // std dev = 0,407, 51,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=35 */
%   else if ( proteinclass(B, F), proteinclass(G, F), phenotype(G, H) )
%   | then return -0.03825106381389119;  // std dev = 0,428, 124,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=40 */
%   | else if ( complex(B, I), phenotype(A, J), phenotype(B, J) )
%   | | then return 0.2513429430043561;  // std dev = 0,241, 62,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=58 */
%   | | else if ( enzyme(A, K), enzyme(L, K), phenotype(L, M) )
%   | | | then return 0.007916761236724123;  // std dev = 0,405, 146,000 (wgt'ed) examples reached here.  /* #neg=84 #pos=62 */
%   | | | else if ( location(B, N), location(A, N) )
%   | | | | then return 0.0999534411412193;  // std dev = 0,440, 545,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=330 */
%   | | | | else if ( complex(B, P), function(A, Q), function(B, Q) )
%   | | | | | then return -0.12448362872745601;  // std dev = 0,451, 43,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=14 */
%   | | | | | else if ( enzyme(A, R), location(B, S), location(A, T) )
%   | | | | | | then if ( complex(B, U) )
%   | | | | | | | then return 0.3130570784779301;  // std dev = 0,754, 3,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=2 */
%   | | | | | | | else return 0.17463368189835865;  // std dev = 0,471, 8,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=5 */
%   | | | | | | else return 0.015558769471322632;  // std dev = 0,461, 390,000 (wgt'ed) examples reached here.  /* #neg=250 #pos=140 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(B, C), function(B, D), function(A, D) )
%   then return 0.0935619426240911;  // std dev = 0,387, 363,000 (wgt'ed) examples reached here.  /* #neg=108 #pos=255 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then return -0.01689220825493017;  // std dev = 0,438, 286,000 (wgt'ed) examples reached here.  /* #neg=204 #pos=82 */
%   | else if ( complex(B, H), complex(I, H), phenotype(I, J) )
%   | | then return -0.01614335775247977;  // std dev = 0,432, 117,000 (wgt'ed) examples reached here.  /* #neg=87 #pos=30 */
%   | | else if ( location(A, K), function(B, L), function(A, L) )
%   | | | then return 0.10857056167952885;  // std dev = 0,438, 223,000 (wgt'ed) examples reached here.  /* #neg=69 #pos=154 */
%   | | | else if ( location(A, M), location(N, M), complex(N, P) )
%   | | | | then if ( proteinclass(A, Q), proteinclass(R, Q), enzyme(R, S) )
%   | | | | | then return 0.12818438837101864;  // std dev = 0,466, 35,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=19 */
%   | | | | | else if ( location(B, T), location(U, T), location(U, M) )
%   | | | | | | then if ( enzyme(U, W), enzyme(N, W), proteinclass(N, X) )
%   | | | | | | | then return -0.0011107790111420945;  // std dev = 0,472, 225,000 (wgt'ed) examples reached here.  /* #neg=133 #pos=92 */
%   | | | | | | | else return 0.24970988922925016;  // std dev = 0,464, 17,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=10 */
%   | | | | | | else return -0.11890869834812476;  // std dev = 0,430, 49,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=12 */
%   | | | | else return 0.11275856173955527;  // std dev = 0,467, 57,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=32 */
Results
   AUC ROC   = 0.652615
   AUC PR    = 0.668095
   CLL	      = -0.66278
   Precision = 0.639208 at threshold = 0.5
   Recall    = 0.426082
   F1        = 0.511326


Total learning time: 278.822 seconds
Total inference time: 7.925 seconds
AUC ROC: 0.652615


Dataset: twitter->yeast, Fold: 3, Type: scratch, Time: 03:37:59
{'F1': 0.511326, 'Learning time': 278.822, 'Recall': 0.426082, 'AUC PR': 0.668095, 'AUC ROC': 0.652615, 'CLL': -0.66278, 'Inference time': 7.925, 'Precision': [0.639208, 0.5]}


Best mapping found: ['follows(A,B) -> interaction(A,B)', 'tweets(A,B) -> enzyme(A,B)', 'accounttype(A,B) -> location(A,B)'] 

Tranferred structured tree: [['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [0.375, 191, 39], 'true,true': [0.497, 483, 387], 'false,true,false': [0.427, 183, 58], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false': [0.387, 49, 11], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,true,true': [0.488, 118, 76], 'false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [0.403, 374, 97], 'true,true': [0.497, 483, 387], 'false,false,true,false,true': [0.491, 108, 73], 'true,false': [0.434, 232, 687], 'false,false,false,false,false': [0.416, 7, 2], 'false,false,true,true': [0.488, 118, 76], 'false,false,true,false,false': [0.438, 43, 123], 'false,false,false,true': [0.381, 42, 9], 'false,false,false,false,true': [0.456, 81, 34]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.434, 232, 687], 'false,false,false': [0.387, 49, 11], 'true,true': [0.497, 483, 387], 'false,true,false,false': [0.438, 43, 123], 'true,false,false': [0.488, 118, 76], 'false,false,true,true': [0.427, 183, 58], 'false,false,true,false': [0.456, 81, 34], 'false,true,false,true': [0.491, 108, 73], 'true,false,true': [0.375, 191, 39]}]] 

Transferred target predicate: interaction 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '0;false,false,false;enzyme(A, K).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '1;false,false,false;enzyme(A, K).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '2;false,false,false;enzyme(A, K).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;enzyme(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;false;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;enzyme(A, K).;false;false', '3;false,false,true,false;enzyme(A, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;false;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;false;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;false;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;false;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;false;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;false', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.22400259363609637;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.3609484871711761;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.19449056448208704;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.31110728186563763;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( enzyme(A, K) )
%   | | | then return 0.16508655516703946;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | else return 0.25825886676574666;  // std dev = 14,941, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.40125234911517477;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.41751358415830997;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.22048316970840084;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.05259950478597549;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.18010688948105735;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.29933501303370724;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.13728663146700865;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.11459013452490119;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.30597716653683;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.32071184716014967;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.17148051633182343;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.04506156572157872;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.14341361761511429;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.23349880133935735;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.11218365916482889;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09019781906270513;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.2405132231023213;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.25517224256948945;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.13115060373003595;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03839689936532517;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.11226070841535328;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.17808031301814733;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.09036480862064877;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07026957412906448;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.19478558503680857;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.20975771563253554;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.09932141518842214;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.03256600389502004;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08681077500092178;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.13426442490613463;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07196774713737968;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05433619026124952;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.16176939808047838;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.17709649774527736;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.07481634168125942;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.02751039248460187;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06656852882667326;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10078118477892072;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.056814987510623235;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.041790169381226795;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.13711329382195048;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.15274385809367097;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.05620720508681774;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.023160528370293892;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05075578496808014;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.07559543456373714;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.044553334757396805;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03201701803605345;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then if ( enzyme(A, C) )
%   | then return 0.11814007732365525;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else if ( enzyme(A, E) )
%   | | then return 0.058614112072662296;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.0421763851458421;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   else if ( enzyme(B, F) )
%   | then if ( enzyme(A, F) )
%   | | then return 0.13400703000801117;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   | | else if ( enzyme(A, G) )
%   | | | then return 0.019442152765119698;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else return 0.03855005033302373;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | else if ( enzyme(A, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.03883758073739689;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | | | else return 0.03476140793128398;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | else return 0.04070111819599059;  // std dev = 14,692, 893,000 (wgt'ed) examples reached here.  /* #neg=444 #pos=449 */
Results
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total learning time: 52.901 seconds
Total inference time: 0.876 seconds
AUC ROC: 0.602959


Results in test set
   AUC ROC   = 0.602959
   AUC PR    = 0.608507
   CLL	      = -0.668667
   Precision = 0.570175 at threshold = 0.5
   Recall    = 0.464286
   F1        = 0.511811


Total inference time: 0.876 seconds
AUC ROC: 0.602959
Structure after Parameter Learning
[['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [2.11e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, H)', 'false,true': 'enzyme(B, G)', 'false,false,true': 'location(A, I), location(B, I)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,true,false': 'enzyme(A, J)', 'false,false,false': 'enzyme(A, K)'}, {'false,true,true': [2.415, 10, 14], 'true,true': [0.981, 1, 25], 'false,true,false': [4.889, 45, 51], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [1.05e-08, 0, 3], 'false,false,false,false': [14.941, 444, 449], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, C)', 'false,false': 'enzyme(B, G)', 'false,false,false': 'location(A, J), location(B, J)', 'false,false,true': 'location(A, H), location(B, H)', 'true': 'location(A, D), location(B, D)', 'false': 'enzyme(A, E), location(B, F), location(A, F)', 'false,false,false,false': 'enzyme(A, K)', 'false,false,true,false': 'enzyme(A, I)'}, {'false,true': [5.454, 55, 65], 'true,true': [0.981, 1, 25], 'false,false,true,false,true': [2.16, 21, 6], 'true,false': [0.0, 0, 3], 'false,false,false,false,false': [10.363, 262, 182], 'false,false,true,true': [5.734, 62, 70], 'false,false,true,false,false': [5.514, 68, 55], 'false,false,false,true': [10.403, 182, 267], 'false,false,false,false,true': [4.362, 52, 30]}], ['interaction(A, B)', {'': 'enzyme(B, C), location(A, D), location(B, D)', 'false,false': 'enzyme(A, H)', 'false,true': 'enzyme(A, F)', 'false,false,true': 'location(A, I), location(B, I)', 'false,true,false': 'enzyme(A, G)', 'true': 'enzyme(A, C)', 'true,false': 'enzyme(A, E)', 'false': 'enzyme(B, F)'}, {'false,true,true': [0.0, 0, 3], 'false,false,false': [14.692, 444, 449], 'true,true': [0.981, 1, 25], 'false,false,true,true': [4.889, 45, 51], 'false,true,false,false': [5.514, 68, 55], 'false,true,false,true': [2.16, 21, 6], 'false,false,true,false': [4.362, 52, 30], 'true,false,true': [2.415, 10, 14], 'true,false,false': [5.734, 62, 70]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;false', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;false', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;false', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '3;false,false;enzyme(B, G).;true;true', '3;false,false,false;location(A, J), location(B, J).;false;true', '3;false,false,true;location(A, H), location(B, H).;true;true', '3;true;location(A, D), location(B, D).;false;false', '3;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '3;false,false,false,false;enzyme(A, K).;false;false', '3;false,false,true,false;enzyme(A, I).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '4;false,false;enzyme(B, G).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, H), location(B, H).;true;true', '4;true;location(A, D), location(B, D).;false;false', '4;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,false;enzyme(A, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '5;false,false;enzyme(B, G).;true;true', '5;false,false,false;location(A, J), location(B, J).;false;true', '5;false,false,true;location(A, H), location(B, H).;true;true', '5;true;location(A, D), location(B, D).;false;false', '5;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '5;false,false,false,false;enzyme(A, K).;false;false', '5;false,false,true,false;enzyme(A, I).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '6;false,false;enzyme(B, G).;true;true', '6;false,false,false;location(A, J), location(B, J).;false;true', '6;false,false,true;location(A, H), location(B, H).;true;true', '6;true;location(A, D), location(B, D).;false;false', '6;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '6;false,false,false,false;enzyme(A, K).;false;false', '6;false,false,true,false;enzyme(A, I).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '7;false,false;enzyme(B, G).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, H), location(B, H).;true;true', '7;true;location(A, D), location(B, D).;false;false', '7;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '7;false,false,false,false;enzyme(A, K).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '8;false,false;enzyme(B, G).;true;true', '8;false,false,false;location(A, J), location(B, J).;false;true', '8;false,false,true;location(A, H), location(B, H).;true;true', '8;true;location(A, D), location(B, D).;false;false', '8;false;enzyme(A, E), location(B, F), location(A, F).;false;true', '8;false,false,false,false;enzyme(A, K).;false;false', '8;false,false,true,false;enzyme(A, I).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;true;true', '9;false,false;enzyme(A, H).;true;true', '9;false,true;enzyme(A, F).;false;true', '9;false,false,true;location(A, I), location(B, I).;false;false', '9;false,true,false;enzyme(A, G).;false;false', '9;true;enzyme(A, C).;false;true', '9;true,false;enzyme(A, E).;false;false', '9;false;enzyme(B, F).;true;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false,false', 0.5027995520716685), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #5: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #6: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #7: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #8: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #9: [('false,false,true,true', 0.5303030303030303), ('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #10: [('false,false,false', 0.5027995520716685), ('true,false,false', 0.5303030303030303), ('false,false,true,true', 0.53125), ('false,true,false,false', 0.5528455284552846), ('true,false,true', 0.5833333333333334), ('false,false,true,false', 0.6341463414634146), ('false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.8196873966379734;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.8581489350995121;  // std dev = 2,11e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.0803711573217346;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.30530340664422884;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.34943098638155884;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.6887087008157129;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.7194734122109545;  // std dev = 0,000, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07030324498182232;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.26393663086941727;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.3013680415683762;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then if ( location(A, D), location(B, D) )
%   | then return 0.5339272109474109;  // std dev = 0,981, 26,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=25 */
%   | else return 0.5553664367462845;  // std dev = 1,05e-08, 3,000 (wgt'ed) examples reached here.  /* #pos=3 */
%   else if ( enzyme(A, E), location(B, F), location(A, F) )
%   | then if ( enzyme(B, G) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, H) )
%   | | then if ( location(A, I), location(B, I) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.06102210441531306;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22110602934438703;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.25064699225158504;  // std dev = 15,610, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.402934545843775;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.225675585285144;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H) )
%   | | | | | then return 0.35684680607203684;  // std dev = 1,155, 6,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=4 */
%   | | | | | else return 0.06272915901321341;  // std dev = 0,483, 51,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=19 */
%   | | | | else return 0.3168468060720372;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.15715556023594265;  // std dev = 0,486, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, I), location(B, I) )
%   | | | then return 0.3053070428278925;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return 0.07650591294577223;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.12056216431909476;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074904058867061;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17504096437577563;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.3592390661507352;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.05142543983538175;  // std dev = 0,484, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.24538571851867014;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.12683568295855718;  // std dev = 0,486, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.2387645849383014;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.06052457336203083;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09515705280530191;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24200412148827358;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13355858341226148;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(B, H) )
%   | | | | then return 0.6481746741476717;  // std dev = 0,059, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( complex(A, I), complex(J, I), phenotype(J, K) )
%   | | | | | then return -0.03954780202017796;  // std dev = 0,472, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | | else return 0.18609823844805126;  // std dev = 0,477, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.10080669905318468;  // std dev = 0,485, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.18235890236051971;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.04753806782487307;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07428100301556732;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.1962948133020858;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10096665138980784;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.06462613166051943;  // std dev = 0,420, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.12951144255197056;  // std dev = 0,484, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.008629963352575851;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.09847663222465008;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.13757972688534514;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.037134852914370416;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.05752073447302714;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.1633021727450617;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.07596825982869103;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.00711996213195454;  // std dev = 0,468, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.12548273202595364;  // std dev = 0,478, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.007101192191291276;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.07579273125026893;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10328986046889431;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.02888907432121915;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.044285137432734614;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13866499333849036;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05703801473851764;  // std dev = 5,454, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.022252889219982957;  // std dev = 0,475, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.09631688061900032;  // std dev = 0,471, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.005848581709143029;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.05793317236306242;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.077475019475898;  // std dev = 10,403, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.022404602622918785;  // std dev = 4,362, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03395370446261172;  // std dev = 10,363, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05505887019968043;  // std dev = 0,449, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.0374033542384023;  // std dev = 0,479, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.028931887783263152;  // std dev = 0,491, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), function(A, H), function(B, H) )
%   | | | then return 0.13441207235995792;  // std dev = 0,465, 204,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=130 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.15513879954843132;  // std dev = 0,442, 94,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then if ( phenotype(A, P) )
%   | | | | | | then return 0.05956025229906705;  // std dev = 0,499, 317,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=165 */
%   | | | | | | else return -0.026307496594484024;  // std dev = 0,490, 198,000 (wgt'ed) examples reached here.  /* #neg=113 #pos=85 */
%   | | | | | else if ( complex(B, Q), complex(R, Q), proteinclass(R, S) )
%   | | | | | | then return -0.38395511147887046;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | | else return 0.174011086047597;  // std dev = 0,495, 75,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
Results
   AUC ROC   = 0.670995
   AUC PR    = 0.703648
   CLL	      = -0.654089
   Precision = 0.666667 at threshold = 0.5
   Recall    = 0.5
   F1        = 0.571429


Total learning time: 831.103 seconds
Total inference time: 0.861 seconds
AUC ROC: 0.670995


Best model AUC ROC so far: 0.670995


Refining iteration 2
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '0;false,false;enzyme(B, H).;true;true', '0;false,true;enzyme(B, G).;false;false', '0;false,false,true;location(A, I), location(B, I).;false;true', '0;true;location(A, D), location(B, D).;false;false', '0;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '0;false,false,true,false;enzyme(A, J).;false;false', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '1;false,false;enzyme(B, H).;true;true', '1;false,true;enzyme(B, G).;false;false', '1;false,false,true;location(A, I), location(B, I).;false;true', '1;true;location(A, D), location(B, D).;false;false', '1;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '1;false,false,true,false;enzyme(A, J).;false;false', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;true;true', '2;false,false;enzyme(B, H).;true;true', '2;false,true;enzyme(B, G).;false;false', '2;false,false,true;location(A, I), location(B, I).;false;true', '2;true;location(A, D), location(B, D).;false;false', '2;false;enzyme(A, E), location(B, F), location(A, F).;true;true', '2;false,false,true,false;enzyme(A, J).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,false;enzyme(B, F).;true;true', '3;false,false,false;location(A, I), location(B, I).;false;true', '3;false,false,true;location(A, G), location(B, G).;true;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '3;false,false,true,true;phenotype(B, H).;true;false', '3;false,false,false,false;enzyme(A, J).;false;false', '3;false,false,true,true,true;phenotype(A, H).;false;false', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, L), location(B, L).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false,false,true,true,false;complex(A, I), complex(J, I), phenotype(J, K).;false;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(B, H).;false;true', '5;false,false,false,false;enzyme(A, M).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), function(A, H), function(B, H).;false;true', '9;false,false,false,false,false,false;complex(B, Q), complex(R, Q), proteinclass(R, S).;false;false', '9;false,false,false,false,false;location(A, L), location(M, L), enzyme(M, N).;false;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, I), complex(J, I), proteinclass(J, K).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #2: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #3: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,true,false,true', 0.7777777777777778), ('true,true', 0.9615384615384616)]
Tree #4: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,false', 0.6266666666666667), ('false,false,true,true,true,false', 0.6274509803921569), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.6666666666666666), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,false,true', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true,true', 0.5205047318611987), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.56), ('false,false,false,false,false,true,false', 0.5707070707070707), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,true', 0.6372549019607843), ('false,false,false,false,true', 0.7127659574468085)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.26481560176617963;  // std dev = 0,491, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.8366435587554256;  // std dev = 0,145, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), proteinclass(K, L) )
%   | | | | then return 0.10632411758126283;  // std dev = 0,432, 137,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | | | else if ( complex(B, M), complex(N, M), proteinclass(N, P) )
%   | | | | | then return 0.11490569185626909;  // std dev = 0,437, 74,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=19 */
%   | | | | | else return 0.35740377861664735;  // std dev = 0,500, 671,000 (wgt'ed) examples reached here.  /* #neg=336 #pos=335 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.3343130248202107;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.044985809870924896;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.2699180591934171;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), location(B, K), location(A, K) )
%   | | | then return 0.4443348994447257;  // std dev = 0,441, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( location(B, L), location(A, L) )
%   | | | | then return 0.3530913652581639;  // std dev = 0,498, 252,000 (wgt'ed) examples reached here.  /* #neg=116 #pos=136 */
%   | | | | else return 0.21994681230663823;  // std dev = 0,486, 526,000 (wgt'ed) examples reached here.  /* #neg=314 #pos=212 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,182, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.2762734083793242;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.0383302999578853;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22708581797145816;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), location(A, K), location(B, K) )
%   | | | then return 0.3604379299489613;  // std dev = 0,434, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else if ( complex(A, L), complex(M, L), enzyme(M, N) )
%   | | | | then return 0.013129231426006412;  // std dev = 0,399, 81,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=17 */
%   | | | | else return 0.24409046543985158;  // std dev = 0,496, 697,000 (wgt'ed) examples reached here.  /* #neg=366 #pos=331 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.559953278903063;  // std dev = 0,329, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I), enzyme(B, J) )
%   | | | then return -0.13865572821154745;  // std dev = 0,400, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else if ( enzyme(B, K), function(A, L), function(B, L) )
%   | | | | then return 0.5502331606773416;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else if ( phenotype(B, M), function(A, N), function(B, N) )
%   | | | | | then return 0.35634174699265175;  // std dev = 0,471, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.009108464155234355;  // std dev = 0,467, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else if ( enzyme(B, P) )
%   | | then if ( location(A, Q), location(B, Q) )
%   | | | then return 0.22048316970840084;  // std dev = 0,499, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.15808711322732336;  // std dev = 5,966, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else return 0.19929966430656681;  // std dev = 0,480, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17313609683540226;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.39117748602879265;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.018535976594830483;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.2678441526954585;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.1275383307427236;  // std dev = 5,963, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.21862756508312492;  // std dev = 9,921, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.07313211030030077;  // std dev = 4,254, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.11093901727445521;  // std dev = 10,219, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13269159285490287;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(B, H) )
%   | | | | then return 0.6369018676725278;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( complex(A, I), complex(J, I), phenotype(J, K) )
%   | | | | | then return -0.03637629452222024;  // std dev = 3,039, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | | else return 0.18624099851879614;  // std dev = 4,506, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.10129325617246693;  // std dev = 5,960, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.16735347515448837;  // std dev = 9,913, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.05788429554016456;  // std dev = 4,251, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.0872901603374615;  // std dev = 10,213, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10081755163660766;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.084484316179584;  // std dev = 1,952, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.13361323366656536;  // std dev = 5,125, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.03414249649036193;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.10444922631882199;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.1269618770768763;  // std dev = 9,913, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.045511985993380244;  // std dev = 4,249, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.06801821190708815;  // std dev = 10,208, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.076258581157278;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return -0.015189185545567562;  // std dev = 3,550, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.14260475095423655;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.02768782680314445;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08055024446361793;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.0959996206240244;  // std dev = 9,916, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.03560424765610173;  // std dev = 4,247, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.0526290020141209;  // std dev = 10,205, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05756424512063839;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.02042638184183816;  // std dev = 3,188, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.09530930110225647;  // std dev = 4,433, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.02253362405036285;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06165319568920485;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.07256201497546981;  // std dev = 9,920, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.027747481667520075;  // std dev = 4,246, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.04051570912463495;  // std dev = 10,203, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.054375263572386354;  // std dev = 5,971, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.037520573041755635;  // std dev = 5,934, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.03170145889351612;  // std dev = 6,315, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), function(A, H), function(B, H) )
%   | | | then return 0.0855147196133182;  // std dev = 5,997, 204,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=130 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.06735992992602993;  // std dev = 4,280, 94,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then return 0.032795461205500843;  // std dev = 11,254, 515,000 (wgt'ed) examples reached here.  /* #neg=265 #pos=250 */
%   | | | | | else if ( complex(B, P), complex(Q, P), proteinclass(Q, R) )
%   | | | | | | then return -0.3402084877967487;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | | else return 0.16195415978693986;  // std dev = 4,289, 75,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
Results
   AUC ROC   = 0.692347
   AUC PR    = 0.711744
   CLL	      = -0.633804
   Precision = 0.676471 at threshold = 0.5
   Recall    = 0.492857
   F1        = 0.570248


Total learning time: 30.307 seconds
Total inference time: 0.693 seconds
AUC ROC: 0.692347


Best model AUC ROC so far: 0.692347


Refining iteration 3
********************************
Candidate for revision
['0;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '0;false,false;enzyme(B, G).;true;true', '0;false,true;enzyme(B, F).;false;false', '0;false,false,true;location(A, H), location(B, H).;false;false', '0;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '0;false,false,false,false;complex(A, J), complex(K, J), proteinclass(K, L).;false;false', '0;false,false,false;complex(B, I), complex(A, I).;false;true', '1;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '1;false,false;enzyme(B, G).;true;true', '1;false,true;enzyme(B, F).;false;false', '1;false,false,true;location(A, H), location(B, H).;true;true', '1;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '1;false,false,false,false;location(B, L), location(A, L).;false;false', '1;false,false,true,false;enzyme(A, I).;false;false', '1;false,false,false;complex(B, J), location(B, K), location(A, K).;false;true', '2;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '2;false,false;enzyme(B, G).;true;true', '2;false,true;enzyme(B, F).;false;false', '2;false,false,true;location(A, H), location(B, H).;false;true', '2;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '2;false,false,true,false;enzyme(A, I).;false;false', '2;false,false,false;complex(B, J), location(A, K), location(B, K).;false;false', '3;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '3;false,false;enzyme(B, P).;true;true', '3;false,true;complex(B, F), phenotype(A, G), proteinclass(A, H).;false;true', '3;false,false,true;location(A, Q), location(B, Q).;false;false', '3;false,true,false;proteinclass(A, I), enzyme(B, J).;false;true', '3;false,true,false,false;enzyme(B, K), function(A, L), function(B, L).;false;true', '3;false,true,false,false,false;phenotype(B, M), function(A, N), function(B, N).;false;false', '3;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '4;false,false;enzyme(B, F).;true;true', '4;false,false,false;location(A, J), location(B, J).;false;true', '4;false,false,true;location(A, G), location(B, G).;true;false', '4;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '4;false,false,true,true;phenotype(B, H).;true;false', '4;false,false,false,false;enzyme(A, K).;false;false', '4;false,false,true,true,true;phenotype(A, H), proteinclass(B, I).;false;false', '5;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '5;false,false;enzyme(B, F).;true;true', '5;false,false,false;location(A, L), location(B, L).;false;true', '5;false,false,true;location(A, G), location(B, G).;true;false', '5;false,false,true,true,false;complex(A, I), complex(J, I), phenotype(J, K).;false;false', '5;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '5;false,false,true,true;complex(A, H), complex(B, H).;false;true', '5;false,false,false,false;enzyme(A, M).;false;false', '6;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '6;false,false;enzyme(B, F).;true;true', '6;false,false,false;location(A, K), location(B, K).;false;true', '6;false,false,true;location(A, G), location(B, G).;true;true', '6;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '6;false,false,true,true;phenotype(B, H), complex(B, I).;false;false', '6;false,false,true,false;enzyme(A, J).;false;false', '6;false,false,false,false;enzyme(A, L).;false;false', '7;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '7;false,false;enzyme(B, F).;true;true', '7;false,false,false;location(A, J), location(B, J).;false;true', '7;false,false,true;location(A, G), location(B, G).;true;true', '7;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '7;false,false,true,true;phenotype(B, H).;false;false', '7;false,false,true,false;enzyme(A, I).;false;false', '7;false,false,false,false;enzyme(A, K).;false;false', '8;;interaction(A, B) :- enzyme(B, C), enzyme(A, C).;false;true', '8;false,false;enzyme(B, F).;true;true', '8;false,false,false;location(A, L), location(B, L).;false;true', '8;false,false,true;location(A, G), location(B, G).;true;true', '8;false;enzyme(A, D), location(B, E), location(A, E).;true;true', '8;false,false,true,true;complex(A, H), complex(I, H), phenotype(I, J).;false;false', '8;false,false,true,false;enzyme(A, K).;false;false', '8;false,false,false,false;enzyme(A, M).;false;false', '9;;interaction(A, B) :- enzyme(B, C), location(A, D), location(B, D).;false;true', '9;false,false;enzyme(A, F).;false;true', '9;false,false,false;complex(B, G), function(A, H), function(B, H).;false;true', '9;false,false,false,false,false,false;complex(B, P), complex(Q, P), proteinclass(Q, R).;false;false', '9;false,false,false,false,false;location(A, L), location(M, L), enzyme(M, N).;true;true', '9;false;enzyme(B, E).;false;true', '9;false,false,false,false;complex(A, I), complex(J, I), proteinclass(J, K).;false;true']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,false,false,false,false', 0.5007451564828614), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,true,true', 0.5833333333333334), ('false,false,true,false', 0.5933333333333334), ('false,false,false,false,false,true', 0.7432432432432432), ('false,false,false,false,true', 0.7518248175182481), ('true', 0.9655172413793104), ('false,false,false,true', 0.978494623655914)]
Tree #2: [('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,false,false,true', 0.5396825396825397), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,false,false', 0.596958174904943), ('false,false,false,true', 0.6649746192893401), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #3: [('false,false,false,false,false', 0.5251076040172167), ('false,false,true,true', 0.5303030303030303), ('false,true,false', 0.53125), ('false,false,true,false,false', 0.5528455284552846), ('false,true,true', 0.5833333333333334), ('false,false,false,true', 0.6649746192893401), ('false,false,true,false,true', 0.7777777777777778), ('false,false,false,false,true', 0.7901234567901234), ('true', 0.9655172413793104)]
Tree #4: [('false,false,false', 0.5087179487179487), ('false,false,true,true', 0.5303030303030303), ('false,false,true,false', 0.5933333333333334), ('false,true,false,false,false,true', 0.6666666666666666), ('false,true,false,false,false,false', 0.68), ('false,true,false,true', 0.8), ('false,true,true', 0.875), ('false,true,false,false,true', 0.8888888888888888), ('true', 0.9655172413793104)]
Tree #5: [('false,true', 0.5416666666666666), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true,false', 0.6226415094339622), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true,true', 0.75), ('true', 0.9655172413793104)]
Tree #6: [('false,true', 0.5416666666666666), ('false,false,true,true,false,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,true,false', 0.5933333333333334), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,false,true', 0.6341463414634146), ('false,false,false,false,true', 0.6341463414634146), ('true', 0.9655172413793104)]
Tree #7: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,false', 0.5675675675675675), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,true,true', 0.6666666666666666), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #8: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,true,true,true', 0.5964912280701754), ('false,false,true,true,false', 0.6266666666666667), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #9: [('false,true', 0.5416666666666666), ('false,false,true,false,false', 0.5528455284552846), ('false,false,true,true,true', 0.5777777777777777), ('false,false,true,true,false', 0.5862068965517241), ('false,false,false,false,false', 0.5900900900900901), ('false,false,false,true', 0.5946547884187082), ('false,false,false,false,true', 0.6341463414634146), ('false,false,true,false,true', 0.7777777777777778), ('true', 0.9655172413793104)]
Tree #10: [('false,false,false,false,false,true', 0.5145631067961165), ('false,false,true', 0.5449438202247191), ('false,false,false,false,false,false,false', 0.56), ('false,true', 0.5816993464052288), ('true', 0.5989010989010989), ('false,false,false,true', 0.6372549019607843), ('false,false,false,false,true', 0.7127659574468085)]


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.8236661764788221;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.44148226843284566;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.3893989350995131;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.38845196540254373;  // std dev = 5,734, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.26481560176617963;  // std dev = 6,016, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( complex(B, I), complex(A, I) )
%   | | | then return 0.8366435587554256;  // std dev = 1,399, 93,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=91 */
%   | | | else if ( complex(A, J), complex(K, J), proteinclass(K, L) )
%   | | | | then return 0.10632411758126283;  // std dev = 5,056, 137,000 (wgt'ed) examples reached here.  /* #neg=103 #pos=34 */
%   | | | | else return 0.3333167203344082;  // std dev = 13,631, 745,000 (wgt'ed) examples reached here.  /* #neg=391 #pos=354 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.691897402794752;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.37885201797682083;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.33511073003863007;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then if ( phenotype(B, I) )
%   | | | | then if ( phenotype(A, I), proteinclass(B, J) )
%   | | | | | then return 0.5540099945171806;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.18136848508321812;  // std dev = 0,485, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.4306766611838471;  // std dev = 0,484, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.044985809870924896;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.2699180591934171;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else return 0.2998865863693846;  // std dev = 0,490, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.5361507757067951;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( enzyme(B, F) )
%   | | then return 0.3103752149084655;  // std dev = 2,415, 24,000 (wgt'ed) examples reached here.  /* #neg=10 #pos=14 */
%   | | else return 0.27688962281342105;  // std dev = 4,889, 96,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=51 */
%   | else if ( enzyme(B, G) )
%   | | then if ( location(A, H), location(B, H) )
%   | | | then return 0.2755205690761291;  // std dev = 5,671, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return 0.0383302999578853;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.22708581797145816;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( complex(B, J), location(A, K), location(B, K) )
%   | | | then return 0.3837100948869618;  // std dev = 6,167, 197,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=131 */
%   | | | else return 0.21551157445572863;  // std dev = 13,802, 778,000 (wgt'ed) examples reached here.  /* #neg=430 #pos=348 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.4029188243794005;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then if ( complex(B, F), phenotype(A, G), proteinclass(A, H) )
%   | | then return 0.559953278903063;  // std dev = 1,612, 24,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=21 */
%   | | else if ( proteinclass(A, I), enzyme(B, J) )
%   | | | then return -0.13865572821154745;  // std dev = 1,265, 10,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=2 */
%   | | | else if ( enzyme(B, K), function(A, L), function(B, L) )
%   | | | | then return 0.5502331606773416;  // std dev = 0,943, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | | else if ( phenotype(B, M), function(A, N), function(B, N) )
%   | | | | | then return 0.35634174699265175;  // std dev = 2,449, 27,000 (wgt'ed) examples reached here.  /* #neg=9 #pos=18 */
%   | | | | | else return 0.009108464155234355;  // std dev = 3,301, 50,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=16 */
%   | else if ( enzyme(B, P) )
%   | | then if ( location(A, Q), location(B, Q) )
%   | | | then return 0.21998345749155274;  // std dev = 5,663, 132,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=70 */
%   | | | else return 0.15808711322732336;  // std dev = 5,966, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else return 0.20058563846859223;  // std dev = 0,486, 975,000 (wgt'ed) examples reached here.  /* #neg=496 #pos=479 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.3074634631599114;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.17313609683540226;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then if ( phenotype(A, H), proteinclass(B, I) )
%   | | | | | then return 0.3395327220453963;  // std dev = 0,866, 4,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=3 */
%   | | | | | else return 0.053188934729327016;  // std dev = 3,529, 53,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=20 */
%   | | | | else return 0.2456811586993289;  // std dev = 4,189, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else return 0.1275383307427236;  // std dev = 5,963, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.23814364423088114;  // std dev = 9,973, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.051544511756574804;  // std dev = 4,292, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.09680777098597343;  // std dev = 10,301, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.24197584993123575;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.13269159285490287;  // std dev = 0,470, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(B, H) )
%   | | | | then return 0.6640704076884985;  // std dev = 0,000, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else if ( complex(A, I), complex(J, I), phenotype(J, K) )
%   | | | | | then return -0.038937126388162;  // std dev = 3,013, 41,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=15 */
%   | | | | | else return 0.1854148969806851;  // std dev = 4,450, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else return 0.10129325617246693;  // std dev = 5,960, 150,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=61 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.18295358614149473;  // std dev = 9,962, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.040369711229657844;  // std dev = 4,291, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.07565136264481716;  // std dev = 10,298, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.19626877650663035;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.10081755163660766;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H), complex(B, I) )
%   | | | | then return -0.06055541519508088;  // std dev = 1,927, 21,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=7 */
%   | | | | else return 0.128955212564189;  // std dev = 5,099, 111,000 (wgt'ed) examples reached here.  /* #neg=48 #pos=63 */
%   | | | else if ( enzyme(A, J) )
%   | | | | then return -0.03414249649036193;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.10444922631882199;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, K), location(B, K) )
%   | | | then return 0.13891429652866188;  // std dev = 9,961, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, L) )
%   | | | | then return 0.03147634360796638;  // std dev = 4,290, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.058636630080077363;  // std dev = 10,297, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.16327920417583955;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.076258581157278;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( phenotype(B, H) )
%   | | | | then return 0.0068392439126290835;  // std dev = 3,531, 57,000 (wgt'ed) examples reached here.  /* #neg=34 #pos=23 */
%   | | | | else return 0.12592744519290427;  // std dev = 4,141, 75,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=47 */
%   | | | else if ( enzyme(A, I) )
%   | | | | then return -0.02768782680314445;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.08055024446361793;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, J), location(B, J) )
%   | | | then return 0.10496314330210516;  // std dev = 9,963, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return 0.024459366769024292;  // std dev = 4,290, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.04518141909284973;  // std dev = 10,296, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, C) )
%   then return 0.13864498775228534;  // std dev = 0,983, 29,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=28 */
%   else if ( enzyme(A, D), location(B, E), location(A, E) )
%   | then return 0.05756424512063839;  // std dev = 0,469, 120,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=65 */
%   | else if ( enzyme(B, F) )
%   | | then if ( location(A, G), location(B, G) )
%   | | | then if ( complex(A, H), complex(I, H), phenotype(I, J) )
%   | | | | then return -0.02084310317914615;  // std dev = 3,185, 45,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=19 */
%   | | | | else return 0.09573327253996776;  // std dev = 4,396, 87,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=51 */
%   | | | else if ( enzyme(A, K) )
%   | | | | then return -0.02253362405036285;  // std dev = 2,160, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | | else return 0.06165319568920485;  // std dev = 5,514, 123,000 (wgt'ed) examples reached here.  /* #neg=68 #pos=55 */
%   | | else if ( location(A, L), location(B, L) )
%   | | | then return 0.07922237755685947;  // std dev = 9,967, 449,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=267 */
%   | | | else if ( enzyme(A, M) )
%   | | | | then return 0.01895823206769934;  // std dev = 4,289, 82,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=30 */
%   | | | | else return 0.03466657493361718;  // std dev = 10,295, 444,000 (wgt'ed) examples reached here.  /* #neg=262 #pos=182 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( enzyme(B, C), location(A, D), location(B, D) )
%   then return 0.05454381751342886;  // std dev = 5,942, 182,000 (wgt'ed) examples reached here.  /* #neg=73 #pos=109 */
%   else if ( enzyme(B, E) )
%   | then return 0.037520573041755635;  // std dev = 5,934, 153,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=64 */
%   | else if ( enzyme(A, F) )
%   | | then return 0.0285245085905926;  // std dev = 6,345, 178,000 (wgt'ed) examples reached here.  /* #neg=97 #pos=81 */
%   | | else if ( complex(B, G), function(A, H), function(B, H) )
%   | | | then return 0.08337014250882238;  // std dev = 6,096, 204,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=130 */
%   | | | else if ( complex(A, I), complex(J, I), proteinclass(J, K) )
%   | | | | then return -0.09308804363805344;  // std dev = 4,308, 94,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=27 */
%   | | | | else if ( location(A, L), location(M, L), enzyme(M, N) )
%   | | | | | then if ( complex(B, P), proteinclass(B, Q), phenotype(B, R) )
%   | | | | | | then return -0.44131151002742325;  // std dev = 0,172, 6,000 (wgt'ed) examples reached here.  /* #neg=6 */
%   | | | | | | else return 0.0441671151118244;  // std dev = 0,497, 509,000 (wgt'ed) examples reached here.  /* #neg=259 #pos=250 */
%   | | | | | else if ( complex(B, S), complex(T, S), proteinclass(T, U) )
%   | | | | | | then return -0.3917991771988247;  // std dev = 0,000, 5,000 (wgt'ed) examples reached here.  /* #neg=5 */
%   | | | | | | else return 0.16677981986282936;  // std dev = 4,289, 75,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=42 */
Results
   AUC ROC   = 0.684311
   AUC PR    = 0.720592
   CLL	      = -0.638836
   Precision = 0.67619 at threshold = 0.5
   Recall    = 0.507143
   F1        = 0.579592


Total learning time: 184.997 seconds
Total inference time: 0.788 seconds
AUC ROC: 0.684311


Best model AUC ROC so far: 0.692347


******************************************
Best model found
******************************************
Total revision time: 1102.526
Best validation AUC ROC: 0.692347


Results
   AUC ROC   = 0.598477
   AUC PR    = 0.626018
   CLL	      = -0.678496
   Precision = 0.612444 at threshold = 0.5
   Recall    = 0.46725
   F1        = 0.530084


Total inference time: 3.145 seconds
AUC ROC: 0.598477
Dataset: twitter->yeast, Fold: 4, Type: transfer, Time: 03:56:32
{'Parameter Learning results': {'F1': 0.564328, 'Learning time': 52.901, 'Recall': 0.544948, 'AUC PR': 0.587618, 'AUC ROC': 0.586946, 'CLL': -0.680042, 'Inference time': 2.758, 'Precision': [0.585137, 0.5]}, 'F1': 0.530084, 'Learning time': 1102.526, 'Recall': 0.46725, 'AUC PR': 0.626018, 'AUC ROC': 0.598477, 'Mapping results': {'Finding best mapping': 0.010097265243530273, 'Knowledge compiling time': 0.05380082130432129, 'Total time': 3.1774022579193115, 'Generating mappings time': 0.03621101379394531, 'Possible mappings': 98, 'Generating paths time': 3.077284574508667}, 'CLL': -0.678496, 'Inference time': 3.145, 'Precision': [0.612444, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( complex(B, C), location(B, D), location(A, D) )
%   then return 0.5060362590431705;  // std dev = 0,478, 284,000 (wgt'ed) examples reached here.  /* #neg=100 #pos=184 */
%   else if ( complex(A, E), complex(F, E), proteinclass(F, G) )
%   | then return 0.17739776139059352;  // std dev = 0,466, 213,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=68 */
%   | else if ( complex(B, H) )
%   | | then return 0.2311648081153858;  // std dev = 0,484, 126,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=47 */
%   | | else if ( phenotype(B, I), enzyme(B, J) )
%   | | | then return 0.21752393509951154;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else if ( enzyme(B, K), enzyme(L, K), location(L, M) )
%   | | | | then return 0.5581489350995104;  // std dev = 0,458, 130,000 (wgt'ed) examples reached here.  /* #neg=39 #pos=91 */
%   | | | | else if ( location(B, N), location(A, N) )
%   | | | | | then if ( proteinclass(B, P), proteinclass(Q, P), phenotype(Q, R) )
%   | | | | | | then return 0.2971733253434148;  // std dev = 0,496, 41,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=18 */
%   | | | | | | else return 0.43942972327684926;  // std dev = 0,493, 203,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=118 */
%   | | | | | else if ( proteinclass(A, S), proteinclass(B, T), phenotype(A, U) )
%   | | | | | | then return 0.8581489350995123;  // std dev = 0,000, 6,000 (wgt'ed) examples reached here.  /* #pos=6 */
%   | | | | | | else return 0.2947271061909547;  // std dev = 0,496, 339,000 (wgt'ed) examples reached here.  /* #neg=191 #pos=148 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.7741377558885987;  // std dev = 0,127, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), proteinclass(E, F) )
%   | then return 0.12525697708139996;  // std dev = 0,456, 244,000 (wgt'ed) examples reached here.  /* #neg=171 #pos=73 */
%   | else if ( complex(B, G), complex(H, G), phenotype(H, I) )
%   | | then return 0.19669360550440892;  // std dev = 0,487, 210,000 (wgt'ed) examples reached here.  /* #neg=128 #pos=82 */
%   | | else if ( phenotype(B, J), enzyme(B, K) )
%   | | | then return 0.18892990335796267;  // std dev = 0,480, 64,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=23 */
%   | | | else if ( location(B, L), location(A, L) )
%   | | | | then return 0.3885338711939999;  // std dev = 0,489, 346,000 (wgt'ed) examples reached here.  /* #neg=140 #pos=206 */
%   | | | | else if ( location(A, M), location(N, M), complex(N, P) )
%   | | | | | then if ( enzyme(A, Q), location(B, R), location(N, R) )
%   | | | | | | then return 0.08213965218458624;  // std dev = 0,439, 40,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=11 */
%   | | | | | | else if ( phenotype(A, S), complex(A, P) )
%   | | | | | | | then return 0.3742381595768354;  // std dev = 0,495, 66,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=37 */
%   | | | | | | | else return 0.2464950689832019;  // std dev = 0,492, 231,000 (wgt'ed) examples reached here.  /* #neg=131 #pos=100 */
%   | | | | | else return 0.40492844347620643;  // std dev = 0,487, 79,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=47 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.6187800285681634;  // std dev = 0,128, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return 0.07577955637985323;  // std dev = 0,442, 186,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( complex(B, G), complex(H, G), proteinclass(H, I) )
%   | | then return 0.04221046655558542;  // std dev = 0,439, 118,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=32 */
%   | | else if ( complex(A, J), phenotype(B, K), proteinclass(B, L) )
%   | | | then return -0.01533645762105221;  // std dev = 0,398, 26,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=5 */
%   | | | else if ( function(B, M), function(A, M), location(B, N) )
%   | | | | then return 0.32562431441891965;  // std dev = 0,489, 371,000 (wgt'ed) examples reached here.  /* #neg=158 #pos=213 */
%   | | | | else if ( phenotype(A, P), phenotype(B, Q) )
%   | | | | | then return 0.3752671213860396;  // std dev = 0,478, 47,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=29 */
%   | | | | | else if ( location(A, R), location(S, R), enzyme(S, T) )
%   | | | | | | then if ( enzyme(B, U), enzyme(W, U), location(W, X) )
%   | | | | | | | then return 0.3006956606410039;  // std dev = 0,490, 94,000 (wgt'ed) examples reached here.  /* #neg=42 #pos=52 */
%   | | | | | | | else return 0.18877974440538378;  // std dev = 0,490, 358,000 (wgt'ed) examples reached here.  /* #neg=206 #pos=152 */
%   | | | | | | else return 0.3138144320079159;  // std dev = 0,490, 80,000 (wgt'ed) examples reached here.  /* #neg=35 #pos=45 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.46785743743699654;  // std dev = 0,128, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(E, D), enzyme(E, F) )
%   | then return 0.06351032020203382;  // std dev = 0,442, 186,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=51 */
%   | else if ( complex(B, G), complex(H, G), enzyme(H, I) )
%   | | then return 0.011750230323815173;  // std dev = 0,429, 103,000 (wgt'ed) examples reached here.  /* #neg=76 #pos=27 */
%   | | else if ( complex(A, J), complex(K, J), phenotype(K, L) )
%   | | | then return 0.1681519159364686;  // std dev = 0,487, 232,000 (wgt'ed) examples reached here.  /* #neg=127 #pos=105 */
%   | | | else if ( enzyme(B, M), location(B, N), location(A, N) )
%   | | | | then return 0.3460596355873605;  // std dev = 0,459, 98,000 (wgt'ed) examples reached here.  /* #neg=32 #pos=66 */
%   | | | | else if ( location(B, P), location(A, P), proteinclass(A, Q) )
%   | | | | | then if ( phenotype(B, R), phenotype(S, R), enzyme(S, T) )
%   | | | | | | then return 0.38507012776817984;  // std dev = 0,465, 40,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=28 */
%   | | | | | | else return 0.23200515356899537;  // std dev = 0,494, 79,000 (wgt'ed) examples reached here.  /* #neg=36 #pos=43 */
%   | | | | | else if ( complex(B, U), function(B, W), function(A, W) )
%   | | | | | | then return 0.38023781762287956;  // std dev = 0,478, 48,000 (wgt'ed) examples reached here.  /* #neg=17 #pos=31 */
%   | | | | | | else return 0.17413169424743577;  // std dev = 0,489, 494,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=228 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.20140729224735385;  // std dev = 0,453, 727,000 (wgt'ed) examples reached here.  /* #neg=300 #pos=427 */
%   else if ( location(A, D), complex(A, E), phenotype(B, F) )
%   | then return 0.038092541981952124;  // std dev = 0,435, 87,000 (wgt'ed) examples reached here.  /* #neg=61 #pos=26 */
%   | else if ( proteinclass(A, G), proteinclass(H, G), complex(H, I) )
%   | | then return -0.05614607935906342;  // std dev = 0,355, 31,000 (wgt'ed) examples reached here.  /* #neg=25 #pos=6 */
%   | | else if ( function(B, J), function(K, J), phenotype(K, L) )
%   | | | then if ( enzyme(A, M), location(A, N) )
%   | | | | then return 0.045970274418819006;  // std dev = 0,450, 70,000 (wgt'ed) examples reached here.  /* #neg=47 #pos=23 */
%   | | | | else if ( phenotype(B, P), proteinclass(K, Q) )
%   | | | | | then return 0.11094593969906788;  // std dev = 0,472, 111,000 (wgt'ed) examples reached here.  /* #neg=66 #pos=45 */
%   | | | | | else if ( proteinclass(B, R), function(A, S), location(B, T) )
%   | | | | | | then return 0.4010762353864046;  // std dev = 0,423, 25,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=18 */
%   | | | | | | else if ( enzyme(B, U), enzyme(K, W), complex(K, X) )
%   | | | | | | | then return 0.27594527080489933;  // std dev = 0,440, 61,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=40 */
%   | | | | | | | else return 0.13681451858706822;  // std dev = 0,487, 174,000 (wgt'ed) examples reached here.  /* #neg=98 #pos=76 */
%   | | | else return 0.0571088176389076;  // std dev = 0,473, 120,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=42 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C) )
%   then return 0.16367620859780058;  // std dev = 0,443, 730,000 (wgt'ed) examples reached here.  /* #neg=312 #pos=418 */
%   else if ( enzyme(A, D), location(B, E) )
%   | then return -0.05092690323975614;  // std dev = 0,421, 75,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=19 */
%   | else if ( complex(A, F), complex(G, F), enzyme(G, H) )
%   | | then return -0.09492672857464451;  // std dev = 0,341, 44,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=6 */
%   | | else if ( proteinclass(B, I), phenotype(B, J) )
%   | | | then return -0.04862806997806925;  // std dev = 0,415, 51,000 (wgt'ed) examples reached here.  /* #neg=37 #pos=14 */
%   | | | else if ( function(B, K), function(L, K), proteinclass(L, M) )
%   | | | | then if ( proteinclass(A, M) )
%   | | | | | then return 0.24221080536501213;  // std dev = 0,479, 33,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=19 */
%   | | | | | else if ( enzyme(L, N), location(L, P), location(B, P) )
%   | | | | | | then if ( complex(L, Q) )
%   | | | | | | | then return 0.12983946780972988;  // std dev = 0,488, 229,000 (wgt'ed) examples reached here.  /* #neg=111 #pos=118 */
%   | | | | | | | else return 0.37676465671344844;  // std dev = 0,418, 25,000 (wgt'ed) examples reached here.  /* #neg=6 #pos=19 */
%   | | | | | | else return 0.0770464437312318;  // std dev = 0,487, 201,000 (wgt'ed) examples reached here.  /* #neg=117 #pos=84 */
%   | | | | else return 0.013351854750337165;  // std dev = 0,451, 18,000 (wgt'ed) examples reached here.  /* #neg=12 #pos=6 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C), enzyme(A, D) )
%   then return 0.196221544311626;  // std dev = 0,434, 172,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=105 */
%   else if ( phenotype(B, E), enzyme(B, F) )
%   | then return -0.028669780101215514;  // std dev = 0,434, 113,000 (wgt'ed) examples reached here.  /* #neg=78 #pos=35 */
%   | else if ( enzyme(A, G), location(B, H), location(A, H) )
%   | | then return -0.11716433462969847;  // std dev = 0,397, 31,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=7 */
%   | | else if ( function(B, I), function(A, I) )
%   | | | then return 0.12145719181054204;  // std dev = 0,441, 495,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=292 */
%   | | | else if ( complex(A, J), complex(K, J), proteinclass(K, L) )
%   | | | | then return -0.008145761015658342;  // std dev = 0,412, 83,000 (wgt'ed) examples reached here.  /* #neg=63 #pos=20 */
%   | | | | else if ( complex(B, M), complex(N, M), enzyme(N, P) )
%   | | | | | then return -0.04194572557008159;  // std dev = 0,400, 31,000 (wgt'ed) examples reached here.  /* #neg=23 #pos=8 */
%   | | | | | else if ( enzyme(B, Q), location(B, R), function(A, S) )
%   | | | | | | then return 0.18684776198528014;  // std dev = 0,454, 59,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=41 */
%   | | | | | | else if ( phenotype(A, T) )
%   | | | | | | | then return 0.12348993004758277;  // std dev = 0,486, 214,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=108 */
%   | | | | | | | else return 0.04889238321724349;  // std dev = 0,487, 208,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=87 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( enzyme(A, C), location(A, D), location(B, D) )
%   then return 0.16143501052513473;  // std dev = 0,425, 146,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=90 */
%   else if ( phenotype(B, E), proteinclass(A, F), complex(A, G) )
%   | then return 0.20521679592812042;  // std dev = 0,453, 42,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=26 */
%   | else if ( phenotype(B, H), proteinclass(B, I), complex(A, J) )
%   | | then return -0.0956756735414044;  // std dev = 0,397, 36,000 (wgt'ed) examples reached here.  /* #neg=29 #pos=7 */
%   | | else if ( phenotype(B, K), enzyme(B, L) )
%   | | | then return -0.05564555603091102;  // std dev = 0,425, 95,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=28 */
%   | | | else if ( proteinclass(B, M), function(A, N), function(B, N) )
%   | | | | then return 0.1639328244883008;  // std dev = 0,436, 75,000 (wgt'ed) examples reached here.  /* #neg=26 #pos=49 */
%   | | | | else if ( location(A, P), location(Q, P), enzyme(Q, R) )
%   | | | | | then return 0.05869742917297499;  // std dev = 0,457, 906,000 (wgt'ed) examples reached here.  /* #neg=461 #pos=445 */
%   | | | | | else if ( complex(B, S), function(A, T), phenotype(B, U) )
%   | | | | | | then return -0.007582327748238363;  // std dev = 0,454, 12,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=4 */
%   | | | | | | else if ( enzyme(B, W), function(A, X) )
%   | | | | | | | then return 0.2723289450732009;  // std dev = 0,316, 11,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=9 */
%   | | | | | | | else return 0.1212179809160549;  // std dev = 0,485, 83,000 (wgt'ed) examples reached here.  /* #neg=38 #pos=45 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, C) )
%   then return 0.23086647346756997;  // std dev = 0,129, 126,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=124 */
%   else if ( complex(A, D), complex(B, E) )
%   | then return -0.0614147193176641;  // std dev = 0,451, 125,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=39 */
%   | else if ( complex(A, F), complex(G, F), proteinclass(G, H) )
%   | | then return -0.002041854593687123;  // std dev = 0,429, 176,000 (wgt'ed) examples reached here.  /* #neg=126 #pos=50 */
%   | | else if ( phenotype(B, I), proteinclass(B, J), complex(B, K) )
%   | | | then return -0.08726148549264898;  // std dev = 0,373, 27,000 (wgt'ed) examples reached here.  /* #neg=21 #pos=6 */
%   | | | else if ( phenotype(B, L), enzyme(B, M) )
%   | | | | then return 0.004966146889378924;  // std dev = 0,461, 80,000 (wgt'ed) examples reached here.  /* #neg=52 #pos=28 */
%   | | | | else if ( enzyme(B, N), location(B, P), location(A, P) )
%   | | | | | then return 0.14360120044249242;  // std dev = 0,442, 87,000 (wgt'ed) examples reached here.  /* #neg=24 #pos=63 */
%   | | | | | else if ( location(A, Q), location(R, Q), enzyme(R, S) )
%   | | | | | | then if ( proteinclass(R, T), complex(R, U) )
%   | | | | | | | then return 0.04348095355186295;  // std dev = 0,483, 550,000 (wgt'ed) examples reached here.  /* #neg=282 #pos=268 */
%   | | | | | | | else return 0.10046123195256247;  // std dev = 0,481, 133,000 (wgt'ed) examples reached here.  /* #neg=65 #pos=68 */
%   | | | | | | else return 0.09475363605558626;  // std dev = 0,474, 102,000 (wgt'ed) examples reached here.  /* #neg=45 #pos=57 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( function(B, C), function(A, C), enzyme(A, D) )
%   then return 0.1111584452417683;  // std dev = 0,426, 172,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=105 */
%   else if ( function(B, E), function(A, E), proteinclass(B, F) )
%   | then return 0.09545671296113056;  // std dev = 0,443, 126,000 (wgt'ed) examples reached here.  /* #neg=55 #pos=71 */
%   | else if ( enzyme(A, G), location(B, H), location(A, H) )
%   | | then return -0.15100750549292075;  // std dev = 0,381, 34,000 (wgt'ed) examples reached here.  /* #neg=27 #pos=7 */
%   | | else if ( phenotype(B, I), enzyme(B, J) )
%   | | | then return -0.06740148292106599;  // std dev = 0,407, 78,000 (wgt'ed) examples reached here.  /* #neg=58 #pos=20 */
%   | | | else if ( function(B, K), function(A, K), complex(A, L) )
%   | | | | then return 0.07198017019940699;  // std dev = 0,392, 216,000 (wgt'ed) examples reached here.  /* #neg=79 #pos=137 */
%   | | | | else if ( enzyme(B, M), location(B, N), proteinclass(A, P) )
%   | | | | | then return 0.21857241268509817;  // std dev = 0,444, 29,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=21 */
%   | | | | | else if ( location(A, Q), location(R, Q), enzyme(R, S) )
%   | | | | | | then return 0.017831194925694335;  // std dev = 0,472, 651,000 (wgt'ed) examples reached here.  /* #neg=364 #pos=287 */
%   | | | | | | else if ( location(B, T), function(A, U), proteinclass(B, W) )
%   | | | | | | | then return 0.23140411746485334;  // std dev = 0,413, 12,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=8 */
%   | | | | | | | else return 0.04979987119723113;  // std dev = 0,476, 88,000 (wgt'ed) examples reached here.  /* #neg=41 #pos=47 */
Results
   AUC ROC   = 0.599833
   AUC PR    = 0.615699
   CLL	      = -0.684363
   Precision = 0.653191 at threshold = 0.5
   Recall    = 0.325643
   F1        = 0.434613


Total learning time: 99.971 seconds
Total inference time: 13.13 seconds
AUC ROC: 0.599833


Dataset: twitter->yeast, Fold: 4, Type: scratch, Time: 03:58:25
{'F1': 0.434613, 'Learning time': 99.971, 'Recall': 0.325643, 'AUC PR': 0.615699, 'AUC ROC': 0.599833, 'CLL': -0.684363, 'Inference time': 13.13, 'Precision': [0.653191, 0.5]}


Start learning from source dataset


WILL Produced-Tree #1
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.5398142000280186;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.18564893509950744;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(A, H), function(B, H) )
%   | | then if ( complex(B, I), complex(A, I) )
%   | | | then return 0.8196873966379739;  // std dev = 0,192, 52,000 (wgt'ed) examples reached here.  /* #neg=2 #pos=50 */
%   | | | else if ( enzyme(B, J), enzyme(K, J), location(K, L) )
%   | | | | then return 0.3151381824113388;  // std dev = 0,498, 186,000 (wgt'ed) examples reached here.  /* #neg=101 #pos=85 */
%   | | | | else if ( enzyme(A, M), complex(A, N), location(B, P) )
%   | | | | | then return 0.17064893509951212;  // std dev = 0,464, 64,000 (wgt'ed) examples reached here.  /* #neg=44 #pos=20 */
%   | | | | | else if ( proteinclass(B, Q), complex(B, R), location(B, S) )
%   | | | | | | then return 0.6990580260086022;  // std dev = 0,366, 44,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=37 */
%   | | | | | | else if ( complex(B, T), proteinclass(A, U) )
%   | | | | | | | then return 0.2059750220560341;  // std dev = 0,476, 46,000 (wgt'ed) examples reached here.  /* #neg=30 #pos=16 */
%   | | | | | | | else return 0.3952842136140976;  // std dev = 0,499, 754,000 (wgt'ed) examples reached here.  /* #neg=349 #pos=405 */
%   | | else return 0.29541219267526486;  // std dev = 0,496, 4.224,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.847 */
WILL Produced-Tree #2
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.46072335548061355;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), location(A, F) )
%   | then return 0.15821954552644565;  // std dev = 0,468, 1.132,000 (wgt'ed) examples reached here.  /* #neg=765 #pos=367 */
%   | else if ( phenotype(A, G), phenotype(H, G), complex(H, I) )
%   | | then return 0.23519603635360284;  // std dev = 0,490, 2.804,000 (wgt'ed) examples reached here.  /* #neg=1.617 #pos=1.187 */
%   | | else if ( location(B, J), function(B, K), function(A, K) )
%   | | | then return 0.46086154356503517;  // std dev = 0,479, 862,000 (wgt'ed) examples reached here.  /* #neg=308 #pos=554 */
%   | | | else if ( complex(A, L), location(B, M) )
%   | | | | then return 0.16127490748662754;  // std dev = 0,475, 277,000 (wgt'ed) examples reached here.  /* #neg=182 #pos=95 */
%   | | | | else if ( function(B, N), function(A, N) )
%   | | | | | then return 0.4389473898654068;  // std dev = 0,485, 87,000 (wgt'ed) examples reached here.  /* #neg=33 #pos=54 */
%   | | | | | else if ( function(A, P), function(Q, P), complex(Q, R) )
%   | | | | | | then return 0.22108390560416;  // std dev = 0,490, 1.158,000 (wgt'ed) examples reached here.  /* #neg=692 #pos=466 */
%   | | | | | | else if ( complex(B, S), complex(T, S), enzyme(T, U) )
%   | | | | | | | then return 0.10922430835294149;  // std dev = 0,450, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | | | | | else return 0.3613250179604628;  // std dev = 0,498, 229,000 (wgt'ed) examples reached here.  /* #neg=105 #pos=124 */
WILL Produced-Tree #3
% FOR interaction(A, B):
%   if ( phenotype(B, C), function(A, D), function(B, D) )
%   then return 0.3715247459791863;  // std dev = 0,466, 2.378,000 (wgt'ed) examples reached here.  /* #neg=757 #pos=1.621 */
%   else if ( phenotype(B, E), function(A, F) )
%   | then return 0.13753213575822199;  // std dev = 0,469, 1.200,000 (wgt'ed) examples reached here.  /* #neg=807 #pos=393 */
%   | else if ( phenotype(A, G), function(B, H), function(A, H) )
%   | | then if ( enzyme(A, I), enzyme(J, I), complex(J, K) )
%   | | | then return 0.1758322939196972;  // std dev = 0,479, 132,000 (wgt'ed) examples reached here.  /* #neg=80 #pos=52 */
%   | | | else if ( complex(B, L), location(B, M), location(A, M) )
%   | | | | then return 0.4374012601370136;  // std dev = 0,447, 220,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=153 */
%   | | | | else if ( complex(B, N) )
%   | | | | | then return 0.0914629344587267;  // std dev = 0,459, 76,000 (wgt'ed) examples reached here.  /* #neg=51 #pos=25 */
%   | | | | | else if ( enzyme(B, P), enzyme(Q, P), location(Q, R) )
%   | | | | | | then if ( location(A, R), phenotype(S, G), enzyme(S, T) )
%   | | | | | | | then return 0.2940959335289681;  // std dev = 0,500, 89,000 (wgt'ed) examples reached here.  /* #neg=43 #pos=46 */
%   | | | | | | | else return 0.11634670034353953;  // std dev = 0,480, 29,000 (wgt'ed) examples reached here.  /* #neg=19 #pos=10 */
%   | | | | | | else return 0.30777032625985745;  // std dev = 0,498, 600,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=327 */
%   | | else return 0.20928957686109367;  // std dev = 0,492, 4.224,000 (wgt'ed) examples reached here.  /* #neg=2.377 #pos=1.847 */
WILL Produced-Tree #4
% FOR interaction(A, B):
%   if ( phenotype(B, C), phenotype(A, C) )
%   then return 0.39260510619540123;  // std dev = 0,412, 832,000 (wgt'ed) examples reached here.  /* #neg=193 #pos=639 */
%   else if ( phenotype(A, D), phenotype(E, D), complex(E, F) )
%   | then if ( complex(B, F), complex(E, G), complex(A, G) )
%   | | then return 0.5768922625060078;  // std dev = 0,161, 121,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=118 */
%   | | else if ( enzyme(B, H), complex(A, F) )
%   | | | then return 0.06639138316108241;  // std dev = 0,468, 419,000 (wgt'ed) examples reached here.  /* #neg=271 #pos=148 */
%   | | | else if ( complex(B, F), location(B, I) )
%   | | | | then return 0.2100967650900628;  // std dev = 0,479, 322,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=173 */
%   | | | | else if ( complex(B, J), complex(K, F), proteinclass(K, L) )
%   | | | | | then return 0.0787286792435515;  // std dev = 0,478, 566,000 (wgt'ed) examples reached here.  /* #neg=352 #pos=214 */
%   | | | | | else if ( proteinclass(A, M), location(B, N), proteinclass(E, M) )
%   | | | | | | then return 0.07661503462864844;  // std dev = 0,467, 313,000 (wgt'ed) examples reached here.  /* #neg=203 #pos=110 */
%   | | | | | | else return 0.1679793596026627;  // std dev = 0,492, 2.369,000 (wgt'ed) examples reached here.  /* #neg=1.300 #pos=1.069 */
%   | else if ( location(B, P), function(B, Q), function(A, Q) )
%   | | then return 0.31222038079214615;  // std dev = 0,475, 1.610,000 (wgt'ed) examples reached here.  /* #neg=551 #pos=1.059 */
%   | | else return 0.14762235644531155;  // std dev = 0,486, 2.396,000 (wgt'ed) examples reached here.  /* #neg=1.452 #pos=944 */
WILL Produced-Tree #5
% FOR interaction(A, B):
%   if ( location(B, C), function(B, D), function(A, D) )
%   then return 0.22532960660552132;  // std dev = 0,470, 4.262,000 (wgt'ed) examples reached here.  /* #neg=1.542 #pos=2.720 */
%   else if ( complex(A, E), complex(F, E), proteinclass(F, G) )
%   | then return 0.04855434019863176;  // std dev = 0,464, 1.105,000 (wgt'ed) examples reached here.  /* #neg=745 #pos=360 */
%   | else if ( phenotype(A, H), phenotype(I, H), complex(I, J) )
%   | | then return 0.08479082817886203;  // std dev = 0,479, 1.429,000 (wgt'ed) examples reached here.  /* #neg=909 #pos=520 */
%   | | else if ( complex(B, K), phenotype(B, L), enzyme(B, M) )
%   | | | then return -0.08787143539618665;  // std dev = 0,361, 59,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=9 */
%   | | | else if ( proteinclass(B, N), location(B, P), location(A, Q) )
%   | | | | then return 0.07170422722660921;  // std dev = 0,470, 262,000 (wgt'ed) examples reached here.  /* #neg=174 #pos=88 */
%   | | | | else if ( complex(B, R), location(A, S), location(B, T) )
%   | | | | | then return 0.09051492706844583;  // std dev = 0,476, 261,000 (wgt'ed) examples reached here.  /* #neg=169 #pos=92 */
%   | | | | | else if ( enzyme(B, U), enzyme(W, U), proteinclass(W, X) )
%   | | | | | | then if ( complex(W, Y), location(B, Z), location(W, Z) )
%   | | | | | | | then return 0.1315516207776621;  // std dev = 0,492, 22,000 (wgt'ed) examples reached here.  /* #neg=13 #pos=9 */
%   | | | | | | | else return 0.4490066193537026;  // std dev = 0,430, 12,000 (wgt'ed) examples reached here.  /* #neg=3 #pos=9 */
%   | | | | | | else return 0.1539372518410527;  // std dev = 0,494, 1.536,000 (wgt'ed) examples reached here.  /* #neg=869 #pos=667 */
WILL Produced-Tree #6
% FOR interaction(A, B):
%   if ( location(B, C), location(A, C) )
%   then return 0.17306909885807026;  // std dev = 0,468, 4.835,000 (wgt'ed) examples reached here.  /* #neg=2.075 #pos=2.760 */
%   else if ( location(A, D), location(B, E) )
%   | then return 0.04635381687314053;  // std dev = 0,479, 2.882,000 (wgt'ed) examples reached here.  /* #neg=1.706 #pos=1.176 */
%   | else if ( location(A, F), function(B, G), function(A, G) )
%   | | then if ( proteinclass(A, H), complex(A, I), proteinclass(B, J) )
%   | | | then return -0.19783550872649125;  // std dev = 0,316, 9,000 (wgt'ed) examples reached here.  /* #neg=8 #pos=1 */
%   | | | else if ( phenotype(B, K), location(L, F), phenotype(L, K) )
%   | | | | then if ( complex(A, M), function(L, G), enzyme(L, N) )
%   | | | | | then return 0.2905688378586169;  // std dev = 0,430, 20,000 (wgt'ed) examples reached here.  /* #neg=5 #pos=15 */
%   | | | | | else return -0.10045225370834751;  // std dev = 0,478, 22,000 (wgt'ed) examples reached here.  /* #neg=14 #pos=8 */
%   | | | | else return 0.25194836806670623;  // std dev = 0,482, 136,000 (wgt'ed) examples reached here.  /* #neg=53 #pos=83 */
%   | | else if ( location(A, P), function(B, Q) )
%   | | | then return 0.051316290076992836;  // std dev = 0,479, 613,000 (wgt'ed) examples reached here.  /* #neg=393 #pos=220 */
%   | | | else if ( phenotype(A, R), enzyme(A, S), location(A, T) )
%   | | | | then return 0.6934595722215777;  // std dev = 0,007, 4,000 (wgt'ed) examples reached here.  /* #pos=4 */
%   | | | | else return 0.11966627408469403;  // std dev = 0,488, 427,000 (wgt'ed) examples reached here.  /* #neg=220 #pos=207 */
WILL Produced-Tree #7
% FOR interaction(A, B):
%   if ( enzyme(B, C), enzyme(A, D), location(A, E) )
%   then return 0.17699295167955473;  // std dev = 0,438, 296,000 (wgt'ed) examples reached here.  /* #neg=106 #pos=190 */
%   else if ( enzyme(B, F), complex(B, G), phenotype(B, H) )
%   | then return -0.07522718598425239;  // std dev = 0,458, 203,000 (wgt'ed) examples reached here.  /* #neg=135 #pos=68 */
%   | else if ( enzyme(B, I), complex(A, J), location(B, K) )
%   | | then return 0.03068904625066625;  // std dev = 0,467, 475,000 (wgt'ed) examples reached here.  /* #neg=284 #pos=191 */
%   | | else if ( phenotype(B, L), phenotype(A, L), location(B, M) )
%   | | | then return 0.22689001230869035;  // std dev = 0,398, 696,000 (wgt'ed) examples reached here.  /* #neg=152 #pos=544 */
%   | | | else if ( phenotype(A, N), function(B, P) )
%   | | | | then return 0.06727746577686804;  // std dev = 0,481, 3.625,000 (wgt'ed) examples reached here.  /* #neg=1.987 #pos=1.638 */
%   | | | | else if ( location(B, Q), location(A, Q) )
%   | | | | | then return 0.14248249534059768;  // std dev = 0,471, 1.929,000 (wgt'ed) examples reached here.  /* #neg=834 #pos=1.095 */
%   | | | | | else if ( complex(A, R), complex(S, R), phenotype(S, T) )
%   | | | | | | then return -0.028467650960262415;  // std dev = 0,465, 282,000 (wgt'ed) examples reached here.  /* #neg=187 #pos=95 */
%   | | | | | | else if ( location(A, U), proteinclass(A, W), proteinclass(B, X) )
%   | | | | | | | then return -0.09423810542527855;  // std dev = 0,417, 21,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=6 */
%   | | | | | | | else return 0.08610406321097121;  // std dev = 0,492, 1.421,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=647 */
WILL Produced-Tree #8
% FOR interaction(A, B):
%   if ( proteinclass(B, C), proteinclass(A, C) )
%   then return 0.3784255597311261;  // std dev = 0,231, 73,000 (wgt'ed) examples reached here.  /* #neg=4 #pos=69 */
%   else if ( proteinclass(B, D) )
%   | then return 0.040131937246114635;  // std dev = 0,470, 1.769,000 (wgt'ed) examples reached here.  /* #neg=899 #pos=870 */
%   | else if ( proteinclass(A, E), function(B, F) )
%   | | then return 0.05193571608636497;  // std dev = 0,472, 1.449,000 (wgt'ed) examples reached here.  /* #neg=774 #pos=675 */
%   | | else if ( enzyme(B, G), enzyme(A, H) )
%   | | | then return 0.20156350527592953;  // std dev = 0,410, 149,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=109 */
%   | | | else if ( enzyme(B, I), function(A, J) )
%   | | | | then if ( complex(A, K), complex(B, L) )
%   | | | | | then return -0.12967542341172889;  // std dev = 0,456, 56,000 (wgt'ed) examples reached here.  /* #neg=40 #pos=16 */
%   | | | | | else if ( complex(A, M), complex(N, M), phenotype(N, P) )
%   | | | | | | then return -0.0038741372972775565;  // std dev = 0,459, 206,000 (wgt'ed) examples reached here.  /* #neg=136 #pos=70 */
%   | | | | | | else if ( phenotype(B, Q), phenotype(A, R), location(A, S) )
%   | | | | | | | then return 0.2476821364514632;  // std dev = 0,469, 48,000 (wgt'ed) examples reached here.  /* #neg=16 #pos=32 */
%   | | | | | | | else return 0.034898451929057134;  // std dev = 0,484, 359,000 (wgt'ed) examples reached here.  /* #neg=209 #pos=150 */
%   | | | | else return 0.08765061687940316;  // std dev = 0,476, 4.839,000 (wgt'ed) examples reached here.  /* #neg=2.356 #pos=2.483 */
WILL Produced-Tree #9
% FOR interaction(A, B):
%   if ( proteinclass(B, C), phenotype(B, D), complex(A, E) )
%   then return 0.012004554088722147;  // std dev = 0,459, 512,000 (wgt'ed) examples reached here.  /* #neg=236 #pos=276 */
%   else if ( location(B, F), location(A, F) )
%   | then return 0.09377049967808847;  // std dev = 0,465, 4.482,000 (wgt'ed) examples reached here.  /* #neg=1.929 #pos=2.553 */
%   | else if ( location(A, G), location(B, H), complex(B, I) )
%   | | then return -0.021489267186232654;  // std dev = 0,467, 740,000 (wgt'ed) examples reached here.  /* #neg=446 #pos=294 */
%   | | else if ( location(A, J), phenotype(A, K), enzyme(B, L) )
%   | | | then return -0.04798031961026927;  // std dev = 0,446, 258,000 (wgt'ed) examples reached here.  /* #neg=173 #pos=85 */
%   | | | else if ( location(A, M), location(B, N), enzyme(A, P) )
%   | | | | then return -0.006965314175902723;  // std dev = 0,482, 275,000 (wgt'ed) examples reached here.  /* #neg=165 #pos=110 */
%   | | | | else if ( phenotype(B, Q), phenotype(R, Q), complex(R, S) )
%   | | | | | then return 0.059473319823169134;  // std dev = 0,475, 638,000 (wgt'ed) examples reached here.  /* #neg=319 #pos=319 */
%   | | | | | else if ( location(A, T), location(U, T), enzyme(U, W) )
%   | | | | | | then return 0.0232909851460468;  // std dev = 0,486, 1.810,000 (wgt'ed) examples reached here.  /* #neg=1.089 #pos=721 */
%   | | | | | | else if ( function(B, X), function(Y, X), complex(Y, Z) )
%   | | | | | | | then return 0.0952462308761072;  // std dev = 0,493, 185,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=96 */
%   | | | | | | | else return 0.0019490407604424304;  // std dev = 0,488, 48,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=20 */
WILL Produced-Tree #10
% FOR interaction(A, B):
%   if ( complex(B, C), complex(A, D) )
%   then return 0.07792083378971396;  // std dev = 0,436, 1.426,000 (wgt'ed) examples reached here.  /* #neg=555 #pos=871 */
%   else if ( complex(A, E), complex(F, E), phenotype(F, G) )
%   | then if ( phenotype(A, G), location(A, H) )
%   | | then if ( phenotype(B, G), location(I, H), enzyme(I, J) )
%   | | | then return 0.09931679190756239;  // std dev = 0,446, 218,000 (wgt'ed) examples reached here.  /* #neg=64 #pos=154 */
%   | | | else if ( phenotype(B, K), location(B, L), proteinclass(F, M) )
%   | | | | then return -0.046027351360533486;  // std dev = 0,474, 202,000 (wgt'ed) examples reached here.  /* #neg=118 #pos=84 */
%   | | | | else if ( proteinclass(A, N), location(B, P) )
%   | | | | | then return -0.04157095874602641;  // std dev = 0,464, 222,000 (wgt'ed) examples reached here.  /* #neg=149 #pos=73 */
%   | | | | | else if ( enzyme(B, Q), complex(R, E), enzyme(R, S) )
%   | | | | | | then return -0.08670178806809671;  // std dev = 0,409, 92,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=25 */
%   | | | | | | else if ( proteinclass(F, T) )
%   | | | | | | | then return 0.08213170773586426;  // std dev = 0,495, 420,000 (wgt'ed) examples reached here.  /* #neg=219 #pos=201 */
%   | | | | | | | else return 0.02507132817671864;  // std dev = 0,487, 848,000 (wgt'ed) examples reached here.  /* #neg=480 #pos=368 */
%   | | else return -0.03908613593690572;  // std dev = 0,465, 478,000 (wgt'ed) examples reached here.  /* #neg=297 #pos=181 */
%   | else return 0.04638152494381087;  // std dev = 0,478, 5.042,000 (wgt'ed) examples reached here.  /* #neg=2.525 #pos=2.517 */


Predicates from source: ['interaction(protein,protein).', 'location(protein,loc).', 'enzyme(protein,enz).', 'function(protein,fun).', 'proteinclass(protein,class).', 'phenotype(protein,phe).', 'complex(protein,com).'] 

Source structured tree: [['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(A, H), function(B, H)', 'false,false,true': 'complex(B, I), complex(A, I)', 'false,false,true,false,false': 'enzyme(A, M), complex(A, N), location(B, P)', 'false,false,true,false,false,false,false': 'complex(B, T), proteinclass(A, U)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,true,false': 'enzyme(B, J), enzyme(K, J), location(K, L)', 'false,false,true,false,false,false': 'proteinclass(B, Q), complex(B, R), location(B, S)'}, {'false,true': [0.469, 807, 393], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.498, 101, 85], 'false,false,true,false,false,false,false,false': [0.499, 349, 405], 'false,false,true,true': [0.192, 2, 50], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,false,false,true': [0.464, 44, 20], 'false,false,true,false,false,false,true': [0.366, 7, 37], 'false,false,true,false,false,false,false,true': [0.476, 30, 16]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), phenotype(H, G), complex(H, I)', 'false,false,false': 'location(B, J), function(B, K), function(A, K)', 'false,false,false,false,false,false': 'function(A, P), function(Q, P), complex(Q, R)', 'false,false,false,false,false': 'function(B, N), function(A, N)', 'false': 'phenotype(B, E), location(A, F)', 'false,false,false,false': 'complex(A, L), location(B, M)', 'false,false,false,false,false,false,false': 'complex(B, S), complex(T, S), enzyme(T, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.49, 1617, 1187], 'false,false,false,false,false,false,true': [0.49, 692, 466], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.485, 33, 54], 'false,false,false,false,false,false,false,true': [0.45, 15, 6], 'false,false,false,false,false,false,false,false': [0.498, 105, 124], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.475, 182, 95]}], ['interaction(A, B)', {'': 'phenotype(B, C), function(A, D), function(B, D)', 'false,false': 'phenotype(A, G), function(B, H), function(A, H)', 'false,false,true': 'enzyme(A, I), enzyme(J, I), complex(J, K)', 'false,false,true,false,false': 'complex(B, N)', 'false': 'phenotype(B, E), function(A, F)', 'false,false,true,false,false,false,true': 'location(A, R), phenotype(S, G), enzyme(S, T)', 'false,false,true,false': 'complex(B, L), location(B, M), location(A, M)', 'false,false,true,false,false,false': 'enzyme(B, P), enzyme(Q, P), location(Q, R)'}, {'false,true': [0.469, 807, 393], 'false,false,true,false,false,false,false': [0.498, 273, 327], 'false,false,true,false,false,false,true,true': [0.5, 43, 46], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.447, 67, 153], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,true': [0.479, 80, 52], 'false,false,true,false,false,false,true,false': [0.48, 19, 10], 'false,false,true,false,false,true': [0.459, 51, 25]}], ['interaction(A, B)', {'': 'phenotype(B, C), phenotype(A, C)', 'false,false': 'location(B, P), function(B, Q), function(A, Q)', 'false,true': 'complex(B, F), complex(E, G), complex(A, G)', 'false,true,false': 'enzyme(B, H), complex(A, F)', 'false,true,false,false': 'complex(B, F), location(B, I)', 'false,true,false,false,false': 'complex(B, J), complex(K, F), proteinclass(K, L)', 'false': 'phenotype(A, D), phenotype(E, D), complex(E, F)', 'false,true,false,false,false,false': 'proteinclass(A, M), location(B, N), proteinclass(E, M)'}, {'false,true,true': [0.161, 3, 118], 'false,true,false,false,true': [0.479, 149, 173], 'false,false,false': [0.486, 1452, 944], 'false,false,true': [0.475, 551, 1059], 'false,true,false,false,false,true': [0.478, 352, 214], 'true': [0.412, 193, 639], 'false,true,false,false,false,false,true': [0.467, 203, 110], 'false,true,false,false,false,false,false': [0.492, 1300, 1069], 'false,true,false,true': [0.468, 271, 148]}], ['interaction(A, B)', {'': 'location(B, C), function(B, D), function(A, D)', 'false,false': 'phenotype(A, H), phenotype(I, H), complex(I, J)', 'false,false,false': 'complex(B, K), phenotype(B, L), enzyme(B, M)', 'false,false,false,false,false,false,true': 'complex(W, Y), location(B, Z), location(W, Z)', 'false,false,false,false,false,false': 'enzyme(B, U), enzyme(W, U), proteinclass(W, X)', 'false,false,false,false,false': 'complex(B, R), location(A, S), location(B, T)', 'false': 'complex(A, E), complex(F, E), proteinclass(F, G)', 'false,false,false,false': 'proteinclass(B, N), location(B, P), location(A, Q)'}, {'false,false,false,false,false,false,false': [0.494, 869, 667], 'false,true': [0.464, 745, 360], 'false,false,true': [0.479, 909, 520], 'false,false,false,false,false,false,true,true': [0.492, 13, 9], 'true': [0.47, 1542, 2720], 'false,false,false,false,false,true': [0.476, 169, 92], 'false,false,false,false,false,false,true,false': [0.43, 3, 9], 'false,false,false,true': [0.361, 50, 9], 'false,false,false,false,true': [0.47, 174, 88]}], ['interaction(A, B)', {'': 'location(B, C), location(A, C)', 'false,false': 'location(A, F), function(B, G), function(A, G)', 'false,false,false': 'location(A, P), function(B, Q)', 'false,false,true': 'proteinclass(A, H), complex(A, I), proteinclass(B, J)', 'false,false,true,false,true': 'complex(A, M), function(L, G), enzyme(L, N)', 'false': 'location(A, D), location(B, E)', 'false,false,false,false': 'phenotype(A, R), enzyme(A, S), location(A, T)', 'false,false,true,false': 'phenotype(B, K), location(L, F), phenotype(L, K)'}, {'false,false,true,false,true,false': [0.478, 14, 8], 'false,false,true,false,true,true': [0.43, 5, 15], 'false,true': [0.479, 1706, 1176], 'true': [0.468, 2075, 2760], 'false,false,true,false,false': [0.482, 53, 83], 'false,false,false,false,false': [0.488, 220, 207], 'false,false,true,true': [0.316, 8, 1], 'false,false,false,true': [0.479, 393, 220], 'false,false,false,false,true': [0.007, 0, 4]}], ['interaction(A, B)', {'': 'enzyme(B, C), enzyme(A, D), location(A, E)', 'false,false': 'enzyme(B, I), complex(A, J), location(B, K)', 'false,false,false': 'phenotype(B, L), phenotype(A, L), location(B, M)', 'false,false,false,false,false,false': 'complex(A, R), complex(S, R), phenotype(S, T)', 'false,false,false,false,false': 'location(B, Q), location(A, Q)', 'false': 'enzyme(B, F), complex(B, G), phenotype(B, H)', 'false,false,false,false': 'phenotype(A, N), function(B, P)', 'false,false,false,false,false,false,false': 'location(A, U), proteinclass(A, W), proteinclass(B, X)'}, {'false,true': [0.458, 135, 68], 'false,false,true': [0.467, 284, 191], 'false,false,false,false,false,false,true': [0.465, 187, 95], 'true': [0.438, 106, 190], 'false,false,false,false,false,true': [0.471, 834, 1095], 'false,false,false,false,false,false,false,true': [0.417, 15, 6], 'false,false,false,false,false,false,false,false': [0.492, 774, 647], 'false,false,false,true': [0.398, 152, 544], 'false,false,false,false,true': [0.481, 1987, 1638]}], ['interaction(A, B)', {'': 'proteinclass(B, C), proteinclass(A, C)', 'false,false': 'proteinclass(A, E), function(B, F)', 'false,false,false': 'enzyme(B, G), enzyme(A, H)', 'false': 'proteinclass(B, D)', 'false,false,false,false': 'enzyme(B, I), function(A, J)', 'false,false,false,false,true,false,false': 'phenotype(B, Q), phenotype(A, R), location(A, S)', 'false,false,false,false,true': 'complex(A, K), complex(B, L)', 'false,false,false,false,true,false': 'complex(A, M), complex(N, M), phenotype(N, P)'}, {'false,false,false,false,true,false,true': [0.459, 136, 70], 'false,true': [0.47, 899, 870], 'false,false,true': [0.472, 774, 675], 'false,false,false,false,true,false,false,true': [0.469, 16, 32], 'true': [0.231, 4, 69], 'false,false,false,false,true,true': [0.456, 40, 16], 'false,false,false,false,false': [0.476, 2356, 2483], 'false,false,false,true': [0.41, 40, 109], 'false,false,false,false,true,false,false,false': [0.484, 209, 150]}], ['interaction(A, B)', {'': 'proteinclass(B, C), phenotype(B, D), complex(A, E)', 'false,false': 'location(A, G), location(B, H), complex(B, I)', 'false,false,false': 'location(A, J), phenotype(A, K), enzyme(B, L)', 'false,false,false,false,false,false': 'location(A, T), location(U, T), enzyme(U, W)', 'false,false,false,false,false': 'phenotype(B, Q), phenotype(R, Q), complex(R, S)', 'false': 'location(B, F), location(A, F)', 'false,false,false,false': 'location(A, M), location(B, N), enzyme(A, P)', 'false,false,false,false,false,false,false': 'function(B, X), function(Y, X), complex(Y, Z)'}, {'false,true': [0.465, 1929, 2553], 'false,false,true': [0.467, 446, 294], 'false,false,false,false,false,false,true': [0.486, 1089, 721], 'true': [0.459, 236, 276], 'false,false,false,false,false,true': [0.475, 319, 319], 'false,false,false,false,false,false,false,true': [0.493, 89, 96], 'false,false,false,false,false,false,false,false': [0.488, 28, 20], 'false,false,false,true': [0.446, 173, 85], 'false,false,false,false,true': [0.482, 165, 110]}], ['interaction(A, B)', {'': 'complex(B, C), complex(A, D)', 'false,true,true': 'phenotype(B, G), location(I, H), enzyme(I, J)', 'false,true': 'phenotype(A, G), location(A, H)', 'false,true,true,false': 'phenotype(B, K), location(B, L), proteinclass(F, M)', 'false,true,true,false,false': 'proteinclass(A, N), location(B, P)', 'false': 'complex(A, E), complex(F, E), phenotype(F, G)', 'false,true,true,false,false,false,false': 'proteinclass(F, T)', 'false,true,true,false,false,false': 'enzyme(B, Q), complex(R, E), enzyme(R, S)'}, {'false,false': [0.478, 2525, 2517], 'false,true,true,false,false,false,false,true': [0.495, 219, 201], 'false,true,true,false,false,false,true': [0.409, 67, 25], 'false,true,true,true': [0.446, 64, 154], 'true': [0.436, 555, 871], 'false,true,true,false,false,false,false,false': [0.487, 480, 368], 'false,true,true,false,false,true': [0.464, 149, 73], 'false,true,true,false,true': [0.474, 118, 84], 'false,true,false': [0.465, 297, 181]}]] 



Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> tweets(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false,false': 'tweets(A, M), tweets(A, N), accounttype(B, P)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,true,false': 'tweets(B, J), tweets(K, J), accounttype(K, L)', 'false,false,true,false,false,false,false': 'tweets(B, T), tweets(A, U)', 'false,false,true,false,false,false': 'tweets(B, Q), tweets(B, R), accounttype(B, S)'}, {'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.464, 44, 20], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.498, 101, 85], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,true': [0.192, 2, 50], 'false,false,true,false,false,false,false,false': [0.499, 349, 405], 'false,false,true,false,false,false,true': [0.366, 7, 37], 'false,false,true,false,false,false,false,true': [0.476, 30, 16]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'tweets(B, N), tweets(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.49, 1617, 1187], 'false,false,false,false,false,false,true': [0.49, 692, 466], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.485, 33, 54], 'false,false,false,false,false,false,false,true': [0.45, 15, 6], 'false,false,false,false,false,false,false,false': [0.498, 105, 124], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.475, 182, 95]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(B, H), tweets(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'tweets(B, N)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false,true,false,false,false,true': 'accounttype(A, R), tweets(S, G), tweets(S, T)', 'false,false,true,false': 'tweets(B, L), accounttype(B, M), accounttype(A, M)', 'false,false,true,false,false,false': 'tweets(B, P), tweets(Q, P), accounttype(Q, R)'}, {'false,false,true,false,false,false,true,false': [0.48, 19, 10], 'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.459, 51, 25], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.447, 67, 153], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,true': [0.479, 80, 52], 'false,false,true,false,false,false,false': [0.498, 273, 327], 'false,false,true,false,false,false,true,true': [0.5, 43, 46]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, P), tweets(B, Q), tweets(A, Q)', 'false,true': 'tweets(B, F), tweets(E, G), tweets(A, G)', 'false,true,false': 'tweets(B, H), tweets(A, F)', 'false,true,false,false': 'tweets(B, F), accounttype(B, I)', 'false,true,false,false,false': 'tweets(B, J), tweets(K, F), tweets(K, L)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,true,false,false,false,false': 'tweets(A, M), accounttype(B, N), tweets(E, M)'}, {'false,true,true': [0.161, 3, 118], 'false,true,false,false,true': [0.479, 149, 173], 'false,false,false': [0.486, 1452, 944], 'false,false,true': [0.475, 551, 1059], 'false,true,false,false,false,true': [0.478, 352, 214], 'true': [0.412, 193, 639], 'false,true,false,false,false,false,true': [0.467, 203, 110], 'false,true,false,false,false,false,false': [0.492, 1300, 1069], 'false,true,false,true': [0.468, 271, 148]}], ['follows(A, B)', {'': 'accounttype(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(A, H), tweets(I, H), tweets(I, J)', 'false,false,false': 'tweets(B, K), tweets(B, L), tweets(B, M)', 'false,false,false,false,false,false,true': 'tweets(W, Y), accounttype(B, Z), accounttype(W, Z)', 'false,false,false,false,false,false': 'tweets(B, U), tweets(W, U), tweets(W, X)', 'false,false,false,false,false': 'tweets(B, R), accounttype(A, S), accounttype(B, T)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,false,false,false': 'tweets(B, N), accounttype(B, P), accounttype(A, Q)'}, {'false,false,false,false,false,false,false': [0.494, 869, 667], 'false,false,true': [0.479, 909, 520], 'true': [0.47, 1542, 2720], 'false,false,false,false,false,true': [0.476, 169, 92], 'false,false,false,false,false,false,true,false': [0.43, 3, 9], 'false,false,false,false,true': [0.47, 174, 88], 'false,true': [0.464, 745, 360], 'false,false,false,false,false,false,true,true': [0.492, 13, 9], 'false,false,false,true': [0.361, 50, 9]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false,false': 'accounttype(A, F), tweets(B, G), tweets(A, G)', 'false,false,false': 'accounttype(A, P), tweets(B, Q)', 'false,false,true': 'tweets(A, H), tweets(A, I), tweets(B, J)', 'false,false,true,false,true': 'tweets(A, M), tweets(L, G), tweets(L, N)', 'false': 'accounttype(A, D), accounttype(B, E)', 'false,false,false,false': 'tweets(A, R), tweets(A, S), accounttype(A, T)', 'false,false,true,false': 'tweets(B, K), accounttype(L, F), tweets(L, K)'}, {'false,false,true,false,true,false': [0.478, 14, 8], 'false,false,true,false,true,true': [0.43, 5, 15], 'false,true': [0.479, 1706, 1176], 'true': [0.468, 2075, 2760], 'false,false,true,false,false': [0.482, 53, 83], 'false,false,false,false,false': [0.488, 220, 207], 'false,false,true,true': [0.316, 8, 1], 'false,false,false,true': [0.479, 393, 220], 'false,false,false,false,true': [0.007, 0, 4]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(A, E)', 'false,false': 'tweets(B, I), tweets(A, J), accounttype(B, K)', 'false,false,false': 'tweets(B, L), tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false': 'tweets(A, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'accounttype(B, Q), accounttype(A, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'tweets(A, N), tweets(B, P)', 'false,false,false,false,false,false,false': 'accounttype(A, U), tweets(A, W), tweets(B, X)'}, {'false,true': [0.458, 135, 68], 'false,false,true': [0.467, 284, 191], 'false,false,false,false,false,false,true': [0.465, 187, 95], 'true': [0.438, 106, 190], 'false,false,false,false,false,true': [0.471, 834, 1095], 'false,false,false,false,false,false,false,true': [0.417, 15, 6], 'false,false,false,false,false,false,false,false': [0.492, 774, 647], 'false,false,false,true': [0.398, 152, 544], 'false,false,false,false,true': [0.481, 1987, 1638]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, E), tweets(B, F)', 'false,false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false,false,true': 'tweets(A, K), tweets(B, L)', 'false': 'tweets(B, D)', 'false,false,false,false': 'tweets(B, I), tweets(A, J)', 'false,false,false,false,true,false,false': 'tweets(B, Q), tweets(A, R), accounttype(A, S)', 'false,false,false,false,true,false': 'tweets(A, M), tweets(N, M), tweets(N, P)'}, {'false,false,false,false,true,false,false,false': [0.484, 209, 150], 'false,false,false,false,true,false,true': [0.459, 136, 70], 'false,false,true': [0.472, 774, 675], 'false,false,false,false,true,false,false,true': [0.469, 16, 32], 'true': [0.231, 4, 69], 'false,false,false,false,true,true': [0.456, 40, 16], 'false,false,false,false,false': [0.476, 2356, 2483], 'false,true': [0.47, 899, 870], 'false,false,false,true': [0.41, 40, 109]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, E)', 'false,false': 'accounttype(A, G), accounttype(B, H), tweets(B, I)', 'false,false,false': 'accounttype(A, J), tweets(A, K), tweets(B, L)', 'false,false,false,false,false,false': 'accounttype(A, T), accounttype(U, T), tweets(U, W)', 'false,false,false,false,false': 'tweets(B, Q), tweets(R, Q), tweets(R, S)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'accounttype(A, M), accounttype(B, N), tweets(A, P)', 'false,false,false,false,false,false,false': 'tweets(B, X), tweets(Y, X), tweets(Y, Z)'}, {'false,true': [0.465, 1929, 2553], 'false,false,true': [0.467, 446, 294], 'false,false,false,false,false,false,true': [0.486, 1089, 721], 'true': [0.459, 236, 276], 'false,false,false,false,false,true': [0.475, 319, 319], 'false,false,false,false,false,false,false,true': [0.493, 89, 96], 'false,false,false,false,false,false,false,false': [0.488, 28, 20], 'false,false,false,true': [0.446, 173, 85], 'false,false,false,false,true': [0.482, 165, 110]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,true,true': 'tweets(B, G), accounttype(I, H), tweets(I, J)', 'false,true': 'tweets(A, G), accounttype(A, H)', 'false,true,true,false': 'tweets(B, K), accounttype(B, L), tweets(F, M)', 'false,true,true,false,false': 'tweets(A, N), accounttype(B, P)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,true,true,false,false,false,false': 'tweets(F, T)', 'false,true,true,false,false,false': 'tweets(B, Q), tweets(R, E), tweets(R, S)'}, {'false,false': [0.478, 2525, 2517], 'false,true,true,false,false,false,true': [0.409, 67, 25], 'false,true,true,false,false,false,false,true': [0.495, 219, 201], 'true': [0.436, 555, 871], 'false,true,false': [0.465, 297, 181], 'false,true,true,false,false,false,false,false': [0.487, 480, 368], 'false,true,true,false,false,true': [0.464, 149, 73], 'false,true,true,true': [0.446, 64, 154], 'false,true,true,false,true': [0.474, 118, 84]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false,false;tweets(A, G), tweets(A, H), tweets(B, H).;true;false', '0;false,false,true;tweets(B, I), tweets(A, I).;false;true', '0;false,false,true,false,false;tweets(A, M), tweets(A, N), accounttype(B, P).;false;true', '0;false;tweets(B, E), tweets(A, F).;false;true', '0;false,false,true,false;tweets(B, J), tweets(K, J), accounttype(K, L).;false;true', '0;false,false,true,false,false,false,false;tweets(B, T), tweets(A, U).;false;false', '0;false,false,true,false,false,false;tweets(B, Q), tweets(B, R), accounttype(B, S).;false;true', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '1;false,false,false,false,false,false;tweets(A, P), tweets(Q, P), tweets(Q, R).;false;true', '1;false,false,false,false,false;tweets(B, N), tweets(A, N).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), accounttype(B, M).;false;true', '1;false,false,false,false,false,false,false;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false,false;tweets(A, G), tweets(B, H), tweets(A, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;tweets(B, N).;false;true', '2;false;tweets(B, E), tweets(A, F).;false;true', '2;false,false,true,false,false,false,true;accounttype(A, R), tweets(S, G), tweets(S, T).;false;false', '2;false,false,true,false;tweets(B, L), accounttype(B, M), accounttype(A, M).;false;true', '2;false,false,true,false,false,false;tweets(B, P), tweets(Q, P), accounttype(Q, R).;true;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, P), tweets(B, Q), tweets(A, Q).;false;false', '3;false,true;tweets(B, F), tweets(E, G), tweets(A, G).;false;true', '3;false,true,false;tweets(B, H), tweets(A, F).;false;true', '3;false,true,false,false;tweets(B, F), accounttype(B, I).;false;true', '3;false,true,false,false,false;tweets(B, J), tweets(K, F), tweets(K, L).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;true;true', '3;false,true,false,false,false,false;tweets(A, M), accounttype(B, N), tweets(E, M).;false;false', '4;;follows(A, B) :- accounttype(B, C), tweets(B, D), tweets(A, D).;false;true', '4;false,false;tweets(A, H), tweets(I, H), tweets(I, J).;false;true', '4;false,false,false;tweets(B, K), tweets(B, L), tweets(B, M).;false;true', '4;false,false,false,false,false,false,true;tweets(W, Y), accounttype(B, Z), accounttype(W, Z).;false;false', '4;false,false,false,false,false,false;tweets(B, U), tweets(W, U), tweets(W, X).;true;false', '4;false,false,false,false,false;tweets(B, R), accounttype(A, S), accounttype(B, T).;false;true', '4;false;tweets(A, E), tweets(F, E), tweets(F, G).;false;true', '4;false,false,false,false;tweets(B, N), accounttype(B, P), accounttype(A, Q).;false;true', '5;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;true', '5;false,false;accounttype(A, F), tweets(B, G), tweets(A, G).;true;true', '5;false,false,false;accounttype(A, P), tweets(B, Q).;false;true', '5;false,false,true;tweets(A, H), tweets(A, I), tweets(B, J).;false;true', '5;false,false,true,false,true;tweets(A, M), tweets(L, G), tweets(L, N).;false;false', '5;false;accounttype(A, D), accounttype(B, E).;false;true', '5;false,false,false,false;tweets(A, R), tweets(A, S), accounttype(A, T).;false;false', '5;false,false,true,false;tweets(B, K), accounttype(L, F), tweets(L, K).;true;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(A, E).;false;true', '6;false,false;tweets(B, I), tweets(A, J), accounttype(B, K).;false;true', '6;false,false,false;tweets(B, L), tweets(A, L), accounttype(B, M).;false;true', '6;false,false,false,false,false,false;tweets(A, R), tweets(S, R), tweets(S, T).;false;true', '6;false,false,false,false,false;accounttype(B, Q), accounttype(A, Q).;false;true', '6;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '6;false,false,false,false;tweets(A, N), tweets(B, P).;false;true', '6;false,false,false,false,false,false,false;accounttype(A, U), tweets(A, W), tweets(B, X).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, E), tweets(B, F).;false;true', '7;false,false,false;tweets(B, G), tweets(A, H).;false;true', '7;false,false,false,false,true;tweets(A, K), tweets(B, L).;false;true', '7;false;tweets(B, D).;false;true', '7;false,false,false,false;tweets(B, I), tweets(A, J).;true;false', '7;false,false,false,false,true,false,false;tweets(B, Q), tweets(A, R), accounttype(A, S).;false;false', '7;false,false,false,false,true,false;tweets(A, M), tweets(N, M), tweets(N, P).;false;true', '8;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, E).;false;true', '8;false,false;accounttype(A, G), accounttype(B, H), tweets(B, I).;false;true', '8;false,false,false;accounttype(A, J), tweets(A, K), tweets(B, L).;false;true', '8;false,false,false,false,false,false;accounttype(A, T), accounttype(U, T), tweets(U, W).;false;true', '8;false,false,false,false,false;tweets(B, Q), tweets(R, Q), tweets(R, S).;false;true', '8;false;accounttype(B, F), accounttype(A, F).;false;true', '8;false,false,false,false;accounttype(A, M), accounttype(B, N), tweets(A, P).;false;true', '8;false,false,false,false,false,false,false;tweets(B, X), tweets(Y, X), tweets(Y, Z).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,true,true;tweets(B, G), accounttype(I, H), tweets(I, J).;false;true', '9;false,true;tweets(A, G), accounttype(A, H).;true;false', '9;false,true,true,false;tweets(B, K), accounttype(B, L), tweets(F, M).;false;true', '9;false,true,true,false,false;tweets(A, N), accounttype(B, P).;false;true', '9;false;tweets(A, E), tweets(F, E), tweets(F, G).;true;false', '9;false,true,true,false,false,false,false;tweets(F, T).;false;false', '9;false,true,true,false,false,false;tweets(B, Q), tweets(R, E), tweets(R, S).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(A, H), tweets(B, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.25084299902645113;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.08499602486893311;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), accounttype(B, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, N), tweets(A, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, P), tweets(Q, P), tweets(Q, R) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else if ( tweets(B, S), tweets(T, S), tweets(T, U) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return 0.029920148364485595;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else if ( tweets(A, G), tweets(B, H), tweets(A, H) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.19143272830459085;  // std dev = 10,120, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then if ( tweets(B, F), tweets(E, G), tweets(A, G) )
%   | | then return 0.13376597545542745;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | | else if ( tweets(B, H), tweets(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, F), accounttype(B, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, J), tweets(K, F), tweets(K, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, M), accounttype(B, N), tweets(E, M) )
%   | | | | | | then return 0.04141350284671148;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( accounttype(B, P), tweets(B, Q), tweets(A, Q) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2541555293522191;  // std dev = 7,718, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then return 0.07994897083148544;  // std dev = 10,629, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else if ( tweets(A, H), tweets(I, H), tweets(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, K), tweets(B, L), tweets(B, M) )
%   | | | then return 0.25289087152518663;  // std dev = 7,078, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | | | else if ( tweets(B, N), accounttype(B, P), accounttype(A, Q) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, R), accounttype(A, S), accounttype(B, T) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(B, U), tweets(W, U), tweets(W, X) )
%   | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | else return -0.04958163661545514;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 5.165042997405072E-4;  // std dev = 13,516, 805,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=298 */
%   else if ( accounttype(A, D), accounttype(B, E) )
%   | then return 0.2508533173845811;  // std dev = 12,603, 755,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=482 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(A, E) )
%   then return 0.10020544932724894;  // std dev = 16,091, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.1692838611319773;  // std dev = 6,975, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else if ( tweets(B, I), tweets(A, J), accounttype(B, K) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, L), tweets(A, L), accounttype(B, M) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, N), tweets(B, P) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( accounttype(B, Q), accounttype(A, Q) )
%   | | | | | then return -0.009077401230608071;  // std dev = 5,258, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | | | | else if ( tweets(A, R), tweets(S, R), tweets(S, T) )
%   | | | | | | then return 0.006829449143982537;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | | | | else if ( accounttype(A, U), tweets(A, W), tweets(B, X) )
%   | | | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | | | else return -0.07253773419243667;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.08902748682909117;  // std dev = 13,597, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, D) )
%   | then return 0.07663465636236132;  // std dev = 11,089, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, E), tweets(B, F) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, G), tweets(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, I), tweets(A, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.005464049703363141;  // std dev = 6,635, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, E) )
%   then return 0.055407051123310604;  // std dev = 16,085, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 0.0015887561146796759;  // std dev = 7,376, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | else if ( accounttype(A, G), accounttype(B, H), tweets(B, I) )
%   | | then return 0.2220662713372435;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | else if ( accounttype(A, J), tweets(A, K), tweets(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( accounttype(A, M), accounttype(B, N), tweets(A, P) )
%   | | | | then return 0.006548838991845149;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | | else if ( tweets(B, Q), tweets(R, Q), tweets(R, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( accounttype(A, T), accounttype(U, T), tweets(U, W) )
%   | | | | | | then return -0.05658644688973946;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.04200410597922771;  // std dev = 16,085, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then if ( tweets(A, G), accounttype(A, H) )
%   | | then if ( tweets(B, G), accounttype(I, H), tweets(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, K), accounttype(B, L), tweets(F, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, N), accounttype(B, P) )
%   | | | | | then return 0.003174023319598561;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.06336278410428506;  // std dev = 7,381, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
Results
   AUC ROC   = 0.650251
   AUC PR    = 0.63106
   CLL	      = -0.668991
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 178.302 seconds
Total inference time: 1.509 seconds
AUC ROC: 0.650251


Results in test set
   AUC ROC   = 0.650251
   AUC PR    = 0.63106
   CLL	      = -0.668991
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total inference time: 1.509 seconds
AUC ROC: 0.650251
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false': 'tweets(A, G), tweets(A, H), tweets(B, H)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.22, 266, 172], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), tweets(B, K), tweets(A, K)', 'false,false,false,false,false,false': 'tweets(A, P), tweets(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'tweets(B, N), tweets(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [11.336, 287, 233], 'false,false,true': [6.142, 145, 51], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [2.522, 31, 8], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), tweets(B, D)', 'false': 'tweets(B, E), tweets(A, F)', 'false,false': 'tweets(A, G), tweets(B, H), tweets(A, H)'}, {'false,true': [8.636, 197, 120], 'false,false,true': [0.0, 0, 0], 'false,false,false': [10.12, 266, 172], 'true': [13.863, 317, 488]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, P), tweets(B, Q), tweets(A, Q)', 'false,true': 'tweets(B, F), tweets(E, G), tweets(A, G)', 'false,true,false': 'tweets(B, H), tweets(A, F)', 'false,true,false,false': 'tweets(B, F), accounttype(B, I)', 'false,true,false,false,false': 'tweets(B, J), tweets(K, F), tweets(K, L)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,true,false,false,false,false': 'tweets(A, M), accounttype(B, N), tweets(E, M)'}, {'false,true,true': [8.636, 197, 120], 'false,true,false,false,true': [0.0, 0, 0], 'false,false,false': [7.718, 121, 121], 'false,false,true': [0.0, 0, 0], 'false,true,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,true,false,false,false,false,true': [6.142, 145, 51], 'false,true,false,false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'accounttype(B, C), tweets(B, D), tweets(A, D)', 'false,false': 'tweets(A, H), tweets(I, H), tweets(I, J)', 'false,false,false': 'tweets(B, K), tweets(B, L), tweets(B, M)', 'false,false,false,false,false,false': 'tweets(B, U), tweets(W, U), tweets(W, X)', 'false,false,false,false,false': 'tweets(B, R), accounttype(A, S), accounttype(B, T)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,false,false,false': 'tweets(B, N), accounttype(B, P), accounttype(A, Q)'}, {'false,false,false,false,false,false,false': [2.522, 31, 8], 'false,true': [10.629, 342, 171], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [0.0, 0, 0], 'true': [13.863, 317, 488], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [7.078, 90, 113], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'true': 'accounttype(A, D), accounttype(B, E)'}, {'true,false': [0.0, 0, 0], 'true,true': [12.603, 273, 482]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(A, E)', 'false,false': 'tweets(B, I), tweets(A, J), accounttype(B, K)', 'false,false,false': 'tweets(B, L), tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false': 'tweets(A, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'accounttype(B, Q), accounttype(A, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'tweets(A, N), tweets(B, P)', 'false,false,false,false,false,false,false': 'accounttype(A, U), tweets(A, W), tweets(B, X)'}, {'false,true': [6.975, 90, 113], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,true': [3.846, 50, 21], 'true': [16.091, 514, 608], 'false,false,false,false,false,true': [5.258, 119, 36], 'false,false,false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false,false,false': [1.247, 7, 2], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(B, D)', 'false,false': 'tweets(A, E), tweets(B, F)', 'false,false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false,false': 'tweets(B, I), tweets(A, J)'}, {'false,true': [11.089, 287, 233], 'false,false,true': [0.0, 0, 0], 'true': [13.597, 317, 488], 'false,false,false,false,false': [6.635, 176, 59], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, E)', 'false,false': 'accounttype(A, G), accounttype(B, H), tweets(B, I)', 'false,false,false': 'accounttype(A, J), tweets(A, K), tweets(B, L)', 'false,false,false,false,false,false': 'accounttype(A, T), accounttype(U, T), tweets(U, W)', 'false,false,false,false,false': 'tweets(B, Q), tweets(R, Q), tweets(R, S)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'accounttype(A, M), accounttype(B, N), tweets(A, P)'}, {'false,false,false,false,false,false,false': [0.0, 0, 0], 'false,true': [7.376, 181, 83], 'false,false,true': [4.434, 28, 66], 'false,false,false,false,false,false,true': [1.247, 7, 2], 'true': [16.085, 514, 608], 'false,false,false,false,false,true': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.846, 50, 21]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,true,true': 'tweets(B, G), accounttype(I, H), tweets(I, J)', 'false,true': 'tweets(A, G), accounttype(A, H)', 'false,true,true,false': 'tweets(B, K), accounttype(B, L), tweets(F, M)', 'false,true,true,false,false': 'tweets(A, N), accounttype(B, P)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)'}, {'false,false': [7.381, 121, 121], 'false,true,true,false,false,false': [0.0, 0, 0], 'false,true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [16.085, 514, 608], 'false,true,true,false,false,true': [6.131, 145, 51], 'false,true,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '0;false;tweets(B, E), tweets(A, F).;false;false', '1;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), tweets(B, K), tweets(A, K).;false;true', '1;false,false,false,false,false;tweets(B, N), tweets(A, N).;false;false', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), accounttype(B, M).;false;true', '2;;follows(A, B) :- tweets(B, C), tweets(A, D), tweets(B, D).;false;true', '2;false;tweets(B, E), tweets(A, F).;false;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, P), tweets(B, Q), tweets(A, Q).;false;false', '3;false,true;tweets(B, F), tweets(E, G), tweets(A, G).;false;true', '3;false,true,false;tweets(B, H), tweets(A, F).;false;false', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;true;true', '4;;follows(A, B) :- accounttype(B, C), tweets(B, D), tweets(A, D).;false;true', '4;false;tweets(A, E), tweets(F, E), tweets(F, G).;false;false', '5;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(A, E).;false;true', '6;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false;tweets(B, D).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, E).;false;true', '8;false,false;accounttype(A, G), accounttype(B, H), tweets(B, I).;false;true', '8;false,false,false;accounttype(A, J), tweets(A, K), tweets(B, L).;false;true', '8;false,false,false,false,false;tweets(B, Q), tweets(R, Q), tweets(R, S).;false;false', '8;false;accounttype(B, F), accounttype(A, F).;false;true', '8;false,false,false,false;accounttype(A, M), accounttype(B, N), tweets(A, P).;false;true', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,true,true;tweets(B, G), accounttype(I, H), tweets(I, J).;false;true', '9;false,true;tweets(A, G), accounttype(A, H).;true;false', '9;false,true,true,false;tweets(B, K), accounttype(B, L), tweets(F, M).;false;false', '9;false;tweets(A, E), tweets(F, E), tweets(F, G).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true', 0.6214511041009464)]
Tree #2: [('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,true', 0.7397959183673469), ('false,false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #3: [('false,false,true', 0), ('true', 0.6062111801242236), ('false,false,false', 0.6073059360730594), ('false,true', 0.6214511041009464)]
Tree #4: [('false,true,false,false,true', 0), ('false,false,true', 0), ('false,true,false,false,false,true', 0), ('false,true,false,false,false,false,false', 0), ('false,true,false,true', 0), ('false,false,false', 0.5), ('true', 0.6062111801242236), ('false,true,true', 0.6214511041009464), ('false,true,false,false,false,false,true', 0.7397959183673469)]
Tree #5: [('false,false,true', 0), ('false,false,false,false,false,false,true', 0), ('false,false,false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,false,false,true', 0.5566502463054187), ('true', 0.6062111801242236), ('false,true', 0.6666666666666666), ('false,false,false,false,false,false,false', 0.7948717948717948)]
Tree #6: [('true,false', 0), ('true,true', 0.6384105960264901)]
Tree #7: [('false,false,true', 0), ('false,false,false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.5566502463054187), ('false,false,false,false,false,false,true', 0.704225352112676), ('false,false,false,false,false,true', 0.7677419354838709), ('false,false,false,false,false,false,false,false', 0.7777777777777778)]
Tree #8: [('false,false,true', 0), ('false,false,false,true', 0), ('false,false,false,false,true', 0), ('false,true', 0.551923076923077), ('true', 0.6062111801242236), ('false,false,false,false,false', 0.7489361702127659)]
Tree #9: [('false,false,false,false,false,false,false', 0), ('false,false,false,false,false,true', 0), ('false,false,false,true', 0), ('true', 0.5418894830659536), ('false,true', 0.6856060606060606), ('false,false,true', 0.7021276595744681), ('false,false,false,false,true', 0.704225352112676), ('false,false,false,false,false,false,true', 0.7777777777777778)]
Tree #10: [('false,true,true,false,false,false', 0), ('false,true,true,false,true', 0), ('false,true,false', 0), ('false,true,true,true', 0), ('false,false', 0.5), ('true', 0.5418894830659536), ('false,true,true,false,false,true', 0.7397959183673469)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.4643601152237312;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.23669783099856204;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.2508429990264519;  // std dev = 10,220, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.39798318777486463;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.27410927449378647;  // std dev = 11,336, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.084996024868933;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else if ( accounttype(B, J), tweets(B, K), tweets(A, K) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, L), accounttype(B, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, N), tweets(A, N) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return 0.029920148364485543;  // std dev = 2,522, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), tweets(B, D) )
%   then return 0.3248372583275497;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, E), tweets(A, F) )
%   | then return 0.16255944276864884;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | else return 0.19143272830459093;  // std dev = 10,120, 438,000 (wgt'ed) examples reached here.  /* #neg=266 #pos=172 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.2547948657035773;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then if ( tweets(B, F), tweets(E, G), tweets(A, G) )
%   | | then return 0.13376597545542745;  // std dev = 8,636, 317,000 (wgt'ed) examples reached here.  /* #neg=197 #pos=120 */
%   | | else if ( tweets(B, H), tweets(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.04141350284671144;  // std dev = 6,142, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else if ( accounttype(B, I), tweets(B, J), tweets(A, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.2541555293522189;  // std dev = 7,718, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(B, C), tweets(B, D), tweets(A, D) )
%   then return 0.19477333503348226;  // std dev = 13,863, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then return 0.07994897083148544;  // std dev = 10,629, 513,000 (wgt'ed) examples reached here.  /* #neg=342 #pos=171 */
%   | else return 0.20414530203144698;  // std dev = 7,710, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 1.6477935827931918E-4;  // std dev = 13,531, 805,000 (wgt'ed) examples reached here.  /* #neg=507 #pos=298 */
%   else return 0.2516460016410805;  // std dev = 12,621, 755,000 (wgt'ed) examples reached here.  /* #neg=273 #pos=482 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(A, E) )
%   then return 0.1001457482898416;  // std dev = 16,090, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.1806985790263427;  // std dev = 6,976, 203,000 (wgt'ed) examples reached here.  /* #neg=90 #pos=113 */
%   | else return -0.015210964233780334;  // std dev = 6,657, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.08898080573111782;  // std dev = 13,596, 805,000 (wgt'ed) examples reached here.  /* #neg=317 #pos=488 */
%   else if ( tweets(B, D) )
%   | then return 0.08013646173050049;  // std dev = 11,098, 520,000 (wgt'ed) examples reached here.  /* #neg=287 #pos=233 */
%   | else return -0.012263227502293743;  // std dev = 6,657, 235,000 (wgt'ed) examples reached here.  /* #neg=176 #pos=59 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, E) )
%   then return 0.05514589604061733;  // std dev = 16,085, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 8.208810349209705E-4;  // std dev = 7,391, 264,000 (wgt'ed) examples reached here.  /* #neg=181 #pos=83 */
%   | else if ( accounttype(A, G), accounttype(B, H), tweets(B, I) )
%   | | then return 0.23030605135174176;  // std dev = 4,434, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | | else if ( accounttype(A, J), tweets(A, K), tweets(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( accounttype(A, M), accounttype(B, N), tweets(A, P) )
%   | | | | then return 0.01228030295344244;  // std dev = 3,846, 71,000 (wgt'ed) examples reached here.  /* #neg=50 #pos=21 */
%   | | | | else if ( tweets(B, Q), tweets(R, Q), tweets(R, S) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else return -0.12182012454076872;  // std dev = 1,247, 9,000 (wgt'ed) examples reached here.  /* #neg=7 #pos=2 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.04180303984770635;  // std dev = 16,085, 1.122,000 (wgt'ed) examples reached here.  /* #neg=514 #pos=608 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then if ( tweets(A, G), accounttype(A, H) )
%   | | then if ( tweets(B, G), accounttype(I, H), tweets(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, K), accounttype(B, L), tweets(F, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.006451781707317461;  // std dev = 6,131, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.061942175543281706;  // std dev = 7,416, 242,000 (wgt'ed) examples reached here.  /* #neg=121 #pos=121 */
Results
   AUC ROC   = 0.649922
   AUC PR    = 0.630958
   CLL	      = -0.66853
   Precision = 0.587571 at threshold = 0.5
   Recall    = 0.666667
   F1        = 0.624625


Total learning time: 191.0 seconds
Total inference time: 1.166 seconds
AUC ROC: 0.649922


Best model AUC ROC so far: 0.650251


******************************************
Best model found
******************************************
Total revision time: 371.977
Best validation AUC ROC: 0.650251


Results
   AUC ROC   = 0.749062
   AUC PR    = 0.723297
   CLL	      = -0.625239
   Precision = 0.638487 at threshold = 0.5
   Recall    = 0.810734
   F1        = 0.714375


Total inference time: 2.382 seconds
AUC ROC: 0.749062
Dataset: yeast->twitter, Fold: 1, Type: transfer, Time: 04:14:16
{'Parameter Learning results': {'F1': 0.714375, 'Learning time': 178.302, 'Recall': 0.810734, 'AUC PR': 0.723297, 'AUC ROC': 0.749062, 'CLL': -0.625239, 'Inference time': 2.715, 'Precision': [0.638487, 0.5]}, 'F1': 0.714375, 'Learning time': 371.977, 'Recall': 0.810734, 'AUC PR': 0.723297, 'AUC ROC': 0.749062, 'Mapping results': {'Finding best mapping': 0.8202035427093506, 'Knowledge compiling time': 0.10733246803283691, 'Total time': 5.6785454750061035, 'Generating mappings time': 0.11842727661132812, 'Possible mappings': 1458, 'Generating paths time': 4.6325743198394775}, 'CLL': -0.625239, 'Inference time': 2.382, 'Precision': [0.638487, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2953217099686181;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.6170141833264585;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.12481560176617795;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.7470378239884012;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.28934159564997186;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.3138451376311591;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.5602765946739812;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.09040699961564004;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.1456489350995117;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.25544396504018674;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.5243494850117562;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.10893247925776796;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.6302322013528495;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.25035142239059655;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.27119663943451633;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.4776435248675061;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.07904155157974005;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.12697824250829925;  // std dev = 0,453, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.21434006589346677;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.4178192410070285;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.09391529972732618;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.4930252128087158;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.21027160903852193;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.22687127601954168;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.3839327874961612;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.09115193712242843;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.03799870373894804;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.1750364240763374;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.3187802468060836;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.08007894754641993;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.3713223124091624;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17197435224648763;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.18440609551807563;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2955537862431351;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( accounttype(A, K), accounttype(B, K) )
%   | | then return 0.057105970757237993;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | | else return 0.09628175221440763;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.13980372601974603;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.23938432568879928;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.06761908965919006;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.2802444957903803;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.13761291641748175;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.14645750237908162;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.2227642562770938;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.0669944884018586;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.02291857739175187;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.10979170699664419;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.1801875707461082;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.05661907716341858;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.215871968382499;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.10828649707955408;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.11433257931207602;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.16714218601195022;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.03972978884506359;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.0705646110501786;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.0851734320706171;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.13698536343358944;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.04707019797674135;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.17024717710075593;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.08417209890999892;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.08818083037033851;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.1258983666871707;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( tweets(A, J) )
%   | then return 0.04785769983713238;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | else return 0.012215218966472511;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C) )
%   then if ( tweets(A, C) )
%   | then if ( accounttype(A, D), accounttype(B, D) )
%   | | then return 0.06550974051695709;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | | else return 0.10535150322458203;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   | else if ( tweets(A, E), accounttype(A, F), accounttype(B, F) )
%   | | then if ( accounttype(G, F), tweets(G, C), tweets(G, E) )
%   | | | then return 0.03889723332668014;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.13713633723655955;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( accounttype(A, H), accounttype(B, H) )
%   | | | then return 0.06486167644453979;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | else if ( tweets(A, I) )
%   | | | | then return 0.06745468144626868;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | | else return 0.09548737537629778;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   else if ( accounttype(A, J), accounttype(B, J) )
%   | then return 0.02681539844407904;  // std dev = 0,422, 155,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=36 */
%   | else return 0.05046507171832119;  // std dev = 0,452, 80,000 (wgt'ed) examples reached here.  /* #neg=57 #pos=23 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05008712778509982;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.08189740035811596;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( tweets(A, F), accounttype(A, G), accounttype(B, G) )
%   | | then if ( accounttype(H, G), tweets(H, E), tweets(H, F) )
%   | | | then return 0.03198323809501064;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | else return 0.11243535096764834;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.05131798679728922;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else if ( accounttype(A, J), accounttype(B, J) )
%   | | | | then return 0.04967885473545552;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | | | else return 0.07294806483386942;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, K) )
%   | | then return 0.033523512445940075;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.0051254355304122265;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.03813886296629491;  // std dev = 0,496, 382,000 (wgt'ed) examples reached here.  /* #neg=215 #pos=167 */
%   | else return 0.06425345980304739;  // std dev = 0,428, 423,000 (wgt'ed) examples reached here.  /* #neg=102 #pos=321 */
%   else if ( tweets(B, E) )
%   | then if ( accounttype(A, F), accounttype(B, F) )
%   | | then if ( tweets(A, G) )
%   | | | then if ( accounttype(H, F), tweets(H, E), tweets(H, G) )
%   | | | | then return 0.026190156472953672;  // std dev = 0,442, 150,000 (wgt'ed) examples reached here.  /* #neg=110 #pos=40 */
%   | | | | else return 0.09352720014861136;  // std dev = 0,314, 9,000 (wgt'ed) examples reached here.  /* #neg=1 #pos=8 */
%   | | | else return 0.0378896114214694;  // std dev = 0,495, 109,000 (wgt'ed) examples reached here.  /* #neg=62 #pos=47 */
%   | | else if ( tweets(A, I) )
%   | | | then return 0.03889950372719807;  // std dev = 0,498, 158,000 (wgt'ed) examples reached here.  /* #neg=86 #pos=72 */
%   | | | else return 0.05609464931900332;  // std dev = 0,457, 94,000 (wgt'ed) examples reached here.  /* #neg=28 #pos=66 */
%   | else if ( tweets(A, J) )
%   | | then return 0.02760290361140207;  // std dev = 0,438, 196,000 (wgt'ed) examples reached here.  /* #neg=145 #pos=51 */
%   | | else return 0.004305059141106619;  // std dev = 0,404, 39,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=8 */
Results
   AUC ROC   = 0.748983
   AUC PR    = 0.72186
   CLL	      = -0.59057
   Precision = 0.789474 at threshold = 0.5
   Recall    = 0.529661
   F1        = 0.633981


Total learning time: 660.373 seconds
Total inference time: 1.164 seconds
AUC ROC: 0.748983


Dataset: yeast->twitter, Fold: 1, Type: scratch, Time: 04:25:18
{'F1': 0.633981, 'Learning time': 660.373, 'Recall': 0.529661, 'AUC PR': 0.72186, 'AUC ROC': 0.748983, 'CLL': -0.59057, 'Inference time': 1.164, 'Precision': [0.789474, 0.5]}


Best mapping found: ['proteinclass(A,B) -> tweets(A,B)', 'location(A,B) -> accounttype(A,B)', 'complex(A,B) -> tweets(A,B)', 'function(A,B) -> accounttype(A,B)', 'interaction(A,B) -> follows(A,B)', 'phenotype(A,B) -> tweets(A,B)', 'enzyme(A,B) -> tweets(A,B)'] 

Tranferred structured tree: [['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false,false': 'tweets(A, M), tweets(A, N), accounttype(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, J), tweets(K, J), accounttype(K, L)', 'false,false,true,false,false,false,false': 'tweets(B, T), tweets(A, U)', 'false,false,true,false,false,false': 'tweets(B, Q), tweets(B, R), accounttype(B, S)'}, {'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.464, 44, 20], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.498, 101, 85], 'false,false,false': [0.496, 2377, 1847], 'false,false,true,true': [0.192, 2, 50], 'false,false,true,false,false,false,false,false': [0.499, 349, 405], 'false,false,true,false,false,false,true': [0.366, 7, 37], 'false,false,true,false,false,false,false,true': [0.476, 30, 16]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)', 'false,false,false,false,false,false': 'accounttype(A, P), accounttype(Q, P), tweets(Q, R)', 'false,false,false,false,false': 'accounttype(B, N), accounttype(A, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,false,false': 'tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false,false': 'tweets(B, S), tweets(T, S), tweets(T, U)'}, {'false,true': [0.468, 765, 367], 'false,false,true': [0.49, 1617, 1187], 'false,false,false,false,false,false,true': [0.49, 692, 466], 'true': [0.466, 757, 1621], 'false,false,false,false,false,true': [0.485, 33, 54], 'false,false,false,false,false,false,false,true': [0.45, 15, 6], 'false,false,false,false,false,false,false,false': [0.498, 105, 124], 'false,false,false,true': [0.479, 308, 554], 'false,false,false,false,true': [0.475, 182, 95]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)', 'false,false,true,false,false': 'tweets(B, N)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false,false,false,true': 'accounttype(A, R), tweets(S, G), tweets(S, T)', 'false,false,true,false': 'tweets(B, L), accounttype(B, M), accounttype(A, M)', 'false,false,true,false,false,false': 'tweets(B, P), tweets(Q, P), accounttype(Q, R)'}, {'false,false,true,false,false,false,true,false': [0.48, 19, 10], 'false,true': [0.469, 807, 393], 'false,false,true,false,false,true': [0.459, 51, 25], 'true': [0.466, 757, 1621], 'false,false,true,false,true': [0.447, 67, 153], 'false,false,false': [0.492, 2377, 1847], 'false,false,true,true': [0.479, 80, 52], 'false,false,true,false,false,false,false': [0.498, 273, 327], 'false,false,true,false,false,false,true,true': [0.5, 43, 46]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, P), accounttype(B, Q), accounttype(A, Q)', 'false,true': 'tweets(B, F), tweets(E, G), tweets(A, G)', 'false,true,false': 'tweets(B, H), tweets(A, F)', 'false,true,false,false': 'tweets(B, F), accounttype(B, I)', 'false,true,false,false,false': 'tweets(B, J), tweets(K, F), tweets(K, L)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,true,false,false,false,false': 'tweets(A, M), accounttype(B, N), tweets(E, M)'}, {'false,true,true': [0.161, 3, 118], 'false,true,false,false,true': [0.479, 149, 173], 'false,false,false': [0.486, 1452, 944], 'false,false,true': [0.475, 551, 1059], 'false,true,false,false,false,true': [0.478, 352, 214], 'true': [0.412, 193, 639], 'false,true,false,false,false,false,true': [0.467, 203, 110], 'false,true,false,false,false,false,false': [0.492, 1300, 1069], 'false,true,false,true': [0.468, 271, 148]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(B, D), accounttype(A, D)', 'false,false': 'tweets(A, H), tweets(I, H), tweets(I, J)', 'false,false,false': 'tweets(B, K), tweets(B, L), tweets(B, M)', 'false,false,false,false,false,false,true': 'tweets(W, Y), accounttype(B, Z), accounttype(W, Z)', 'false,false,false,false,false,false': 'tweets(B, U), tweets(W, U), tweets(W, X)', 'false,false,false,false,false': 'tweets(B, R), accounttype(A, S), accounttype(B, T)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,false,false,false': 'tweets(B, N), accounttype(B, P), accounttype(A, Q)'}, {'false,false,false,false,false,false,false': [0.494, 869, 667], 'false,false,true': [0.479, 909, 520], 'true': [0.47, 1542, 2720], 'false,false,false,false,false,true': [0.476, 169, 92], 'false,false,false,false,false,false,true,false': [0.43, 3, 9], 'false,false,false,false,true': [0.47, 174, 88], 'false,true': [0.464, 745, 360], 'false,false,false,false,false,false,true,true': [0.492, 13, 9], 'false,false,false,true': [0.361, 50, 9]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false,false': 'accounttype(A, F), accounttype(B, G), accounttype(A, G)', 'false,false,false': 'accounttype(A, P), accounttype(B, Q)', 'false,false,true': 'tweets(A, H), tweets(A, I), tweets(B, J)', 'false,false,true,false,true': 'tweets(A, M), accounttype(L, G), tweets(L, N)', 'false': 'accounttype(A, D), accounttype(B, E)', 'false,false,false,false': 'tweets(A, R), tweets(A, S), accounttype(A, T)', 'false,false,true,false': 'tweets(B, K), accounttype(L, F), tweets(L, K)'}, {'false,false,true,false,true,false': [0.478, 14, 8], 'false,false,true,false,true,true': [0.43, 5, 15], 'false,true': [0.479, 1706, 1176], 'true': [0.468, 2075, 2760], 'false,false,true,false,false': [0.482, 53, 83], 'false,false,false,false,false': [0.488, 220, 207], 'false,false,true,true': [0.316, 8, 1], 'false,false,false,true': [0.479, 393, 220], 'false,false,false,false,true': [0.007, 0, 4]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(A, E)', 'false,false': 'tweets(B, I), tweets(A, J), accounttype(B, K)', 'false,false,false': 'tweets(B, L), tweets(A, L), accounttype(B, M)', 'false,false,false,false,false,false': 'tweets(A, R), tweets(S, R), tweets(S, T)', 'false,false,false,false,false': 'accounttype(B, Q), accounttype(A, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'tweets(A, N), accounttype(B, P)', 'false,false,false,false,false,false,false': 'accounttype(A, U), tweets(A, W), tweets(B, X)'}, {'false,true': [0.458, 135, 68], 'false,false,true': [0.467, 284, 191], 'false,false,false,false,false,false,true': [0.465, 187, 95], 'true': [0.438, 106, 190], 'false,false,false,false,false,true': [0.471, 834, 1095], 'false,false,false,false,false,false,false,true': [0.417, 15, 6], 'false,false,false,false,false,false,false,false': [0.492, 774, 647], 'false,false,false,true': [0.398, 152, 544], 'false,false,false,false,true': [0.481, 1987, 1638]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'tweets(A, E), accounttype(B, F)', 'false,false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false,false,true': 'tweets(A, K), tweets(B, L)', 'false': 'tweets(B, D)', 'false,false,false,false': 'tweets(B, I), accounttype(A, J)', 'false,false,false,false,true,false,false': 'tweets(B, Q), tweets(A, R), accounttype(A, S)', 'false,false,false,false,true,false': 'tweets(A, M), tweets(N, M), tweets(N, P)'}, {'false,false,false,false,true,false,false,false': [0.484, 209, 150], 'false,false,false,false,true,false,true': [0.459, 136, 70], 'false,false,true': [0.472, 774, 675], 'false,false,false,false,true,false,false,true': [0.469, 16, 32], 'true': [0.231, 4, 69], 'false,false,false,false,true,true': [0.456, 40, 16], 'false,false,false,false,false': [0.476, 2356, 2483], 'false,true': [0.47, 899, 870], 'false,false,false,true': [0.41, 40, 109]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, E)', 'false,false': 'accounttype(A, G), accounttype(B, H), tweets(B, I)', 'false,false,false': 'accounttype(A, J), tweets(A, K), tweets(B, L)', 'false,false,false,false,false,false': 'accounttype(A, T), accounttype(U, T), tweets(U, W)', 'false,false,false,false,false': 'tweets(B, Q), tweets(R, Q), tweets(R, S)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false,false,false': 'accounttype(A, M), accounttype(B, N), tweets(A, P)', 'false,false,false,false,false,false,false': 'accounttype(B, X), accounttype(Y, X), tweets(Y, Z)'}, {'false,true': [0.465, 1929, 2553], 'false,false,true': [0.467, 446, 294], 'false,false,false,false,false,false,true': [0.486, 1089, 721], 'true': [0.459, 236, 276], 'false,false,false,false,false,true': [0.475, 319, 319], 'false,false,false,false,false,false,false,true': [0.493, 89, 96], 'false,false,false,false,false,false,false,false': [0.488, 28, 20], 'false,false,false,true': [0.446, 173, 85], 'false,false,false,false,true': [0.482, 165, 110]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,true,true': 'tweets(B, G), accounttype(I, H), tweets(I, J)', 'false,true': 'tweets(A, G), accounttype(A, H)', 'false,true,true,false': 'tweets(B, K), accounttype(B, L), tweets(F, M)', 'false,true,true,false,false': 'tweets(A, N), accounttype(B, P)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,true,true,false,false,false,false': 'tweets(F, T)', 'false,true,true,false,false,false': 'tweets(B, Q), tweets(R, E), tweets(R, S)'}, {'false,false': [0.478, 2525, 2517], 'false,true,true,false,false,false,true': [0.409, 67, 25], 'false,true,true,false,false,false,false,true': [0.495, 219, 201], 'true': [0.436, 555, 871], 'false,true,false': [0.465, 297, 181], 'false,true,true,false,false,false,false,false': [0.487, 480, 368], 'false,true,true,false,false,true': [0.464, 149, 73], 'false,true,true,true': [0.446, 64, 154], 'false,true,true,false,true': [0.474, 118, 84]}]] 

Transferred target predicate: follows 

******************************************
Performing Parameter Learning
******************************************
Refine
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;true;false', '0;false,false,true;tweets(B, I), tweets(A, I).;false;true', '0;false,false,true,false,false;tweets(A, M), tweets(A, N), accounttype(B, P).;false;true', '0;false;tweets(B, E), accounttype(A, F).;false;true', '0;false,false,true,false;tweets(B, J), tweets(K, J), accounttype(K, L).;false;true', '0;false,false,true,false,false,false,false;tweets(B, T), tweets(A, U).;false;false', '0;false,false,true,false,false,false;tweets(B, Q), tweets(B, R), accounttype(B, S).;false;true', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;true', '1;false,false,false;accounttype(B, J), accounttype(B, K), accounttype(A, K).;false;true', '1;false,false,false,false,false,false;accounttype(A, P), accounttype(Q, P), tweets(Q, R).;false;true', '1;false,false,false,false,false;accounttype(B, N), accounttype(A, N).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false,false,false;tweets(A, L), accounttype(B, M).;false;true', '1;false,false,false,false,false,false,false;tweets(B, S), tweets(T, S), tweets(T, U).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false,false;tweets(A, G), accounttype(B, H), accounttype(A, H).;true;false', '2;false,false,true;tweets(A, I), tweets(J, I), tweets(J, K).;false;true', '2;false,false,true,false,false;tweets(B, N).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false,true,false,false,false,true;accounttype(A, R), tweets(S, G), tweets(S, T).;false;false', '2;false,false,true,false;tweets(B, L), accounttype(B, M), accounttype(A, M).;false;true', '2;false,false,true,false,false,false;tweets(B, P), tweets(Q, P), accounttype(Q, R).;true;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, P), accounttype(B, Q), accounttype(A, Q).;false;false', '3;false,true;tweets(B, F), tweets(E, G), tweets(A, G).;false;true', '3;false,true,false;tweets(B, H), tweets(A, F).;false;true', '3;false,true,false,false;tweets(B, F), accounttype(B, I).;false;true', '3;false,true,false,false,false;tweets(B, J), tweets(K, F), tweets(K, L).;false;true', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;true;true', '3;false,true,false,false,false,false;tweets(A, M), accounttype(B, N), tweets(E, M).;false;false', '4;;follows(A, B) :- accounttype(B, C), accounttype(B, D), accounttype(A, D).;false;true', '4;false,false;tweets(A, H), tweets(I, H), tweets(I, J).;false;true', '4;false,false,false;tweets(B, K), tweets(B, L), tweets(B, M).;false;true', '4;false,false,false,false,false,false,true;tweets(W, Y), accounttype(B, Z), accounttype(W, Z).;false;false', '4;false,false,false,false,false,false;tweets(B, U), tweets(W, U), tweets(W, X).;true;false', '4;false,false,false,false,false;tweets(B, R), accounttype(A, S), accounttype(B, T).;false;true', '4;false;tweets(A, E), tweets(F, E), tweets(F, G).;false;true', '4;false,false,false,false;tweets(B, N), accounttype(B, P), accounttype(A, Q).;false;true', '5;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;true', '5;false,false;accounttype(A, F), accounttype(B, G), accounttype(A, G).;true;true', '5;false,false,false;accounttype(A, P), accounttype(B, Q).;false;true', '5;false,false,true;tweets(A, H), tweets(A, I), tweets(B, J).;false;true', '5;false,false,true,false,true;tweets(A, M), accounttype(L, G), tweets(L, N).;false;false', '5;false;accounttype(A, D), accounttype(B, E).;false;true', '5;false,false,false,false;tweets(A, R), tweets(A, S), accounttype(A, T).;false;false', '5;false,false,true,false;tweets(B, K), accounttype(L, F), tweets(L, K).;true;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(A, E).;false;true', '6;false,false;tweets(B, I), tweets(A, J), accounttype(B, K).;false;true', '6;false,false,false;tweets(B, L), tweets(A, L), accounttype(B, M).;false;true', '6;false,false,false,false,false,false;tweets(A, R), tweets(S, R), tweets(S, T).;false;true', '6;false,false,false,false,false;accounttype(B, Q), accounttype(A, Q).;false;true', '6;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;true', '6;false,false,false,false;tweets(A, N), accounttype(B, P).;false;true', '6;false,false,false,false,false,false,false;accounttype(A, U), tweets(A, W), tweets(B, X).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false,false;tweets(A, E), accounttype(B, F).;false;true', '7;false,false,false;tweets(B, G), tweets(A, H).;false;true', '7;false,false,false,false,true;tweets(A, K), tweets(B, L).;false;true', '7;false;tweets(B, D).;false;true', '7;false,false,false,false;tweets(B, I), accounttype(A, J).;true;false', '7;false,false,false,false,true,false,false;tweets(B, Q), tweets(A, R), accounttype(A, S).;false;false', '7;false,false,false,false,true,false;tweets(A, M), tweets(N, M), tweets(N, P).;false;true', '8;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, E).;false;true', '8;false,false;accounttype(A, G), accounttype(B, H), tweets(B, I).;false;true', '8;false,false,false;accounttype(A, J), tweets(A, K), tweets(B, L).;false;true', '8;false,false,false,false,false,false;accounttype(A, T), accounttype(U, T), tweets(U, W).;false;true', '8;false,false,false,false,false;tweets(B, Q), tweets(R, Q), tweets(R, S).;false;true', '8;false;accounttype(B, F), accounttype(A, F).;false;true', '8;false,false,false,false;accounttype(A, M), accounttype(B, N), tweets(A, P).;false;true', '8;false,false,false,false,false,false,false;accounttype(B, X), accounttype(Y, X), tweets(Y, Z).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,true,true;tweets(B, G), accounttype(I, H), tweets(I, J).;false;true', '9;false,true;tweets(A, G), accounttype(A, H).;true;false', '9;false,true,true,false;tweets(B, K), accounttype(B, L), tweets(F, M).;false;true', '9;false,true,true,false,false;tweets(A, N), accounttype(B, P).;false;true', '9;false;tweets(A, E), tweets(F, E), tweets(F, G).;true;false', '9;false,true,true,false,false,false,false;tweets(F, T).;false;false', '9;false,true,true,false,false,false;tweets(B, Q), tweets(R, E), tweets(R, S).;false;true']
WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(B, I), tweets(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, J), tweets(K, J), accounttype(K, L) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, M), tweets(A, N), accounttype(B, P) )
%   | | | | | then return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( accounttype(B, J), accounttype(B, K), accounttype(A, K) )
%   | | | then return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, H) )
%   | | then if ( tweets(A, I), tweets(J, I), tweets(J, K) )
%   | | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.30387554288539936;  // std dev = 13,285, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then if ( tweets(B, F), tweets(E, G), tweets(A, G) )
%   | | then return -0.07362206016921523;  // std dev = 6,374, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | | else if ( tweets(B, H), tweets(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, F), accounttype(B, I) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(B, J), tweets(K, F), tweets(K, L) )
%   | | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | | else if ( tweets(A, M), accounttype(B, N), tweets(E, M) )
%   | | | | | | then return 0.07704559109596178;  // std dev = 5,521, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else if ( accounttype(B, P), accounttype(B, Q), accounttype(A, Q) )
%   | | then return 0.08354664815741443;  // std dev = 4,687, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else return 0.3761024293344758;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.09183750717362217;  // std dev = 13,033, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then return 0.22669884295089698;  // std dev = 10,584, 563,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=380 */
%   | else if ( tweets(A, H), tweets(I, H), tweets(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, K), tweets(B, L), tweets(B, M) )
%   | | | then return 0.28289437674825535;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.07416122495211787;  // std dev = 13,023, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( accounttype(A, D), accounttype(B, E) )
%   | then return 0.1765256184752405;  // std dev = 11,124, 635,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=437 */
%   | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(A, E) )
%   then return 0.10281970105234714;  // std dev = 15,142, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.11185312016602358;  // std dev = 5,607, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else if ( tweets(B, I), tweets(A, J), accounttype(B, K) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else if ( tweets(B, L), tweets(A, L), accounttype(B, M) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(A, N), accounttype(B, P) )
%   | | | | then return 0.02656636740832885;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | | else if ( accounttype(B, Q), accounttype(A, Q) )
%   | | | | | then return -0.058791943135486815;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.1467986413054873;  // std dev = 13,163, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D) )
%   | then return -0.05421988455233107;  // std dev = 8,727, 408,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=147 */
%   | else if ( tweets(A, E), accounttype(B, F) )
%   | | then return 0.02184357259370968;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else if ( tweets(B, G), tweets(A, H) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, I), accounttype(A, J) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return -0.04949300783957818;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, E) )
%   then return 0.0559947662856786;  // std dev = 14,978, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 0.02366333859882785;  // std dev = 6,563, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( accounttype(A, G), accounttype(B, H), tweets(B, I) )
%   | | then return 0.15703333270138728;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( accounttype(A, J), tweets(A, K), tweets(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( accounttype(A, M), accounttype(B, N), tweets(A, P) )
%   | | | | then return 0.023165367109052884;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.04316999257475495;  // std dev = 14,975, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then if ( tweets(A, G), accounttype(A, H) )
%   | | then if ( tweets(B, G), accounttype(I, H), tweets(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, K), accounttype(B, L), tweets(F, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else if ( tweets(A, N), accounttype(B, P) )
%   | | | | | then return 0.013626002630813105;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | | | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.06549908849630572;  // std dev = 5,837, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
Results
   AUC ROC   = 0.756979
   AUC PR    = 0.719984
   CLL	      = -0.590432
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 57.8 seconds
Total inference time: 1.312 seconds
AUC ROC: 0.756979


Results in test set
   AUC ROC   = 0.756979
   AUC PR    = 0.719984
   CLL	      = -0.590432
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total inference time: 1.312 seconds
AUC ROC: 0.756979
Structure after Parameter Learning
[['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false,false': 'tweets(A, G), accounttype(A, H), accounttype(B, H)', 'false,false,true': 'tweets(B, I), tweets(A, I)', 'false,false,true,false,false': 'tweets(A, M), tweets(A, N), accounttype(B, P)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false,true,false': 'tweets(B, J), tweets(K, J), accounttype(K, L)'}, {'false,true': [10.946, 167, 424], 'true': [12.27, 404, 240], 'false,false,true,false,true': [0.0, 0, 0], 'false,false,true,false,false,false': [0.0, 0, 0], 'false,false,true,true': [0.0, 0, 0], 'false,false,false': [3.473, 49, 16], 'false,false,true,false,false,true': [4.609, 88, 28]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), tweets(H, G), tweets(H, I)', 'false,false,false': 'accounttype(B, J), accounttype(B, K), accounttype(A, K)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [10.946, 167, 424], 'false,false,true': [5.522, 119, 41], 'false,false,false,true': [1.604, 18, 3], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), accounttype(A, D), accounttype(B, D)', 'false': 'tweets(B, E), accounttype(A, F)', 'false,false': 'tweets(A, G), accounttype(B, H), accounttype(A, H)', 'false,false,true': 'tweets(A, I), tweets(J, I), tweets(J, K)'}, {'false,false,false': [3.464, 49, 16], 'false,true': [10.946, 167, 424], 'false,false,true,false': [0.0, 0, 0], 'false,false,true,true': [4.609, 88, 28], 'true': [12.27, 404, 240]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false,false': 'accounttype(B, P), accounttype(B, Q), accounttype(A, Q)', 'false,true': 'tweets(B, F), tweets(E, G), tweets(A, G)', 'false,true,false': 'tweets(B, H), tweets(A, F)', 'false,true,false,false': 'tweets(B, F), accounttype(B, I)', 'false,true,false,false,false': 'tweets(B, J), tweets(K, F), tweets(K, L)', 'false': 'tweets(A, D), tweets(E, D), tweets(E, F)', 'false,true,false,false,false,false': 'tweets(A, M), accounttype(B, N), tweets(E, M)'}, {'false,true,true': [6.374, 190, 61], 'false,true,false,false,true': [0.0, 0, 0], 'false,false,false': [3.446, 15, 57], 'false,false,true': [4.687, 74, 32], 'false,true,false,false,false,true': [0.0, 0, 0], 'true': [13.285, 310, 517], 'false,true,false,false,false,false,true': [5.521, 119, 41], 'false,true,false,false,false,false,false': [0.0, 0, 0], 'false,true,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(B, D), accounttype(A, D)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)', 'false,false': 'tweets(A, H), tweets(I, H), tweets(I, J)', 'false,false,false': 'tweets(B, K), tweets(B, L), tweets(B, M)'}, {'false,false,false,false': [0.0, 0, 0], 'false,true': [10.584, 183, 380], 'false,false,true': [0.0, 0, 0], 'false,false,false,true': [3.446, 15, 57], 'true': [13.033, 510, 271]}], ['follows(A, B)', {'': 'accounttype(B, C), accounttype(A, C)', 'false': 'accounttype(A, D), accounttype(B, E)'}, {'false,false': [0.0, 0, 0], 'false,true': [11.124, 198, 437], 'true': [13.023, 510, 271]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D), accounttype(A, E)', 'false,false': 'tweets(B, I), tweets(A, J), accounttype(B, K)', 'false,false,false': 'tweets(B, L), tweets(A, L), accounttype(B, M)', 'false,false,false,false,false': 'accounttype(B, Q), accounttype(A, Q)', 'false': 'tweets(B, F), tweets(B, G), tweets(B, H)', 'false,false,false,false': 'tweets(A, N), accounttype(B, P)'}, {'false,true': [5.607, 71, 86], 'false,false,true': [0.0, 0, 0], 'false,false,false,false,false,false': [0.0, 0, 0], 'true': [15.142, 500, 578], 'false,false,false,false,false,true': [1.604, 18, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [5.514, 119, 41]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, C)', 'false': 'tweets(B, D)', 'false,false': 'tweets(A, E), accounttype(B, F)', 'false,false,false': 'tweets(B, G), tweets(A, H)', 'false,false,false,false': 'tweets(B, I), accounttype(A, J)'}, {'false,true': [8.727, 261, 147], 'false,false,true': [5.514, 119, 41], 'true': [13.163, 310, 517], 'false,false,false,false,false': [1.604, 18, 3], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [0.0, 0, 0]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(B, D), tweets(A, E)', 'false': 'accounttype(B, F), accounttype(A, F)', 'false,false': 'accounttype(A, G), accounttype(B, H), tweets(B, I)', 'false,false,false': 'accounttype(A, J), tweets(A, K), tweets(B, L)', 'false,false,false,false': 'accounttype(A, M), accounttype(B, N), tweets(A, P)'}, {'false,true': [6.563, 162, 60], 'false,false,true': [3.446, 15, 57], 'true': [14.978, 500, 578], 'false,false,false,false,false': [0.0, 0, 0], 'false,false,false,true': [0.0, 0, 0], 'false,false,false,false,true': [3.026, 31, 13]}], ['follows(A, B)', {'': 'tweets(B, C), tweets(A, D)', 'false,true,true': 'tweets(B, G), accounttype(I, H), tweets(I, J)', 'false,true': 'tweets(A, G), accounttype(A, H)', 'false,true,true,false': 'tweets(B, K), accounttype(B, L), tweets(F, M)', 'false,true,true,false,false': 'tweets(A, N), accounttype(B, P)', 'false': 'tweets(A, E), tweets(F, E), tweets(F, G)'}, {'false,false': [5.837, 89, 89], 'false,true,true,false,false,false': [0.0, 0, 0], 'false,true,true,false,true': [0.0, 0, 0], 'false,true,false': [0.0, 0, 0], 'true': [14.975, 500, 578], 'false,true,true,false,false,true': [5.514, 119, 41], 'false,true,true,true': [0.0, 0, 0]}]]
******************************************
Performing Theory Revision
******************************************
Refining iteration 1
********************************
Candidate for revision
['0;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '0;false,false;tweets(A, G), accounttype(A, H), accounttype(B, H).;true;false', '0;false,false,true;tweets(B, I), tweets(A, I).;false;false', '0;false;tweets(B, E), accounttype(A, F).;false;true', '1;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '1;false;tweets(B, E), accounttype(A, F).;false;true', '1;false,false;tweets(A, G), tweets(H, G), tweets(H, I).;false;false', '2;;follows(A, B) :- tweets(B, C), accounttype(A, D), accounttype(B, D).;false;true', '2;false;tweets(B, E), accounttype(A, F).;false;true', '2;false,false;tweets(A, G), accounttype(B, H), accounttype(A, H).;false;false', '3;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '3;false,false;accounttype(B, P), accounttype(B, Q), accounttype(A, Q).;false;false', '3;false,true;tweets(B, F), tweets(E, G), tweets(A, G).;false;true', '3;false,true,false;tweets(B, H), tweets(A, F).;false;false', '3;false;tweets(A, D), tweets(E, D), tweets(E, F).;true;true', '4;;follows(A, B) :- accounttype(B, C), accounttype(B, D), accounttype(A, D).;false;true', '4;false;tweets(A, E), tweets(F, E), tweets(F, G).;false;true', '4;false,false;tweets(A, H), tweets(I, H), tweets(I, J).;false;false', '5;;follows(A, B) :- accounttype(B, C), accounttype(A, C).;false;false', '6;;follows(A, B) :- tweets(B, C), tweets(A, D), accounttype(A, E).;false;true', '6;false;tweets(B, F), tweets(B, G), tweets(B, H).;false;false', '7;;follows(A, B) :- tweets(B, C), tweets(A, C).;false;true', '7;false;tweets(B, D).;false;true', '7;false,false;tweets(A, E), accounttype(B, F).;false;false', '8;;follows(A, B) :- tweets(B, C), tweets(B, D), tweets(A, E).;false;true', '8;false;accounttype(B, F), accounttype(A, F).;false;true', '8;false,false;accounttype(A, G), accounttype(B, H), tweets(B, I).;false;true', '8;false,false,false;accounttype(A, J), tweets(A, K), tweets(B, L).;false;false', '9;;follows(A, B) :- tweets(B, C), tweets(A, D).;false;true', '9;false,true,true;tweets(B, G), accounttype(I, H), tweets(I, J).;false;true', '9;false,true;tweets(A, G), accounttype(A, H).;true;false', '9;false,true,true,false;tweets(B, K), accounttype(B, L), tweets(F, M).;false;false', '9;false;tweets(A, E), tweets(F, E), tweets(F, G).;true;false']
Refining candidate
***************************
Revision points found
Tree #1: [('false,false,true,false,true', 0), ('false,false,true,false,false,false', 0), ('false,false,true,true', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,false,false,true', 0.7586206896551724)]
Tree #2: [('false,false,false,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,true', 0.74375), ('false,false,false,true', 0.8571428571428571)]
Tree #3: [('false,false,true,false', 0), ('true', 0.6273291925465838), ('false,true', 0.7174280879864636), ('false,false,false', 0.7538461538461538), ('false,false,true,true', 0.7586206896551724)]
Tree #4: [('false,true,false,false,true', 0), ('false,true,false,false,false,true', 0), ('false,true,false,false,false,false,false', 0), ('false,true,false,true', 0), ('true', 0.6251511487303507), ('false,false,true', 0.6981132075471698), ('false,true,false,false,false,false,true', 0.74375), ('false,true,true', 0.7569721115537849), ('false,false,false', 0.7916666666666666)]
Tree #5: [('false,false,false,false', 0), ('false,false,true', 0), ('true', 0.6530089628681178), ('false,true', 0.6749555950266429), ('false,false,false,true', 0.7916666666666666)]
Tree #6: [('false,false', 0), ('true', 0.6530089628681178), ('false,true', 0.6881889763779527)]
Tree #7: [('false,false,true', 0), ('false,false,false,false,false,false', 0), ('false,false,false,true', 0), ('true', 0.536178107606679), ('false,true', 0.5477707006369427), ('false,false,false,false,true', 0.74375), ('false,false,false,false,false,true', 0.8571428571428571)]
Tree #8: [('false,false,false,true', 0), ('false,false,false,false,true', 0), ('true', 0.6251511487303507), ('false,true', 0.6397058823529411), ('false,false,true', 0.74375), ('false,false,false,false,false', 0.8571428571428571)]
Tree #9: [('false,false,false,false,false', 0), ('false,false,false,true', 0), ('true', 0.536178107606679), ('false,false,false,false,true', 0.7045454545454546), ('false,true', 0.7297297297297297), ('false,false,true', 0.7916666666666666)]
Tree #10: [('false,true,true,false,false,false', 0), ('false,true,true,false,true', 0), ('false,true,false', 0), ('false,true,true,true', 0), ('false,false', 0.5), ('true', 0.536178107606679), ('false,true,true,false,false,true', 0.74375)]


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.2308197425529239;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.5755770230859715;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(A, H), accounttype(B, H) )
%   | | then if ( tweets(B, I), tweets(A, I) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.09952824544433897;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.10430278125335847;  // std dev = 3,473, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.20033752353544818;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.4902690624267953;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), tweets(H, G), tweets(H, I) )
%   | | then return 0.10167462662337087;  // std dev = 5,522, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.0121709260721696;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), accounttype(A, D), accounttype(B, D) )
%   then return 0.16986392292757999;  // std dev = 12,270, 644,000 (wgt'ed) examples reached here.  /* #neg=404 #pos=240 */
%   else if ( tweets(B, E), accounttype(A, F) )
%   | then return 0.39314424578290846;  // std dev = 10,946, 591,000 (wgt'ed) examples reached here.  /* #neg=167 #pos=424 */
%   | else if ( tweets(A, G), accounttype(B, H), accounttype(A, H) )
%   | | then return 0.07322951036860054;  // std dev = 4,609, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | | else return 0.08230351054664768;  // std dev = 3,464, 65,000 (wgt'ed) examples reached here.  /* #neg=49 #pos=16 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.30387554288539936;  // std dev = 13,285, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(A, D), tweets(E, D), tweets(E, F) )
%   | then if ( tweets(B, F), tweets(E, G), tweets(A, G) )
%   | | then return -0.07362206016921523;  // std dev = 6,374, 251,000 (wgt'ed) examples reached here.  /* #neg=190 #pos=61 */
%   | | else if ( tweets(B, H), tweets(A, F) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.07704559109596178;  // std dev = 5,521, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | else if ( accounttype(B, I), accounttype(B, J), accounttype(A, J) )
%   | | then return 0.08354664815741443;  // std dev = 4,687, 106,000 (wgt'ed) examples reached here.  /* #neg=74 #pos=32 */
%   | | else return 0.3761024293344758;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(B, D), accounttype(A, D) )
%   then return 0.09183750717362217;  // std dev = 13,033, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then return 0.22669884295089698;  // std dev = 10,584, 563,000 (wgt'ed) examples reached here.  /* #neg=183 #pos=380 */
%   | else if ( tweets(A, H), tweets(I, H), tweets(I, J) )
%   | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | else return 0.28289437674825535;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( accounttype(B, C), accounttype(A, C) )
%   then return 0.07416122495211787;  // std dev = 13,023, 781,000 (wgt'ed) examples reached here.  /* #neg=510 #pos=271 */
%   else return 0.1765256184752405;  // std dev = 11,124, 635,000 (wgt'ed) examples reached here.  /* #neg=198 #pos=437 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D), accounttype(A, E) )
%   then return 0.10281970105234714;  // std dev = 15,142, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(B, F), tweets(B, G), tweets(B, H) )
%   | then return 0.11185312016602358;  // std dev = 5,607, 157,000 (wgt'ed) examples reached here.  /* #neg=71 #pos=86 */
%   | else return 0.016662917013742423;  // std dev = 5,754, 181,000 (wgt'ed) examples reached here.  /* #neg=137 #pos=44 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then return 0.1467986413054873;  // std dev = 13,163, 827,000 (wgt'ed) examples reached here.  /* #neg=310 #pos=517 */
%   else if ( tweets(B, D) )
%   | then return -0.05421988455233107;  // std dev = 8,727, 408,000 (wgt'ed) examples reached here.  /* #neg=261 #pos=147 */
%   | else if ( tweets(A, E), accounttype(B, F) )
%   | | then return 0.02361196703277697;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return -0.061487791448357955;  // std dev = 1,604, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(B, D), tweets(A, E) )
%   then return 0.0559947662856786;  // std dev = 14,978, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( accounttype(B, F), accounttype(A, F) )
%   | then return 0.0234815824795903;  // std dev = 6,565, 222,000 (wgt'ed) examples reached here.  /* #neg=162 #pos=60 */
%   | else if ( accounttype(A, G), accounttype(B, H), tweets(B, I) )
%   | | then return 0.15703333270138728;  // std dev = 3,446, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( accounttype(A, J), tweets(A, K), tweets(B, L) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else return 0.024774321036343774;  // std dev = 3,026, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, D) )
%   then return 0.04316999257475495;  // std dev = 14,975, 1.078,000 (wgt'ed) examples reached here.  /* #neg=500 #pos=578 */
%   else if ( tweets(A, E), tweets(F, E), tweets(F, G) )
%   | then if ( tweets(A, G), accounttype(A, H) )
%   | | then if ( tweets(B, G), accounttype(I, H), tweets(I, J) )
%   | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | else if ( tweets(B, K), accounttype(B, L), tweets(F, M) )
%   | | | | then return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | | | | else return 0.01504904877785691;  // std dev = 5,514, 160,000 (wgt'ed) examples reached here.  /* #neg=119 #pos=41 */
%   | | else return 0;  // std dev = 0,000, 0,000 (wgt'ed) examples reached here.
%   | else return 0.06435323735062562;  // std dev = 5,841, 178,000 (wgt'ed) examples reached here.  /* #neg=89 #pos=89 */
Results
   AUC ROC   = 0.756979
   AUC PR    = 0.719984
   CLL	      = -0.590218
   Precision = 0.71875 at threshold = 0.5
   Recall    = 0.652482
   F1        = 0.684015


Total learning time: 56.457 seconds
Total inference time: 0.885 seconds
AUC ROC: 0.756979


Best model AUC ROC so far: 0.756979


******************************************
Best model found
******************************************
Total revision time: 116.454
Best validation AUC ROC: 0.756979


Results
   AUC ROC   = 0.702069
   AUC PR    = 0.672564
   CLL	      = -0.627981
   Precision = 0.68 at threshold = 0.5
   Recall    = 0.588462
   F1        = 0.630928


Total inference time: 2.408 seconds
AUC ROC: 0.702069
Dataset: yeast->twitter, Fold: 2, Type: transfer, Time: 04:27:26
{'Parameter Learning results': {'F1': 0.630928, 'Learning time': 57.8, 'Recall': 0.588462, 'AUC PR': 0.672564, 'AUC ROC': 0.702069, 'CLL': -0.627981, 'Inference time': 2.309, 'Precision': [0.68, 0.5]}, 'F1': 0.630928, 'Learning time': 116.454, 'Recall': 0.588462, 'AUC PR': 0.672564, 'AUC ROC': 0.702069, 'Mapping results': {'Finding best mapping': 0.83009934425354, 'Knowledge compiling time': 0.10774874687194824, 'Total time': 6.104007005691528, 'Generating mappings time': 0.11690878868103027, 'Possible mappings': 1458, 'Generating paths time': 5.049242973327637}, 'CLL': -0.627981, 'Inference time': 2.408, 'Precision': [0.68, 0.5]}


Start learning from scratch in target domain


WILL Produced-Tree #1
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.3274885577410175;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.6472308209555876;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.05296217601159877;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.09952824544433897;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1993254056877463;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.2805627282029616;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.6498156017661795;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.15360348055405781;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 0.0010060779566550774;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #2
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.2827784354351377;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.549098241119697;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.046636589713539955;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.08697564907438803;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.17328911846492726;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.24286939416089628;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.5512112630944944;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.13385798024736764;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 8.835646163368844E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #3
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.23603293195212502;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.43557759505931615;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.04126500401346218;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.07527551940942277;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.14767008630297346;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.20427878004648498;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.43708800727225394;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.11489165900800301;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 7.758973011973755E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #4
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.19119830646834776;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.33100655161038145;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.036664104155083546;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.06458521224134921;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.1235777961205822;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.16744578820253844;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.33204979443556765;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.09726476390236147;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 6.812936799187676E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #5
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.15123627082198027;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.24844342508210263;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.032693725873089184;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.05498862653883258;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.10180665778558536;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.13435757949895957;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.2492278555378379;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.08135383101863741;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.981815657342233E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #6
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.11756904775468155;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.1876687563199241;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02924500108552499;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.04650549175860373;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.08278216065690562;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.1060397506011726;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.1883287900606578;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.06734704593186719;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 5.251750232106048E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #7
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.09031645667960987;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.14364858664523228;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.026232168413492324;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03910519567603582;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.06660456442738766;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.08267220082015268;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.14424583915059108;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.055272413639729456;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.6105298554672245E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #8
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0688390908655739;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.11150158147353458;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.02358680449047552;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.03272170158921938;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.05314094933548588;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.06388924363144032;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.11205948623285547;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.04504116859975111;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 4.0474016800404585E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #9
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.05220345901691881;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.08763955896479636;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.021253687739216147;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.027267194615232963;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.04212175139001412;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.04906676000335172;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.08816541943154743;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.03649198584382003;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.552900687251765E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
WILL Produced-Tree #10
% FOR follows(A, B):
%   if ( tweets(B, C), tweets(A, C) )
%   then if ( accounttype(A, D), accounttype(B, D) )
%   | then return 0.0394588085364301;  // std dev = 0,499, 424,000 (wgt'ed) examples reached here.  /* #neg=225 #pos=199 */
%   | else return 0.06961572907167762;  // std dev = 0,408, 403,000 (wgt'ed) examples reached here.  /* #neg=85 #pos=318 */
%   else if ( tweets(A, E), accounttype(B, F), accounttype(A, F) )
%   | then if ( tweets(B, G) )
%   | | then return -0.01918778417737564;  // std dev = 0,285, 135,000 (wgt'ed) examples reached here.  /* #neg=123 #pos=12 */
%   | | else return 0.022643236170139462;  // std dev = 0,428, 116,000 (wgt'ed) examples reached here.  /* #neg=88 #pos=28 */
%   | else if ( tweets(B, H) )
%   | | then if ( accounttype(A, I), accounttype(B, I) )
%   | | | then return 0.03321810241282451;  // std dev = 0,474, 85,000 (wgt'ed) examples reached here.  /* #neg=56 #pos=29 */
%   | | | else if ( tweets(A, J) )
%   | | | | then return 0.03751769451017392;  // std dev = 0,494, 116,000 (wgt'ed) examples reached here.  /* #neg=67 #pos=49 */
%   | | | | else return 0.07011086202405459;  // std dev = 0,406, 72,000 (wgt'ed) examples reached here.  /* #neg=15 #pos=57 */
%   | | else if ( tweets(A, K) )
%   | | | then return 0.029427786683806866;  // std dev = 0,456, 44,000 (wgt'ed) examples reached here.  /* #neg=31 #pos=13 */
%   | | | else return 3.118698576379438E-4;  // std dev = 0,350, 21,000 (wgt'ed) examples reached here.  /* #neg=18 #pos=3 */
Results
   AUC ROC   = 0.697251
   AUC PR    = 0.670471
   CLL	      = -0.637301
   Precision = 0.748549 at threshold = 0.5
   Recall    = 0.496154
   F1        = 0.596762


Total learning time: 177.322 seconds
Total inference time: 1.503 seconds
AUC ROC: 0.697251


Dataset: yeast->twitter, Fold: 2, Type: scratch, Time: 04:30:25
{'F1': 0.596762, 'Learning time': 177.322, 'Recall': 0.496154, 'AUC PR': 0.670471, 'AUC ROC': 0.697251, 'CLL': -0.637301, 'Inference time': 1.503, 'Precision': [0.748549, 0.5]}


Start learning from source dataset


